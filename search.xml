<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[看房]]></title>
      <url>http://rrkaige.com/2016/12/29/%E7%9C%8B%E6%88%BF/</url>
      <content type="html"><![CDATA[<p> 买房要多看。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161229-myblog153.jpg" alt="House"></p>
<a id="more"></a>
<p> 看房近一个月，早出晚归，大大小小共计五十余套。网上筛选，提前预约，规划路线，敲定时间和地点。寒风凛冽，坐在小电驴上赶场一般四处奔波。爬上爬下，粗看细查，每日步数遥遥领先。一日不确定，一日要继续。</p>
<p> 那些五花八门的房型，长条的，狭窄逼仄的，带储藏室的，挑高两层的，上下阁楼的，厕所在厨房的，卧室间有门的，开了眼界。毋庸置疑，便宜的总有各种各样缺点，贵的往往也并不尽善尽美。看的多了，自然有些心得想法，但也会茫然而懵逼，忘记当初的需求。</p>
<p> 今天，算是告一段落。接下来，需要理清思路，比较筛选，排列出优先级，或决定，或继续。路还很长，房要多看。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017 微信公开课]]></title>
      <url>http://rrkaige.com/2016/12/28/2017%E5%BE%AE%E4%BF%A1%E5%85%AC%E5%BC%80%E8%AF%BE/</url>
      <content type="html"><![CDATA[<p>张小龙在 2017 微信公开课上关于小程序的讲解。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161228-myblog152.jpg" alt="WeChat"></p>
<a id="more"></a>
<h3 id="从小程序看微信的产品理念"><a href="# 从小程序看微信的产品理念" class="headerlink" title="从小程序看微信的产品理念"></a>从小程序看微信的产品理念 </h3><h4 id="再次解释用完即走"><a href="# 再次解释用完即走" class="headerlink" title="再次解释用完即走"></a> 再次解释用完即走 </h4><p> 一个好的软件，一个好的工具应该让用户用完即走的。</p>
<p>任何一个工具都是帮助用户提高它的效率的，用最高效率的方法去完成它的任务，这是工具的目的，工具的使命。</p>
<p>用最短的时间去完成任务，也就是说一旦用户完成了它的任务，它就应该去做别的事情，而不是停留在产品里面，这就是用完即走的含义。</p>
<h4 id="微信是工具还是平台？"><a href="# 微信是工具还是平台？" class="headerlink" title="微信是工具还是平台？"></a>微信是工具还是平台？</h4><p>微信只是一个工具，我们应当想如何做好这个工具。一个好的工具应该有一个很强的属性，就是提高效率，用完即走。</p>
<h4 id="做产品是克制还是自我压制？"><a href="# 做产品是克制还是自我压制？" class="headerlink" title="做产品是克制还是自我压制？"></a>做产品是克制还是自我压制？</h4><p>如果说做一些事情我们要求自己很克制的话，那是一种什么样行为？那是一种自我压制的行为，但是我并不认为我们在做这样的决定时我们要自我压制，或者说自己切割掉我们很多想要做的事情，那不是一个很好的状态。</p>
<h4 id="合理性才是最重要的因素"><a href="# 合理性才是最重要的因素" class="headerlink" title="合理性才是最重要的因素"></a>合理性才是最重要的因素 </h4><p> 我们如果硬要去做这些事情是不合理的，我们会把它舍弃掉，而不是说我们要克制。</p>
<p>任何一个产品都不可能满足所有人的需求，我们必须要做很多的取舍，而我们希望更多遵从我们自己的产品理念来做这样的取舍。</p>
<h3 id="完整阐述小程序"><a href="# 完整阐述小程序" class="headerlink" title="完整阐述小程序"></a>完整阐述小程序 </h3><p> 小程序是一种不需要下载、安装即可使用的应用，它实现了触手可及的梦想，用户扫一扫或者搜一下就能打开应用，也实现了用完即走的理念，用户不用安装太多应用，应用随处可用，但又无须安装卸载。</p>
<p>小程序的特性：无须安装、触手可及、用完即走、无须卸载。</p>
<p>小程序的定位：体验比网站好，比下载 APP 更便捷。</p>
<p>本质上来说，我们更希望在智能手机里用户可以更快捷的获取服务，但是他的体验又比网站要好很多很多，同时他的麻烦程度又比他去下载一个 APP 要好很多很多，它不像下载一个 APP 那么麻烦，这个就是小程序的定位。</p>
<p>小程序的能力，包括线下扫码、对话分享、消息通知、小程序切换、历史列表、公众号关联和搜索查找等 7 大功能。</p>
<h3 id="几点问题"><a href="# 几点问题" class="headerlink" title="几点问题"></a>几点问题</h3><ul>
<li>小程序的入口在哪里？</li>
</ul>
<p>小程序在微信里是没有入口。这跟之前提到的一些产品理念相关，在微信里我们一直在倡导去中心化的结构。</p>
<ul>
<li>会不会有一个类似于小程序商店的地方，可以去下载小程序？</li>
</ul>
<p>我们没有下载过程，所以不存在一个应用商店去下载。我们认为应该没有一个中心入口，是去中心化的形态，所以我们也不会做小程序的分类、排行、推荐。</p>
<p>机器推荐和社交推荐的差异，朋友圈其实是类似于社交推荐。</p>
<ul>
<li>小程序与订阅号的关系？</li>
</ul>
<p>它只有一种访问的关系，而不是一种粉丝的关系，所以它跟公众号从本质上来说是截然不同的。小程序不是一种公众号，它是一种新的形态。</p>
<ul>
<li>小程序能不能推送消息？</li>
</ul>
<p>答案是不能。我们会提供比较有限的服务触达能力。我们会提供这样一个通知的机制，使你可以通过小程序给你的用户发送一条他所需要的通知。但这个通知不是说谁来过的小程序就能获得一条推送，而是说这个用户在小程序里面主动的确认了他需要获取一条后续的通知，所以它是一种很有限的通知的能力。</p>
<ul>
<li>小程序能不能够分享？</li>
</ul>
<p>肯定不能分享到朋友圈。但小程序可以分享到聊天里面，可以分享到群里面。</p>
<ul>
<li>小程序能不能做游戏？</li>
</ul>
<p>现在并不能。</p>
<ul>
<li>小程序能不能被搜索到？</li>
</ul>
<p>用户能搜到小程序，但是我们可以极力限制它搜索的能力，避免它滥用，使得用户在微信里面能够搜索得到他需要的一个小程序。</p>
<ul>
<li>小程序和公众号的关系是怎么样的？</li>
</ul>
<p>在公众号里可以看到企业做了哪些小程序，在小程序里也可以看到企业还做了哪些公众号。</p>
<h3 id="个人感悟"><a href="# 个人感悟" class="headerlink" title="个人感悟"></a>个人感悟 </h3><p> 微信小程序将替代使用频率低的 APP，利用二维码成为访问入口，触手可及用完即走，成为移动互联网时代的“浏览器”。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[入殓师]]></title>
      <url>http://rrkaige.com/2016/12/26/%E5%85%A5%E6%AE%93%E5%B8%88/</url>
      <content type="html"><![CDATA[<p> 开头就是个梗。初次入殓的大悟，遇到把男孩当女孩养的一家，给遗体擦身时大吃一惊。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161226-myblog150.jpg" alt="Okuribito"></p>
<a id="more"></a>
<p> 乐团解散，卖掉心爱的大提琴，大悟和妻子回到乡下祖屋。面试时的搞笑对话，“帮助人踏上旅程”。为了丰厚的薪水和妻子的笑脸，大悟不得不接受这一排斥的工作。</p>
<blockquote>
<p> 人一辈子买的最后一样东西，是由他人决定的。</p>
</blockquote>
<p> 工作第一天，作为纪录片模特，大悟被划破了脸。第一具遗体，死两周的独居老太太，吐到根本停不下来。还有身上的恶臭，抓狂地洗澡，靠性欲疗伤。拉起大提琴，弦乐悲伤，往事如烟。在河边思考人生，被社长拉去工作，见证化腐朽为神奇的化妆，获得死者家属的尊重。</p>
<blockquote>
<p> 让已经冰冷的人重新焕发生机，给她永恒的美丽。冷静，准确，温柔的情感，美丽的举动。</p>
</blockquote>
<p> 于是，泡澡，喝酒，听唱片，橘黄色灯光里的回忆。然而，事情不会一帆风顺。夜半去入殓，发小看不起，妻子不理解。苦闷愁肠，工作还得继续。舍下幼女去世的母亲，带着无数吻痕寿终正寝的老爷爷，生死之间，人生百态。直到洗澡堂的老太太去世，事情才出现转机。</p>
<blockquote>
<p> 死可能是一道门，逝去并不是终结，而是超越，走向下一程，正如门一样。</p>
</blockquote>
<p> 等到父亲去世的消息传来，天人交战。奔丧时，发现父亲手中紧握的小石头，泪眼朦胧。心结解开，生命延续，温情满满。整个影片行云流水，前后呼应。有笑点有泪点，有夫妻爱有生死观。</p>
<p> 看完特地去查，国内入殓师现状。结果，并没有如此光鲜。收入低，忌讳多，压力大，无社交。想想也是，身边从未听说过。在农村，更是家属自己动手。</p>
<p> 或许，再过二十年吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[酒精考验]]></title>
      <url>http://rrkaige.com/2016/12/25/%E9%85%92%E7%B2%BE%E8%80%83%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p> 摇摇头，甩去宿醉。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161225-myblog149.jpg" alt="Drunk"></p>
<a id="more"></a>
<p> 伟子新婚回酒，大学同学趁此机会一聚。到场十余人，酒至酣时，气氛热烈。然后，我醉了。</p>
<p> 小杯的茅台，初时不觉，后劲十足。十几杯下去，我已晕晕乎不知路矣。踉跄回宾馆，倒头就睡。鼾声起，酒气喷。醒来已半夜，头痛难耐，口干舌燥。烧水，等待，恶心欲吐。冲向厕所，掀开马桶，呼啦啦，难闻至极。抠喉咙，催吐干净，洗把脸，喝口热水，舒服多了。倒头再睡，浑身难受，翻来覆去，何时入梦不知。早起，醉眼朦胧，头昏脑涨。冲个热水澡，方如梦初醒，神清气爽。</p>
<p> 这个月第二次醉酒，都是婚宴，喜庆。大学同学好久不见，感情却更深。真是距离产生美，毕竟四年同窗朝夕相伴，失去才知珍惜。</p>
<p> 下次喝酒，得先喝杯酸奶，量力而行。爱自己，不作。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[留言与赞赏]]></title>
      <url>http://rrkaige.com/2016/12/24/%E7%95%99%E8%A8%80%E4%B8%8E%E8%B5%9E%E8%B5%8F/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 己所不欲，勿施于人。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161224-myblog148.jpg" alt="Empathy"></p>
<a id="more"></a>
<p> 关注几个微信公众号，很多文章文笔犀利入木三分，论述行业资讯，提供参考经验。看到有所收获的，对自己有益的，拍案叫绝的，产生共鸣的，忍不住赞赏几块钱。不多，就几块，依心情和钱包而定。这是对作者的尊重，也是对自己的尊重。我发现，自从付费使用一些软件以来，观念有了很大的改变。重要的是，现在的我，舍得花这样的“小钱”。</p>
<p> 网络是分享，但不一定免费。付费往往意味着更优质的内容和服务。然而，有人的地方就有江湖，网络生态的恶劣比现实犹有胜之。看一些留言，无理辱骂粗俗不堪，指手画脚趾高气昂。据作者说，还有些没放出来的更加无法入目。可想而知，这些“键盘侠”，披着网络的隐身衣，无端发泄戾气。于是，有的作者反骂回击，拉黑了事。一来一往，总让人扫兴。当然，不能说作者不对，毕竟是内容创造者。你不赞同，可以不看，可以离开，但不要无理取闹，提一大堆要求。</p>
<blockquote>
<p> 这种人好比不请自来，上人家里做客，可一进门就开始装大爷，这种人不被主人拿棒子打出去才怪。</p>
</blockquote>
<p> 重要的是，有自己的判断力，多一点同理心。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[房缘]]></title>
      <url>http://rrkaige.com/2016/12/23/%E6%88%BF%E7%BC%98/</url>
      <content type="html"><![CDATA[<p> 买房看缘分。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161223-myblog147.jpg" alt="House"></p>
<a id="more"></a>
<p> 这几个周末，频繁看房，走路跑断腿，上楼累弯腰。当然，看房经验也渐长。到现在，进房后，五分钟基本搞定。房龄，楼层，户型，学区，交通，物业，价格，一溜儿熟。然并卵，仍未看中。</p>
<p> 昨晚突来一套房，户型方正，单价极低。六层顶楼，房龄老，装修差，学区交通一般，但单价足以动人心。据说看房者众，多人有意向。今起去看，除了近似毛坯，其他都还好，特别是单价在周边一片再无二者。买来装修后，无论自住还是转手，包赚不赔。</p>
<p> 心动之下，喊来爸妈。看过之后，又去其他几处，比较之下，值。觉得不必犹豫，买吧！好，那就买。机不可失失不再来。等到下定决心，坐下来谈。哪知道房主临时变卦，嫌首付太低，已和他人约定好。只能就此作罢。</p>
<p> 如此一番，从紧张到放松，心底似乎松了口气。我知道，这个决定不容易下，毕竟不是小数目。而今仿若又从头，但心态略有不同。</p>
<p> 不强求，看房缘吧。我安慰自己，也只能如此。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[背景时代]]></title>
      <url>http://rrkaige.com/2016/12/22/%E8%83%8C%E6%99%AF%E6%97%B6%E4%BB%A3/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 这是最好的时代，也是最坏的时代，更是背景的时代。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161222-myblog146.jpg" alt="Stephen Chow"></p>
<a id="more"></a>
<p> 这几天的雾霾肆虐全国，网络各路神仙妖魔鬼怪齐出。从和菜头处，了解到力行斗霾的一毛不拔“大师”，继而发现大师成名之举是朱令铊中毒案。一番搜索，各种传闻甚嚣尘上，包括贝志诚的自述和孙维的声明。此外，又关注到复旦投毒案、佘祥林杀妻案和辛普森杀妻案。真相只有一个，外人永远不知道。</p>
<p> 当年这起搅动网络至今仍不息的案件，其中任何人的背景都不简单。天子脚下，谁都能和皇亲国戚沾上边。由此看来，这简单案件搞得如此复杂，岂不理所当然。背后势力的博弈，深水区的争斗，无非又是利益的瓜分。至于当事人，作为导火索，却忍受一生的苦痛。</p>
<p> 同学找工作，申请选调生，说想试试看。我想起来，学校之前有挂出通知。一查，发现我泱泱省会，招 38 人，其中男生 23 人。得，没戏。三代贫农，还是得靠自己吃饭。</p>
<p> 现实残酷，一碗干。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[显微镜下的大明]]></title>
      <url>http://rrkaige.com/2016/12/21/%E6%98%BE%E5%BE%AE%E9%95%9C%E4%B8%8B%E7%9A%84%E5%A4%A7%E6%98%8E/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 历史的长河奔涌浩荡，时代的车轮滚滚向前。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161221-myblog145.png" alt="Silk Book"></p>
<a id="more"></a>
<p> 文章来自和菜头的推荐，马伯庸所写。洋洋洒洒四万字，说的是明朝万历年间的徽州“丝绢案”。关于事件来龙去脉的重要文献，当事人之一程任卿所编撰的《丝绢全书》记载详细。而马伯庸则用生花妙笔将事件回溯，与当下结合，读来酣畅淋漓拍案叫绝。</p>
<p> 事件起源于徽州歙县人帅嘉谟，关于税赋“人丁丝绢”的疑问，从而引发徽州六县的明争暗斗，由此波及徽州府、应天巡抚、南京户部、当朝首辅甚至万历皇帝。上至在朝命官，下至生员百姓，或传达消息、奔走各衙，或聚众竖帜、挟持官员。为的就是利益之争。</p>
<p>8780 匹生绢，歙县独出，抑或六县承担。背后的利益集团，在大明官场的规则中，相互攻讦、算计、妥协。政府裁决和地方执行的博弈，你来我往互不相让。直到中央政府介入，寻求折中方案安抚各方，而事件肇因帅嘉谟以及一干闹事者则被果断牺牲，作为无端生事的惩罚。如此，各方满意，社会“和谐”。</p>
<p> 事件本身很简单，是人与社会将其复杂化。涉及利益之争，自然众口难调。非有大智慧大魄力不得善了。“丝绢案”最终如何解决的呢？人丁丝绢 6145 两，仍由歙县承担，减免均平银 2530 两，由另外的军需银兵饷银冲抵；其余五县维持不变。不得不说，人的智慧是无穷的，此方案集妥协、折中之大成，满足从地方到中央的需求，十年纷争至此方休。</p>
<p> 尘埃落定，帅嘉遣边戍军生死未知，程任卿狱中写书荣归故里。今天回头看，未免不可思议。但上下五千年，这都不是事儿。生活，远比小说“精彩”。书中的“历史”，掩盖太多真相。只需记住：人无完人，利益为先。</p>
<p> 透过文章，还能看到更多。当年的《丝绢全书》如此详尽，现在只有学者苦心钻研。而通过马伯庸的“翻译”，则通俗易懂受众甚多。不论何时，厚积才能薄发，结合当下研读历史总有市场。“新瓶装旧酒”，重要的是展现方式的不断创新，至于套路之下，从来都一样。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[25 岁生日记]]></title>
      <url>http://rrkaige.com/2016/12/20/25%E5%B2%81%E7%94%9F%E6%97%A5%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 生有廿五载，至今无事成。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161220-myblog144.jpg" alt="Happy Birthday"></p>
<a id="more"></a>
<p> 也不能说一无事成。毕竟，过去的 25 年，我读完了小学初中高中大学研究生，即将硕士毕业。巧的是，今天正好拍毕业照。时隔三年，我穿上硕士服。还是那个摄影师，却已不是那个我。我不知道以后还会不会进入学校继续读书，我只知道现在只想走向社会进入职场。终生学习，就我而言，已完成三分之一（四分之一当然更好）。</p>
<p> 除此之外，还有啥呢？感情一片空白，或者说一团浆糊。但我已尝试快刀斩乱麻。那些过去的，希望能随风消散。毕竟，我才 25 岁。</p>
<p> 生日这天，收到不少祝福。除去各种理财产品服务机构，真正好友的，不多。这是个忙碌的时代，彼此都有自己的世界。情感维系的成本太高，而我也不例外。关系渐淡，任其自然，时间是最好的筛选器。</p>
<p> 能与小妹一起过生日是最好的礼物。25 年来，同年同月同日同医院出生，只差一个小时的我们，关系亲如兄妹。今天，当我们许愿，吹灭蜡烛，普通的一刻，我们又长了一岁。</p>
<p> 惟愿，每天进步，明天更好。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[荒野大镖客]]></title>
      <url>http://rrkaige.com/2016/12/19/%E8%8D%92%E9%87%8E%E5%A4%A7%E9%95%96%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p> 所以，镖客三部曲配乐都是一样的么，震撼人心。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161219-myblog143.jpg" alt="A Fistful Of Dollars"></p>
<a id="more"></a>
<p> 边境的大镖客乔，单枪匹马来到小镇。雷蒙及其兄弟为首的匪徒帮，抢劫墨西哥和美国政府的军火黄金。治安官巴克斯特，利用身份中饱私囊黑白通吃。敲钟人，酒吧老板，棺材匠，还有可怜的女人玛丽莎。面对两大黑恶势力，乔作为中间人，穿针引线不断斡旋，让其火并，最终将之一网打尽。</p>
<p> 随时随地能划着的火柴，时时刻刻叼在嘴边的黑雪茄，挡风遮尘当被盖能耍帅的花色披风。爆炸声中，烟尘散去，大镖客在风沙中现身。钢板制成的简易防弹衣让雷蒙一头汗水，闪电般的左轮手枪让其他人瞬间躺地。最后，是 a.45 和来福枪的决斗，拼的是眼力和手速。镜头晃动，景物模糊，大匪首一命呜呼。当然，少不了偷袭不成从二楼围栏摔下的炮灰。音乐声中，除暴安良的大镖客，骑着马儿开始新的征程。</p>
<p> 不得不说那个年代的枪战表演实在浮夸，连血包都没有，全靠演员的肢体动作显示中弹的痛苦。倒地后涂满额头的，大概是番茄酱吧。到处是满面通红一脸汗水的镜头，演员是真心累啊。</p>
<p> 额外花絮。镖客三部曲原来是意大利西部片。而《荒野大镖客》更是翻拍自黑泽明的《用心棒》。不过，瑕不掩瑜。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[市井]]></title>
      <url>http://rrkaige.com/2016/12/18/%E5%B8%82%E4%BA%95/</url>
      <content type="html"><![CDATA[<p> 去老舅卖鱼虾的摊位，位于老城区内的菜场。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161218-myblog142.jpg" alt="Market Place"></p>
<a id="more"></a>
<p> 三七八巷菜场，几栋老小区的地下。低矮昏暗但应有尽有，人来人往络绎不绝。边上临巷的小区围墙被打通，改建成连片的店铺。鸡蛋，窝头，面条，豆腐，腌鱼，烧饼，裁缝，茶叶，水果，干果，炒货，米粮，烤鸭，皮鞋，猪肉。你想要的，通通都有。</p>
<p> 老舅在菜场口，烟酒小店门口走廊，租下拐角两平方大小地面，堪堪摆下桶盆，价格不菲。旁边卖酒酿的，小铁柜台占下半边门面，同样不便宜。算不上寸土寸金，但这周边店面也是紧俏的很。</p>
<p> 这一片做生意的多是外来人员，夫妻同在南京打拼，靠手艺吃饭。起早摸黑，挣的是辛苦钱。老舅自不必说，忙得顾不上午饭。更有直接露天做饭的，就在停车的空地中央，电瓶车上，煤气灶点火，炒菜声不绝，烟火气盘旋直上，弥漫整个小巷。</p>
<blockquote>
<p> 终日奔波苦，一刻不得闲。</p>
</blockquote>
<p> 市井之中，自有一片天地。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[果酱星球演唱会]]></title>
      <url>http://rrkaige.com/2016/12/17/%E6%9E%9C%E9%85%B1%E6%98%9F%E7%90%83%E6%BC%94%E5%94%B1%E4%BC%9A/</url>
      <content type="html"><![CDATA[<p> 第一次到演唱会现场，虽然是志愿者。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161217-myblog141.jpg" alt="Jam"></p>
<a id="more"></a>
<p> 半个月前，在某个公众号推送文章中看到果酱星球演唱会的消息。在此之前，我对国内独立音乐人一知半解。当时粗粗查阅，果酱音乐前身摇滚客，专注于音乐媒体，做音乐人和渠道之间的第三方。</p>
<p> 这次，果酱音乐准备搞个大新闻——果酱星球演唱会。没见过世面的我，决定去拓宽下眼界，何况就在我这附近呢，十五分钟脚程。买票的时候，价格还行，但我犹豫了下。先上官网看看，然后就发现演唱会在招志愿者。呦吼，这还用说，赶紧报名。</p>
<p> 报名时间已过，但这难不倒我。下面有组织者的联系方式，打电话过去，表达强烈意愿。加微信，等了几天，事成。为此，我放弃了监考赚回六级报名费的机会。</p>
<p> 等到昨天，现场布置。志愿者的工作一如既往，贴座位牌，发小物品。和其他人闲聊，我就是个菜鸟。不过没事，做个倾听者不错，听老司机说那些“光辉历程”。突然明白，这也是个小圈子，而我，无意间闯入。</p>
<p> 演唱会前，作为场内引导，我站在门口，看见各色观众。年轻的姑娘小伙，或独自一人，或情侣成双，或三五成群，满脸欢心，蹦蹦跳跳，显然真爱粉。至于拖家带口大爷大妈熊孩子，显然是赠票观众，不可避免。</p>
<p> 演唱会开始，诺大的太阳宫内济济一堂。不可撤销打头热场，门口的我跟着节奏跺脚，风太冷！等我进场，李博的玫瑰子弹点燃全场，引发一波小高潮。大伙离开座位挤到台前，疯狂喊叫，举起双手，跟着节奏摇摆。在我面前，翻滚着热浪，空气躁动，硬摇的灵魂在燃烧。等到苏紫旭上场，人群返回座位，但热情不减。疯狂小提琴，悠扬长号，颤抖吉他，闪烁射灯，狂热粉丝在尖叫。我站起身，情不自禁跟着音乐晃腿。从呢喃低语到撕心裂肺，诗意温婉又荡气回肠。项亚蕻出场，血红色屏幕，血红色灯光，鲜红炽烈的摇滚海洋中，带着死亡的重金属充斥耳膜，嘶吼炸裂一切。我在外面吃饭，里面欢呼不绝。再进去，台上已是何大河。一曲猪老三，婉转惺忪痴狂缠绵呐喊嘶吼，这四季的花烧的热烈彻底。台下的姑娘小伙卖力舞动，至竭方休。等到木玛上台，剩下的多是铁粉。一曲摇滚，一二三 go！架子鼓在跳跃，吉他在蹦跶，观众台在震动，躁起来！情绪传染似火，场面一片火爆。后面姑娘敲着荧光棒，跳跃的前排不知疲倦。无需任何言语，只用享受此刻的疯魔。最后一曲结束，大伙不舍离场。</p>
<p> 等到把座位贴撕完，我的志愿者身份就此结束。感觉不错，算是有趣的尝试。如有机会，下次见识见识大的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[童年霸凌事]]></title>
      <url>http://rrkaige.com/2016/12/16/%E7%AB%A5%E5%B9%B4%E9%9C%B8%E5%87%8C%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p> 连日来，北京中关村二小校园霸凌事件不断发酵，不禁想起童年时那些霸凌或被霸凌的过去。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161216-myblog140.jpg" alt="Bully"></p>
<a id="more"></a>
<p> 我出生在农村，先后在三处上过幼儿园。每天用小瓶带糖水上学，那个穷苦的年代，有糖水喝也是种幸福。然而，有天午睡起来发现瓶子空空糖水没了，是误喝还是偷喝我不知道，只是渴了一下午，至今记忆犹新。</p>
<p> 小学举家搬到镇上，起初人生地不熟，我又从小害羞，没见过世面，属于回答问题都紧张脸红的代表。幸运的是，我的学习能力不错，很快就出类拔萃。有成绩打底，我信心渐增，和大伙玩到一起，交了不少朋友，形成了自己的小圈子。</p>
<p> 有了圈子，基本上远离了被霸凌。通俗的说法，我们这帮“成绩好的”，和那帮“成绩差的”，基本上井水不犯河水。那帮人高马大身强力壮的“刺头”，自有欺负的对象，很少与我们发生冲突。当然，我不是个安分的主，三年级时还和同学用唾液大战，现在想来真是恶心。</p>
<p> 四年级，我成了班长，并一直到大学结束。仿若约定俗成，我再没受过欺负。但有两件事至今仍记得。</p>
<p> 五六年级，和几个“坏小子”，欺负班上的“肯德基”。“肯德基”家庭贫困又成绩极差，整天脏兮兮乱糟糟的，坐在最后面垃圾桶旁边，自然成了大家“打击”的对象。“坏小子”们时不时前去找茬，骂几句打几下并乐此不疲。而我也曾参与一次放学后的追逐，穿街过巷，直到把他赶回家中。</p>
<p> 初一时，我和同桌小明前排黄毛，欺负另一个前排小亮。我们用圆规的尖针互相攻击，找出一大堆理由诡辩，诸如你越界你碰到我之类，使自己的行为合理化。偶尔小打小闹变成真红了脸，大打出手后又息事宁人，如此反复。</p>
<p> 除此之外，互相取外号更是司空见惯。现在想来，虽然有时玩笑成分居多，没有造成严重后果，但或许无意中也成了霸凌。</p>
<p> 我不惹事，也不怕事，和“刺头”们适当保持距离。因为家教极严，而闹出事肯定得面对家长老师。因此，总是谨小慎微，内心警钟长鸣。</p>
<p> 今天的学校和我们当年镇上小学已完全不同。和菜头对于避免校园霸凌总结出三个办法：打，以牙还牙；众，团结同学；友，化敌为友。</p>
<p> 这是没有办法的办法。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[纯黑的噩梦]]></title>
      <url>http://rrkaige.com/2016/12/15/%E7%BA%AF%E9%BB%91%E7%9A%84%E5%99%A9%E6%A2%A6/</url>
      <content type="html"><![CDATA[<p> 剧场版让人越发失望，名字没起错，真是噩梦。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161215-myblog139.jpg" alt="Detective Conan The Darkest Nightmare"></p>
<a id="more"></a>
<p> 作为侦探的本职工作，破案没有，甚至连凶手都没有。从头到尾，飞车追逐，高空打斗，机枪扫射，完全成了日本公安、FBI、黑衣组织和柯南等人的一场动作片大战。</p>
<p> 一个突然冒出来的银发异瞳大姐姐库拉索，她窃取资料，坠海失忆，和少年侦探团愉快玩耍；她飞檐走壁，几十米高空跳下都不带喘气；她恢复记忆后回心转意，驾驶吊车阻止失控的摩天轮壮烈牺牲。还能更扯么……</p>
<p> 能，柯南的伸缩吊带足球腰带脚力增强鞋，已经成为万能工具，每次都能在最后违反科学定律强行挽救剧情。少年侦探团依旧拖后腿，灰原哀几乎没有存在感，小兰和毛利小五郎早就成了酱油党。</p>
<p> 画面效果也差，人物线条粗犷比例失调动作僵硬，大场面更是粗糙，竟然有种 Flash 的错觉。不无恶意地猜想，黑夜大战莫不就是因为画面制作起来相对容易？</p>
<p> 唯一的优点，恐怕就是雨露均沾，主要人物都有出场台词，总算没有白白领盒饭。如此看来，更像是柯南角色大放送，敌我双方也是你中有我我中有你，难怪这么多年仍然不相上下。</p>
<p> 或许是太苛求了吧。追剧这么多年，明显感觉到质量不断下降。宛若鸡肋，食之无味弃之可惜。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我要 K 歌]]></title>
      <url>http://rrkaige.com/2016/12/14/%E6%88%91%E8%A6%81K%E6%AD%8C/</url>
      <content type="html"><![CDATA[<p>KTV，去的不多，算是“麦霸”。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161214-myblog138.jpg" alt="KTV"></p>
<a id="more"></a>
<p> 唱歌，从小只能算喜爱，但不擅长。老爸爱听戏，嗓子不错，但我没有继承。听得多，唱的少，往往只会几句高潮。</p>
<p> 第一次去 KTV，应该是高考结束后。同学聚会，酒足饭饱，自然去 KTV 嗨皮。都是兄弟姐妹，自然无所顾忌，也不管破音跑调，拼的就是嗓门大，吼出来再说。</p>
<p> 进了大学，班上颇有几位唱将。再去 KTV，就得掂量掂量，不能虎头蛇尾地唱上几句，徒增笑谈。大多时候，成了鼓掌助威的听众。</p>
<p> 直到去重庆那次，在 KTV 嘶吼，喉咙仿若突然打开。这之后，一发不可收拾，点歌，拿麦，come on，扭起来。“麦霸”由此诞生。</p>
<p> 其实，不常去 KTV，朋友都不是爱 K 歌的主，有空宁愿打牌。偶尔的几次，倒是我最活跃。谈不上热衷，玩的是气氛。</p>
<p> 近来，再去 KTV，心态已然不同。想来，该练习几首，作为保留节目。娱乐，娱己并乐人矣。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[黄金三镖客]]></title>
      <url>http://rrkaige.com/2016/12/13/%E9%BB%84%E9%87%91%E4%B8%89%E9%95%96%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p> 这开头的音乐，口哨声甩鞭声马蹄声，配合阵阵枪声，直叫人头皮战栗发麻，跃跃欲舞。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161213-myblog137.jpg" alt="The Good the Bad and the Ugly"></p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5025749&auto=1&height=66"></iframe>

<p> 一个混乱的年代，南北战争期间，美国西部，这是 20 万美元引发的故事。</p>
<p>Good，除暴安良的牛仔；Bad，阴险狡诈的杀手；Ugly，十恶不赦的大盗。牛仔帽，雪茄，马靴，左轮手枪，这就是三镖客。</p>
<p>Bad 出场，那个骡子拉转盘带动轮毂取水的简易齿轮装置，很有意思。心狠手辣的他为了宝藏，一路追踪，出尔反尔，杀人如麻。</p>
<p>Good 和 Ugly 是一对活宝，互相利用惩罚相爱相杀。误把一身灰的北方军当做南方军，大唱赞歌被俘。合作干掉 Bad 手下时配合默契，弹无虚发。用担架抬着炸药包去炸桥，完事后趴在战壕里睡觉打呼。Good 用大炮把 Ugly 轰下马，Ugly 在墓地里奔跑跳跃。</p>
<p> 最后，三人比枪，站成三角，眼的扫视打量，手的颤抖微动，汗的冒出滑落，气的屏息凝神。“砰”地一声，Bad 命丧黄泉。“砰”的一声，Ugly 死里逃生。马蹄纷飞，Good 逐渐远去。</p>
<p> 黄金三镖客，不仅关于黄金。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[血战钢锯岭]]></title>
      <url>http://rrkaige.com/2016/12/12/%E8%A1%80%E6%88%98%E9%92%A2%E9%94%AF%E5%B2%AD/</url>
      <content type="html"><![CDATA[<p> 血战，空气里弥漫着血腥气。钢锯岭，就像一把钢锯，无情地收割人命。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161212-myblog136.jpg" alt="Hacksaw Ridge"></p>
<a id="more"></a>
<p> 多斯，童年险杀兄弟，父亲酗酒家暴，因而抗拒杀戮。于是，当他参军训练，宁可上军事法庭，也不愿拿起枪。一番波折后，多斯破例奔赴战场。钢锯岭争夺战，枪林弹雨中，他冒死挽回 75 个战友的生命。英雄就此诞生。</p>
<p> 剧情大概如此，当然少不了铺垫夸张和修饰。但历史确有其人。关于信仰的探讨姑且不论，后半段的战争场面确实惊心动魄，令人屏息凝滞，战壕噩梦那一幕简直惊恐吓人。总的来说，值回票价。</p>
<p> 最后，只想问一句，哥哥哈尔去哪了？</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[天空之城]]></title>
      <url>http://rrkaige.com/2016/12/11/%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 根要扎在土壤里，和风一起生存，和种子一起过冬，和鸟儿一起歌颂春天，无论你拥有多么强大的武器，也不管你控制了多少可怜的机器人，只要离开土地，就没办法生存。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161211-myblog135.jpg" alt="Castle in the Sky"></p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26121323&auto=1&height=66"></iframe>

<p> 音乐响起的时候，旋律如此熟悉。</p>
<p> 希达，罗希达，“天空之城”拉普达王族的后裔，祖传的飞行石和咒语。巴鲁，看到“天空之城”的飞行冒险家的儿子，旷工技师的学徒。穆斯卡，拉普达王族的另一支后裔，政府情报机关的特务。朵拉，空中海贼的头领，面恶心善的老太婆。</p>
<p> 夺宝的贪欲，掌权的野心，守护的信念，飞行的梦想，追捕与逃跑，温柔与残暴，操纵与反抗，破坏与拯救，关于人性和未来的思考。</p>
<p> 地下矿洞里，石头闪烁微光，仿若星河。海盗船顶，云层相随，夜空辽阔。初抵“天空之城”，鸟语花香，草木葳蕤，古老的建筑诉说着光辉的历史。安静的画面，柔美的音乐，请不要说话。</p>
<p> 当毁灭的咒语响起，拉普达随之解体，高科技的武器坠入海中，带着飞行石结晶的生命之树则消失在远方。</p>
<p> 一个腐朽的时代彻底消失了。</p>
<p> 新的时代来临了。</p>
<p> 真正的天空之城，永远在心中。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[纠结的谎言]]></title>
      <url>http://rrkaige.com/2016/12/10/%E7%BA%A0%E7%BB%93%E7%9A%84%E8%B0%8E%E8%A8%80/</url>
      <content type="html"><![CDATA[<p> 人生在世，难免说谎。不管善意恶意，本质总是谎言。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161210-myblog134.gif" alt="Truth Lies"></p>
<a id="more"></a>
<p> 既然说谎，就要圆谎。为了圆第一个谎而撒第二个谎，为了圆第二个谎而撒第三个谎，似乎可以无穷无尽，但事不过三，往往很快就会左突右支难以招架。</p>
<p> 量的积累会产生质的变化。谎言的叠加总有拆穿的时刻，赤裸相见就尴尬了。这不单是面子问题，更是个人信用问题。人们往往只会记住你的坏不会记住你的好。同样，说谎的标签一旦贴上，后续就是无尽麻烦。信用的成本很高，一旦透支，悔之晚矣。</p>
<p> 在一些重大事情上，万不可有取巧之心。嘴一滑简单，不出事很难。不可抗时及时打住才能止损，碰运气拿不准不说，非得要有强大的心理素质和万全的善后措施。这种事少做为妙不做最好，一步走错满盘皆输，舍得二字自有大智慧。</p>
<p> 没有谎言，也就不必纠结。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[蜜三刀]]></title>
      <url>http://rrkaige.com/2016/12/09/%E8%9C%9C%E4%B8%89%E5%88%80/</url>
      <content type="html"><![CDATA[<p> 万能的后街，街角的糕点店，一天到晚总是忙碌。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161209-myblog133.jpg" alt="Honey Mito"></p>
<a id="more"></a>
<p> 第一次吃，并不知道名字。</p>
<p>“这叫啥？”“蜜三刀。”“啥？”“蜜三刀！”“怎么写？”“蜂蜜的蜜，三刀就是三刀。”说着，竖掌比划三下。</p>
<p> 哦，明白了，奇怪的名字，过耳不忘。</p>
<p> 味道不错，甜甜的，酥软的，吃一块停不下嘴，直到消灭干净。默念贪嘴，下不为例。</p>
<p> 上网一查，嘿，名气不小。宫廷御点，徐州特色小吃，起源还与苏东坡扯上关系。蜜是饴糖，三刀即表面三道痕。</p>
<p> 原来如此，涨了姿势。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[清醒的昏睡]]></title>
      <url>http://rrkaige.com/2016/12/08/%E6%B8%85%E9%86%92%E7%9A%84%E6%98%8F%E7%9D%A1/</url>
      <content type="html"><![CDATA[<p> 经常处在清醒的昏睡中，意识像喷发后的岩浆，缓慢流淌。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161208-myblog132.jpeg" alt="Nap"></p>
<a id="more"></a>
<p> 这习惯应该发端于高中，养成于大学，发作于时不时。那些无聊的课堂，微暖的阳光撒下来，老师的声音从极远处飘来。我晃晃脑袋，清醒片刻，又复迷糊。但我的眼睛依然睁开，我的视线还在书本，我的潜意识似乎看懂了那些文字，我还会装模作样地点头应声。这是种神奇的状态，仿若神游，又似入定。</p>
<p> 真的是困倦到极点，而我又不能睡，只能杵着脑袋，通过些许动作表明自己清醒。意识沉入大海，脑袋完全放空。像树下飘荡的落叶，像水面打旋的扁舟，像无根的浮萍，像吹散的蒲公英。飘飘乎如遗世独立，羽化而登仙。</p>
<p> 当脑袋快要垂下，总会惊觉弹起，继而重复摇摆。直到力不可支突然醒来，仿佛拨云见日雨后天晴，晃晃脑袋，前所未有的清醒，世界都一下清楚好多。这大概是身体自我调节的一种方式，或许，也叫打盹。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[那些年追过的网络剧]]></title>
      <url>http://rrkaige.com/2016/12/07/%E9%82%A3%E4%BA%9B%E5%B9%B4%E8%BF%BD%E8%BF%87%E7%9A%84%E7%BD%91%E7%BB%9C%E5%89%A7/</url>
      <content type="html"><![CDATA[<p> 那些年，沉迷各种网络剧无法自拔。形形色色，给我打开新世界的无数大门。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161207-myblog131.jpg" alt="Network Drama"></p>
<a id="more"></a>
<p> 那时候，从周一到周日，不间断等待更新成为常态。在这期间，作为一个强迫症完美主义者，我会追本溯源，把历史更新全部刷完，然后刷同系列其他作品，同作者其他作品，同类型其他作品，直到刷无可刷，身心俱爽。由此，脉络即通，神功初成。</p>
<p> 我打开的第一扇大门应该是默默的《微播江湖》，每周搜罗微博上搞笑视频，加上独具特色的配音，简短不乏精彩。同时期还有猴子的《人人那些事》，瞄准人人话题。高中同学主演的《这不是大学》，关于大学，值得一笑。可惜，而今都已停播。</p>
<p> 配音团队“胥渡吧”和“淮秀帮”，恶搞经典，吐槽时事。《飞碟说》以及后来的《飞碟一分钟》，Flash 动画 + 配音，戏说常识。《大鹏嘚吧嘚》，脱口秀节目，足够搞笑。直到大鹏的《屌丝男士》横空出世，掀起一波网络剧热潮，开启全明星模式。这之后，于莎莎的《极品女士》远不如矣。</p>
<p> 等到“万万系列”崛起，一时风光无俩。卤蛋叫兽易小星，白客《万万没想到》，刘循子墨《报告老板》，葛布《学姐知道》，小爱《名侦探狄仁杰》，张本煜《大侠黄飞鸿》《高科技少女喵》，柯达《奇妙的东方》，孔连顺百变造型……不知不觉，万合天宜已经如此强大。当然，还有老湿的《不吐不快》《搜神记》《英雄谱》《大宝鉴》，那些小众精品，绝对够味。</p>
<p> 以《暴走大事件》为核心，以《暴走看啥片》《脑残师兄》《王尼美快报》等等等等为周边的“暴走系列”，王尼玛，唐马儒，张全蛋，赵铁柱，纸巾老撕，匹诺曹，刘木子，王尼美……一个个看到名字就想到头像的标识。</p>
<p>B 站，从不缺少传奇。微小微，把舞跳遍世界，坦然面对路人的羞耻女神。女孩为何穿短裙，伊丽莎白鼠，鬼畜界的杠把子，把元首玩坏了的男人。</p>
<p> 当然，少不了 papi 酱，一个集美貌与才华于一身的女人，凭借短视频，火箭班蹿红，受大众追捧，被资本热炒，而今，成为“神话”。</p>
<p> 断断续续盘点，有些印象深刻，大多早已忘记。现在想来，很久没接触，生活照常并无影响。</p>
<p> 回顾那些年追过的网络剧，一笑了之。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[村里爱情故事]]></title>
      <url>http://rrkaige.com/2016/12/06/%E6%9D%91%E9%87%8C%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p> 阿明和阿珍，村里爱情故事。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161206-myblog130.jpg" alt="Happy Marriage"></p>
<a id="more"></a>
<p> 收到请柬，欣然前往。新人都是村里一辈的，从小一起长大。今日喜结良缘，总算梦想成真。</p>
<p> 一帮村里小伙伴，多年不见，陌生中透着熟悉。推杯换盏，觥筹交错，几年不喝酒的我，彻底醉了。</p>
<p> 遥想当年，上幼儿园，转战三地，小学初中，都算认识。这些年来，不曾联系，直到今天，再次谈起。</p>
<p> 那时候……那个谁……没想到……是的哎……对啊对啊……来来来，再来一杯。</p>
<p> 就这样，举杯叙旧情，醉酒戴月归。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[梦中心结]]></title>
      <url>http://rrkaige.com/2016/12/05/%E6%A2%A6%E4%B8%AD%E5%BF%83%E7%BB%93/</url>
      <content type="html"><![CDATA[<p> 为什么？</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161205-myblog129.jpg" alt="Dream"></p>
<a id="more"></a>
<p> 依稀记得，梦中的自己，吼出这句话。</p>
<p> 都说日有所思夜有所梦，但我白天未思，许久不念，她却又生生闯进梦来。搅一池碧水，生一波涟漪。</p>
<p> 场景都忘了，只记得问出这句，却没有答复。我恍然明悟在梦中，我至今没有获得答案。又或者，我明明知道，但我仍未接受。</p>
<p> 我便知道，我的心结依旧未解。真是令人灰心丧气的发现啊。</p>
<p> 为什么？下定决心，划清界限。还会时不时地想起。</p>
<p> 为什么？念念不忘，并无回响。还要忍受这无尽的折磨。</p>
<p> 果真是无可救药了么。</p>
<p> 难怪挥慧剑斩情丝的人，能够心坚似铁转身成仙。说放就放者，自不被红尘所累，又何惧刀山剑海。</p>
<p> 如此苦炼，分明在一丝丝泼灭我的热火，抽尽我的心血，榨干我的柔情，击碎我的信念。寒心变顽石，顽石化齑粉。齑粉何所去，留待明日花。</p>
<p> 用文字发泄出来，或许会好点吧。</p>
<p> 仍寻一剂良药，止痛生津，抚慰心伤。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[买房路]]></title>
      <url>http://rrkaige.com/2016/12/04/%E4%B9%B0%E6%88%BF%E8%B7%AF/</url>
      <content type="html"><![CDATA[<p> 终于走上这条路，可惜已面目全非。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161204-myblog128.jpg" alt="House"></p>
<a id="more"></a>
<p> 这座历史名城，六朝古都，二线城市，正在向特大型城市迈步。房价自然疯长，近一年更是噌噌噌上窜，欲与京沪广比高。</p>
<p> 工作已定，不得不考虑住处。选项很简单，无外乎买与租。看现在局势，限购限贷一出，暂时刹住涨势，但稳中有升。大家都在观望，讨论甚嚣尘上。</p>
<p> 既然是刚需，无需多想。买房自住，省却租房费用和种种不便。新房既偏且贵，多是期房，优先选择还是二手房。二十年房龄内，户型方正，楼层适中，简装即可，交通要便捷，学区是其次。</p>
<p> 想法很美好，现实很残酷。房价之高，真正去看才深有体会。今年一年，每平米涨五千都不是事儿。年前或许垫垫脚还能够着，现在却只能望而兴叹。房价略低者，或低楼层，采光不好；或顶楼层，屋顶渗漏；或户型怪异，或客厅昏暗，或厕所逼仄。总是不如意，关键，在于价钱。</p>
<p> 怎么办？继续看呗。脚蹬自行车，穿过大街小巷。很多小区，以前都来过，但当时从未升起买房的心思。寒风呼啸，路灯昏黄，想起四年前曾一家人来南京看房，觉得不合适没买成，后续就没继续。去县城看房，最终也不了了之。机会很多，但都错失。直到逼不得已，才幡然醒悟。</p>
<blockquote>
<p>“傻傻”的来，“傻傻”的买，“傻傻”的挣了几十万；“精明”的算，“精明”的看，“精明”的一年又白干。</p>
</blockquote>
<p> 这次，我根据地图，划定区域，定好标准，逐条删选，实地看房。几周下来，了解不少。买房，不能急，心态要端正，也不能拖，看准就下手。买到心仪的房子，也是种缘分。</p>
<p> 买房路难，且看且行。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[地球脉动]]></title>
      <url>http://rrkaige.com/2016/12/03/%E5%9C%B0%E7%90%83%E8%84%89%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>《地球脉动》第二季，前三集看罢，唯感叹生命残酷的美丽。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161203-myblog127.jpg" alt="Planet Earth"></p>
<a id="more"></a>
<p> 岛屿篇。流居偏远小岛上的侏三趾树懒，为找对象不得不跋树涉水。体型庞大流着哈喇子的科莫多巨蜥，为了争夺领地和交配权大打出手。刚出生的小海鬣蜥躲避群蛇围追堵截，张牙舞爪的爬行让人好笑又紧张，一旦失误就是死亡，好在它运用跑酷般的神走位，成功蛇口逃生。新西兰信天翁，苦等同伴归来，开心地跳起贴面舞。白玄鸥会遭遇偷吃蛋的塞舌尔织雀，黑燕鸥会被皮孙木种子缠身。五千万红蟹，繁殖大迁徙的盔甲洪流，却死于外来长足捷蚁之口。颊带企鹅在风浪中搏杀，轮流为养育子女奔波，摇晃的背影却稳如泰山。</p>
<p> 山脉篇。努比亚羱羊在陡峭的山沿腾跃，躲避赤狐追杀，难以想象其强大的弹跳能力。金雕在天空滑翔，为争一口冷食大打出手。棕熊从雪洞醒来，跋涉返回林间，背靠大树，边蹭边扭，一起摇摆。山猫听音辨位，扎进厚厚雪层逮老鼠，蹿上树干抓松鼠。山兔鼠在岩石上迎着初阳慵懒休憩，呼噜声声。火烈鸟在冰面踉跄而行，时而失足落水，时而成群结队，像芭蕾舞演员般优雅踱步。雪豹，高山王者，用尿液划分领地，一生注定孤单。</p>
<p> 丛林篇。大狐猴在林间纵跃，蜘蛛猴学着爬树。德拉科蜥蜴偷吃蚂蚁，立旗警告，然后纵身一跳，滑翔于林间。刀嘴蜂鸟在花间采蜜，在树枝上磨喙。雨中丛林的每一帧都美到爆。水豚在岸边观望， 水獭在水中嬉戏，凯门鳄张着嘴，在河面逡巡游弋。真正的丛林王者美洲豹，连鳄鱼也是它的晚餐。玻璃蛙和大黄蜂的护卵之争。雄性极乐鸟销魂的舞姿，魔鬼的步伐，千方百计展示自己，吸引雌鸟。</p>
<p> 如此看来，生存和繁殖就是动物的本能，当然包括人类自己。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL 学习笔记之三]]></title>
      <url>http://rrkaige.com/2016/11/30/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/sql/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161130-myblog124.jpg" alt="Code SQL Database"></p>
<a id="more"></a>
<h3 id="CREATE-DATABASE-Statement"><a href="#CREATE-DATABASE-Statement" class="headerlink" title="CREATE DATABASE Statement"></a>CREATE DATABASE Statement</h3><p>The <strong>CREATE DATABASE</strong> statement is used to create a database.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CREATE DATABASE dbname;</div></pre></td></tr></table></figure>
<h3 id="CREATE-TABLE-Statement"><a href="#CREATE-TABLE-Statement" class="headerlink" title="CREATE TABLE Statement"></a>CREATE TABLE Statement</h3><p>The <strong>CREATE TABLE</strong> statement is used to create a table in a database. Tables are organized into rows and columns; and each table must have a name.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE table_name</div><div class="line">(</div><div class="line">column_name1 data_type(size),</div><div class="line">column_name2 data_type(size),</div><div class="line">column_name3 data_type(size),</div><div class="line">....</div><div class="line">);</div></pre></td></tr></table></figure>
<ul>
<li>The column_name parameters specify the names of the columns of the table.</li>
<li>The data_type parameter specifies what type of data the column can hold (e.g. varchar, integer, decimal, date, etc.).</li>
<li>The size parameter specifies the maximum length of the column of the table.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">PersonID int,</div><div class="line">LastName varchar(255),</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255)</div><div class="line">);</div></pre></td></tr></table></figure>
<h3 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h3><p>SQL constraints are used to specify rules for the data in a table. If there is any violation between the constraint and the data action, the action is aborted by the constraint.</p>
<p>Constraints can be specified when the table is created (inside the CREATE TABLE statement) or after the table is created (inside the ALTER TABLE statement).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE table_name</div><div class="line">(</div><div class="line">column_name1 data_type(size) constraint_name,</div><div class="line">column_name2 data_type(size) constraint_name,</div><div class="line">column_name3 data_type(size) constraint_name,</div><div class="line">....</div><div class="line">);</div></pre></td></tr></table></figure>
<h4 id="NOT-NULL-Constraint"><a href="#NOT-NULL-Constraint" class="headerlink" title="NOT NULL Constraint"></a>NOT NULL Constraint</h4><p>The <strong>NOT NULL</strong> constraint enforces a column to NOT accept NULL values.</p>
<p>The NOT NULL constraint enforces a field to always contain a value. This means that you cannot insert a new record, or update a record without adding a value to this field.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE PersonsNotNull</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255)</div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="UNIQUE-Constraint"><a href="#UNIQUE-Constraint" class="headerlink" title="UNIQUE Constraint"></a>UNIQUE Constraint</h4><p>The <strong>UNIQUE</strong> constraint uniquely identifies each record in a database table.</p>
<p>The UNIQUE and PRIMARY KEY constraints both provide a guarantee for uniqueness for a column or set of columns. A PRIMARY KEY constraint automatically has a UNIQUE constraint defined on it.</p>
<p><strong>Note:</strong> You can have many UNIQUE constraints per table, but only one PRIMARY KEY constraint per table.</p>
<ul>
<li>UNIQUE Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255),</div><div class="line">CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName)</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>UNIQUE Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ADD CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName)</div></pre></td></tr></table></figure>
<ul>
<li>DROP a UNIQUE Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">DROP CONSTRAINT uc_PersonID</div></pre></td></tr></table></figure>
<h4 id="PRIMARY-KEY-Constraint"><a href="#PRIMARY-KEY-Constraint" class="headerlink" title="PRIMARY KEY Constraint"></a>PRIMARY KEY Constraint</h4><p>The <strong>PRIMARY KEY</strong> constraint uniquely identifies each record in a database table.</p>
<p>Primary keys must contain UNIQUE values. A primary key column cannot contain NULL values.</p>
<p>Most tables should have a primary key, and each table can have only ONE primary key.</p>
<ul>
<li>PRIMARY KEY Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255),</div><div class="line">CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)</div><div class="line">)</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In the example above there is only ONE PRIMARY KEY (<code>pk_PersonID</code>). However, the VALUE of the primary key is made up of TWO COLUMNS (<code>P_Id</code> + <code>LastName</code>).</p>
<ul>
<li>PRIMARY KEY Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ADD CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If you use the ALTER TABLE statement to add a primary key, the primary key column(s) must already have been declared to not contain NULL values (when the table was first created).</p>
<ul>
<li>DROP a PRIMARY KEY Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">DROP CONSTRAINT pk_PersonID</div></pre></td></tr></table></figure>
<h4 id="FOREIGN-KEY-Constraint"><a href="#FOREIGN-KEY-Constraint" class="headerlink" title="FOREIGN KEY Constraint"></a>FOREIGN KEY Constraint</h4><p>A <strong>FOREIGN KEY</strong> in one table points to a PRIMARY KEY in another table.</p>
<p>The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.</p>
<p>The FOREIGN KEY constraint also prevents invalid data from being inserted into the foreign key column, because it has to be one of the values contained in the table it points to.</p>
<ul>
<li>FOREIGN KEY Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Orders</div><div class="line">(</div><div class="line">O_Id int NOT NULL,</div><div class="line">OrderNo int NOT NULL,</div><div class="line">P_Id int,</div><div class="line">PRIMARY KEY (O_Id),</div><div class="line">CONSTRAINT fk_PerOrders FOREIGN KEY (P_Id)</div><div class="line">REFERENCES Persons(P_Id)</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>FOREIGN KEY Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Orders</div><div class="line">ADD CONSTRAINT fk_PerOrders</div><div class="line">FOREIGN KEY (P_Id)</div><div class="line">REFERENCES Persons(P_Id)</div></pre></td></tr></table></figure>
<ul>
<li>DROP a FOREIGN KEY Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Orders</div><div class="line">DROP CONSTRAINT fk_PerOrders</div></pre></td></tr></table></figure>
<h4 id="CHECK-Constraint"><a href="#CHECK-Constraint" class="headerlink" title="CHECK Constraint"></a>CHECK Constraint</h4><p>The <strong>CHECK</strong> constraint is used to limit the value range that can be placed in a column.</p>
<p>If you define a CHECK constraint on a single column it allows only certain values for this column.</p>
<p>If you define a CHECK constraint on a table it can limit the values in certain columns based on values in other columns in the row.</p>
<ul>
<li>CHECK Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255),</div><div class="line">CONSTRAINT chk_Person CHECK (P_Id&gt;0 AND City=&apos;Sandnes&apos;)</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>CHECK Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ADD CONSTRAINT chk_Person CHECK (P_Id&gt;0 AND City=&apos;Sandnes&apos;)</div></pre></td></tr></table></figure>
<ul>
<li>DROP a CHECK Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">DROP CONSTRAINT chk_Person</div></pre></td></tr></table></figure>
<h4 id="DEFAULT-Constraint"><a href="#DEFAULT-Constraint" class="headerlink" title="DEFAULT Constraint"></a>DEFAULT Constraint</h4><p>The <strong>DEFAULT</strong> constraint is used to insert a default value into a column.</p>
<p>The default value will be added to all new records, if no other value is specified.</p>
<ul>
<li>DEFAULT Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255) DEFAULT &apos;Sandnes&apos;</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>DEFAULT Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ALTER COLUMN City SET DEFAULT &apos;SANDNES&apos;</div></pre></td></tr></table></figure>
<ul>
<li>DROP a DEFAULT Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ALTER COLUMN City DROP DEFAULT</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL 学习笔记之二]]></title>
      <url>http://rrkaige.com/2016/11/29/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/sql/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161129-myblog123.jpg" alt="SQL"></p>
<a id="more"></a>
<h3 id="Aliases"><a href="#Aliases" class="headerlink" title="Aliases"></a>Aliases</h3><p>SQL aliases are used to give a database table, or a column in a table, a temporary name. Basically aliases are created to make column names more readable.</p>
<ul>
<li>SQL Alias Syntax for Columns</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT column_name AS alias_name</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT CustomerName, Address+&apos;, &apos;+City+&apos;, &apos;+PostalCode+&apos;, &apos;+Country AS Address</div><div class="line">FROM Customers;</div></pre></td></tr></table></figure>
<ul>
<li>SQL Alias Syntax for Tables</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name AS alias_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT o.OrderID, o.OrderDate, c.CustomerName</div><div class="line">FROM Customers AS c, Orders AS o</div><div class="line">WHERE c.CustomerName=&quot;Around the Horn&quot; AND c.CustomerID=o.CustomerID;</div></pre></td></tr></table></figure>
<p>Aliases can be useful when:</p>
<ul>
<li>There are more than one table involved in a query</li>
<li>Functions are used in the query</li>
<li>Column names are big or not very readable</li>
<li>Two or more columns are combined together</li>
</ul>
<h3 id="Joins"><a href="#Joins" class="headerlink" title="Joins"></a>Joins</h3><p>An SQL <strong>JOIN</strong> clause is used to combine rows from two or more tables, based on a common field between them.</p>
<h4 id="INNER-JOIN-Keyword"><a href="#INNER-JOIN-Keyword" class="headerlink" title="INNER JOIN Keyword"></a>INNER JOIN Keyword</h4><p>The <strong>INNER JOIN</strong> keyword selects all rows from both tables as long as there is a match between the columns in both tables.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">INNER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> INNER JOIN is the same as JOIN.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">FROM Customers</div><div class="line">INNER JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID</div><div class="line">ORDER BY Customers.CustomerName;</div></pre></td></tr></table></figure>
<h4 id="LEFT-JOIN-Keyword"><a href="#LEFT-JOIN-Keyword" class="headerlink" title="LEFT JOIN Keyword"></a>LEFT JOIN Keyword</h4><p>The <strong>LEFT JOIN</strong> keyword returns all rows from the left table (table1), with the matching rows in the right table (table2). The result is NULL in the right side when there is no match.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">LEFT JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">LEFT OUTER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In some databases LEFT JOIN is called LEFT OUTER JOIN.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">FROM Customers</div><div class="line">LEFT JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID</div><div class="line">ORDER BY Customers.CustomerName;</div></pre></td></tr></table></figure>
<h4 id="RIGHT-JOIN-Keyword"><a href="#RIGHT-JOIN-Keyword" class="headerlink" title="RIGHT JOIN Keyword"></a>RIGHT JOIN Keyword</h4><p>The <strong>RIGHT JOIN</strong> keyword returns all rows from the right table (table2), with the matching rows in the left table (table1). The result is NULL in the left side when there is no match.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">RIGHT JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">RIGHT OUTER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In some databases RIGHT JOIN is called RIGHT OUTER JOIN.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Orders.OrderID, Employees.FirstName</div><div class="line">FROM Orders</div><div class="line">RIGHT JOIN Employees</div><div class="line">ON Orders.EmployeeID=Employees.EmployeeID</div><div class="line">ORDER BY Orders.OrderID;</div></pre></td></tr></table></figure>
<h4 id="FULL-OUTER-JOIN-Keyword"><a href="#FULL-OUTER-JOIN-Keyword" class="headerlink" title="FULL OUTER JOIN Keyword"></a>FULL OUTER JOIN Keyword</h4><p>The <strong>FULL OUTER JOIN</strong> keyword returns all rows from the left table (table1) and from the right table (table2).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">FULL OUTER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">FROM Customers</div><div class="line">FULL OUTER JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID</div><div class="line">ORDER BY Customers.CustomerName;</div></pre></td></tr></table></figure>
<h3 id="UNION-Operator"><a href="#UNION-Operator" class="headerlink" title="UNION Operator"></a>UNION Operator</h3><p>The <strong>UNION</strong> operator is used to combine the result-set of two or more SELECT statements.</p>
<p>Notice that each SELECT statement within the UNION must have the same number of columns. The columns must also have similar data types. Also, the columns in each SELECT statement must be in the same order.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s) FROM table1</div><div class="line">UNION</div><div class="line">SELECT column_name(s) FROM table2;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The UNION operator selects only distinct values by default. To allow duplicate values, use the ALL keyword with UNION.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s) FROM table1</div><div class="line">UNION ALL</div><div class="line">SELECT column_name(s) FROM table2;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The column names in the result-set of a UNION are usually equal to the column names in the first SELECT statement in the UNION.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT City, Country FROM Customers</div><div class="line">WHERE Country=&apos;Germany&apos;</div><div class="line">UNION ALL</div><div class="line">SELECT City, Country FROM Suppliers</div><div class="line">WHERE Country=&apos;Germany&apos;</div><div class="line">ORDER BY City;</div></pre></td></tr></table></figure>
<h3 id="SELECT-INTO-Statement"><a href="#SELECT-INTO-Statement" class="headerlink" title="SELECT INTO Statement"></a>SELECT INTO Statement</h3><p>The <strong>SELECT INTO</strong> statement selects data from one table and inserts it into a new table.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">INTO newtable [IN externaldb]</div><div class="line">FROM table1;</div></pre></td></tr></table></figure>
<p>The new table will be created with the column-names and types as defined in the SELECT statement. You can apply new names using the AS clause.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">INTO CustomersOrderBackup2013</div><div class="line">FROM Customers</div><div class="line">LEFT JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> The SELECT INTO statement can also be used to create a new, empty table using the schema of another. Just add a WHERE clause that causes the query to return no data:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">INTO newtable</div><div class="line">FROM table1</div><div class="line">WHERE 1=0;</div></pre></td></tr></table></figure>
<h3 id="INSERT-INTO-SELECT-Statement"><a href="#INSERT-INTO-SELECT-Statement" class="headerlink" title="INSERT INTO SELECT Statement"></a>INSERT INTO SELECT Statement</h3><p>The <strong>INSERT INTO SELECT</strong> statement selects data from one table and inserts it into an existing table. Any existing rows in the target table are unaffected.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table2</div><div class="line">SELECT * FROM table1;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table2</div><div class="line">(column_name(s))</div><div class="line">SELECT column_name(s)</div><div class="line">FROM table1;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">INSERT INTO Customers (CustomerName, Country)</div><div class="line">SELECT SupplierName, Country FROM Suppliers</div><div class="line">WHERE Country=&apos;Germany&apos;;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL 学习笔记之一]]></title>
      <url>http://rrkaige.com/2016/11/28/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p> 学习 SQL，教程来自 <a href="http://www.w3schools.com/sql/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161128-myblog122.png" alt="SQL"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>SQL is a standard language for accessing and manipulating databases.</p>
<ul>
<li>SQL stands for <strong>Structured Query Language</strong></li>
<li>SQL lets you access and manipulate databases</li>
<li>SQL is an ANSI (American National Standards Institute) standard</li>
</ul>
<p><strong>Note:</strong> Most of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!</p>
<p>To build a web site that shows data from a database, you will need:</p>
<ul>
<li>An RDBMS database program (i.e. MS Access, SQL Server, MySQL)</li>
<li>To use a server-side scripting language, like PHP or ASP</li>
<li>To use SQL to get the data you want</li>
<li>To use HTML / CSS</li>
</ul>
<p>RDBMS stands for <strong>Relational Database Management System</strong>.</p>
<p>RDBMS is the basis for SQL, and for all modern database systems such as MS SQL Server, IBM DB2, Oracle, MySQL, and Microsoft Access.</p>
<p>The data in RDBMS is stored in database objects called tables. A table is a collection of related data entries and it consists of columns and rows.</p>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>SQL keywords are <strong>NOT case sensitive</strong>: select is the same as SELECT.</p>
<p>Some database systems require a semicolon at the end of each SQL statement. Semicolon is the standard way to separate each SQL statement in database systems that allow more than one SQL statement to be executed in the same call to the server.</p>
<h3 id="SELECT-Statement"><a href="#SELECT-Statement" class="headerlink" title="SELECT Statement"></a>SELECT Statement</h3><p>The <strong>SELECT</strong> statement is used to select data from a database. The result is stored in a result table, called the <strong>result-set</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT column_name,column_name</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers;</div></pre></td></tr></table></figure>
<h3 id="SELECT-DISTINCT-Statement"><a href="#SELECT-DISTINCT-Statement" class="headerlink" title="SELECT DISTINCT Statement"></a>SELECT DISTINCT Statement</h3><p>In a table, a column may contain many duplicate values; and sometimes you only want to list the different (distinct) values.</p>
<p>The <strong>DISTINCT</strong> keyword can be used to return only distinct (different) values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT DISTINCT column_name,column_name</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT DISTINCT City FROM Customers;</div></pre></td></tr></table></figure>
<h3 id="WHERE-Clause"><a href="#WHERE-Clause" class="headerlink" title="WHERE Clause"></a>WHERE Clause</h3><p>The <strong>WHERE</strong> clause is used to extract only those records that fulfill a specified criterion.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name,column_name</div><div class="line">FROM table_name</div><div class="line">WHERE column_name operator value;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE Country=&apos;Mexico&apos;;</div></pre></td></tr></table></figure>
<p>SQL requires single quotes around text values (most database systems will also allow double quotes). However, numeric fields should not be enclosed in quotes:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE CustomerID=1;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td>Equal</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>Not equal. Note: In some versions of SQL this operator may be written as !=</td>
</tr>
<tr>
<td>&gt;</td>
<td>Greater than</td>
</tr>
<tr>
<td>&lt;</td>
<td>Less than</td>
</tr>
<tr>
<td>&gt;=</td>
<td>Greater than or equal</td>
</tr>
<tr>
<td>&lt;=</td>
<td>Less than or equal</td>
</tr>
<tr>
<td>BETWEEN</td>
<td>Between an inclusive range</td>
</tr>
<tr>
<td>LIKE</td>
<td>Search for a pattern</td>
</tr>
<tr>
<td>IN</td>
<td>To specify multiple possible values for a column</td>
</tr>
</tbody>
</table>
<h3 id="AND-amp-OR-Operators"><a href="#AND-amp-OR-Operators" class="headerlink" title="AND &amp; OR Operators"></a>AND &amp; OR Operators</h3><p>The <strong>AND</strong> &amp; <strong>OR</strong> operators are used to filter records based on more than one condition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE Country=&apos;Germany&apos;</div><div class="line">AND (City=&apos;Berlin&apos; OR City=&apos;München&apos;);</div></pre></td></tr></table></figure>
<h3 id="ORDER-BY-Keyword"><a href="#ORDER-BY-Keyword" class="headerlink" title="ORDER BY Keyword"></a>ORDER BY Keyword</h3><p>The <strong>ORDER BY</strong> keyword is used to sort the result-set by one or more columns.</p>
<p>The ORDER BY keyword sorts the records in ascending order by default. To sort the records in a descending order, you can use the DESC keyword.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name, column_name</div><div class="line">FROM table_name</div><div class="line">ORDER BY column_name ASC|DESC, column_name ASC|DESC;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">ORDER BY Country ASC, CustomerName DESC;</div></pre></td></tr></table></figure>
<h3 id="INSERT-INTO-Statement"><a href="#INSERT-INTO-Statement" class="headerlink" title="INSERT INTO Statement"></a>INSERT INTO Statement</h3><p>The <strong>INSERT INTO</strong> statement is used to insert new records in a table.</p>
<p>It is possible to write the INSERT INTO statement in two forms.</p>
<ul>
<li>The first form does not specify the column names where the data will be inserted, only their values:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table_name</div><div class="line">VALUES (value1,value2,value3,...);</div></pre></td></tr></table></figure>
<ul>
<li>The second form specifies both the column names and the values to be inserted:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table_name (column1,column2,column3,...)</div><div class="line">VALUES (value1,value2,value3,...);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO Customers (CustomerName, City, Country)</div><div class="line">VALUES (&apos;Cardinal&apos;, &apos;Stavanger&apos;, &apos;Norway&apos;);</div></pre></td></tr></table></figure>
<h3 id="UPDATE-Statement"><a href="#UPDATE-Statement" class="headerlink" title="UPDATE Statement"></a>UPDATE Statement</h3><p>The <strong>UPDATE</strong> statement is used to update existing records in a table.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UPDATE table_name</div><div class="line">SET column1=value1,column2=value2,...</div><div class="line">WHERE some_column=some_value;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The WHERE clause specifies which record or records that should be updated. If you omit the WHERE clause, all records will be updated!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UPDATE Customers</div><div class="line">SET ContactName=&apos;Alfred Schmidt&apos;, City=&apos;Hamburg&apos;</div><div class="line">WHERE CustomerName=&apos;Alfreds Futterkiste&apos;;</div></pre></td></tr></table></figure>
<h3 id="DELETE-Statement"><a href="#DELETE-Statement" class="headerlink" title="DELETE Statement"></a>DELETE Statement</h3><p>The <strong>DELETE</strong> statement is used to delete rows in a table.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DELETE FROM table_name</div><div class="line">WHERE some_column=some_value;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The WHERE clause specifies which record or records that should be deleted. If you omit the WHERE clause, all records will be deleted!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DELETE FROM Customers</div><div class="line">WHERE CustomerName=&apos;Alfreds Futterkiste&apos; AND ContactName=&apos;Maria Anders&apos;;</div></pre></td></tr></table></figure>
<p>It is possible to delete all rows in a table without deleting the table. This means that the table structure, attributes, and indexes will be intact:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DELETE FROM table_name;</div><div class="line"></div><div class="line">or</div><div class="line"></div><div class="line">DELETE * FROM table_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Be very careful when deleting records. You cannot undo this statement!</p>
<h3 id="Injection"><a href="#Injection" class="headerlink" title="Injection"></a>Injection</h3><p>SQL injection is a technique where malicious users can inject SQL commands into an SQL statement, via web page input.</p>
<p>Injected SQL commands can alter SQL statement and compromise the security of a web application.</p>
<h4 id="Based-on-1-1-is-Always-True"><a href="#Based-on-1-1-is-Always-True" class="headerlink" title="Based on 1=1 is Always True"></a>Based on 1=1 is Always True</h4><p>A smart hacker might get access to all the user names and passwords in a database by simply inserting <code>105 or 1=1</code> into the input box.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT UserId, Name, Password FROM Users WHERE UserId = 105 or 1=1;</div></pre></td></tr></table></figure>
<h4 id="Based-on-“”-””-is-Always-True"><a href="#Based-on-“”-””-is-Always-True" class="headerlink" title="Based on “”=”” is Always True"></a>Based on “”=”” is Always True</h4><p>A smart hacker might get access to user names and passwords in a database by simply inserting <code>&quot; or &quot;&quot;=&quot;</code> into the user name or password text box.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Users WHERE Name =&quot;&quot; or &quot;&quot;=&quot;&quot; AND Pass =&quot;&quot; or &quot;&quot;=&quot;&quot;</div></pre></td></tr></table></figure>
<h4 id="Based-on-Batched-SQL-Statements"><a href="#Based-on-Batched-SQL-Statements" class="headerlink" title="Based on Batched SQL Statements"></a>Based on Batched SQL Statements</h4><p>Most databases support batched SQL statement, separated by semicolon.</p>
<p>User id: <code>105; DROP TABLE Suppliers</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Users WHERE UserId = 105; DROP TABLE Suppliers</div></pre></td></tr></table></figure>
<h4 id="Parameters-for-Protection"><a href="#Parameters-for-Protection" class="headerlink" title="Parameters for Protection"></a>Parameters for Protection</h4><p>Some web developers use a “blacklist” of words or characters to search for in SQL input, to prevent SQL injection attacks.</p>
<p>This is not a very good idea. Many of these words (like delete or drop) and characters (like semicolons and quotation marks), are used in common language, and should be allowed in many types of input.</p>
<p>(In fact it should be perfectly legal to input an SQL statement in a database field.)</p>
<p>The only proven way to protect a web site from SQL injection attacks, is to use <strong>SQL parameters</strong>.</p>
<p>SQL parameters are values that are added to an SQL query at execution time, in a controlled manner.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">txtUserId = getRequestString(&quot;UserId&quot;);</div><div class="line">txtSQL = &quot;SELECT * FROM Users WHERE UserId = @0&quot;;</div><div class="line">db.Execute(txtSQL,txtUserId);</div></pre></td></tr></table></figure>
<p>Note that parameters are represented in the SQL statement by a @ marker.</p>
<p>The SQL engine checks each parameter to ensure that it is correct for its column and are treated literally, and not as part of the SQL to be executed.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">txtNam = getRequestString(&quot;CustomerName&quot;);</div><div class="line">txtAdd = getRequestString(&quot;Address&quot;);</div><div class="line">txtCit = getRequestString(&quot;City&quot;);</div><div class="line">txtSQL = &quot;INSERT INTO Customers (CustomerName,Address,City) Values(@0,@1,@2)&quot;;</div><div class="line">db.Execute(txtSQL,txtNam,txtAdd,txtCit);</div></pre></td></tr></table></figure>
<h3 id="SELECT-TOP-Clause"><a href="#SELECT-TOP-Clause" class="headerlink" title="SELECT TOP Clause"></a>SELECT TOP Clause</h3><p>The <strong>SELECT TOP</strong> clause is used to specify the number of records to return.</p>
<p><strong>Note:</strong> Not all database systems support the SELECT TOP clause.</p>
<ul>
<li>SQL Server / MS Access Syntax</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT TOP number|percent column_name(s)</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT TOP 50 PERCENT * FROM Customers;</div></pre></td></tr></table></figure>
<ul>
<li>MySQL Syntax</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">LIMIT number;</div></pre></td></tr></table></figure>
<ul>
<li>Oracle Syntax</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE ROWNUM &lt;= number;</div></pre></td></tr></table></figure>
<h3 id="LIKE-Operator"><a href="#LIKE-Operator" class="headerlink" title="LIKE Operator"></a>LIKE Operator</h3><p>The <strong>LIKE</strong> operator is used in a WHERE clause to search for a specified pattern in a column.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE column_name LIKE pattern;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;s%&apos;;</div></pre></td></tr></table></figure>
<p>Using the <strong>NOT</strong> keyword allows you to select records that do NOT match the pattern.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE Country NOT LIKE &apos;%land%&apos;;</div></pre></td></tr></table></figure>
<h3 id="Wildcards"><a href="#Wildcards" class="headerlink" title="Wildcards"></a>Wildcards</h3><p>A wildcard character can be used to substitute for any other character(s) in a string.</p>
<p>In SQL, wildcard characters are used with the SQL LIKE operator. SQL wildcards are used to search for data within a table. </p>
<table>
<thead>
<tr>
<th>Wildcard</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>%</td>
<td>A substitute for zero or more characters</td>
</tr>
<tr>
<td>_</td>
<td>A substitute for a single character</td>
</tr>
<tr>
<td>[charlist]</td>
<td>Sets and ranges of characters to match</td>
</tr>
<tr>
<td>[^charlist] or [!charlist]</td>
<td>Matches only a character NOT specified within the brackets</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;L_n_on&apos;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;[a-c]%&apos;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;[!bsp]%&apos;;</div></pre></td></tr></table></figure>
<h3 id="IN-Operator"><a href="#IN-Operator" class="headerlink" title="IN Operator"></a>IN Operator</h3><p>The <strong>IN</strong> operator allows you to specify multiple values in a WHERE clause.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE column_name IN (value1,value2,...);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City IN (&apos;Paris&apos;,&apos;London&apos;);</div></pre></td></tr></table></figure>
<h3 id="BETWEEN-Operator"><a href="#BETWEEN-Operator" class="headerlink" title="BETWEEN Operator"></a>BETWEEN Operator</h3><p>The <strong>BETWEEN</strong> operator is used to select values within a range. The values can be numbers, text, or dates.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE column_name BETWEEN value1 AND value2;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Products</div><div class="line">WHERE (Price BETWEEN 10 AND 20)</div><div class="line">AND NOT CategoryID IN (1,2,3);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Products</div><div class="line">WHERE ProductName BETWEEN &apos;C&apos; AND &apos;M&apos;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Orders</div><div class="line">WHERE OrderDate BETWEEN #07/04/1996# AND #07/09/1996#;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>In some databases, BETWEEN selects fields that are between and excluding the test values.</li>
<li>In other databases, BETWEEN selects fields that are between and including the test values.</li>
<li>And in other databases, BETWEEN selects fields between the test values, including the first test value and excluding the last test value.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[总是糊涂]]></title>
      <url>http://rrkaige.com/2016/11/27/%E6%80%BB%E6%98%AF%E7%B3%8A%E6%B6%82/</url>
      <content type="html"><![CDATA[<p> 感情的世界里，我总是糊涂。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161127-myblog121.jpg" alt="Pursuit Of Happiness"></p>
<a id="more"></a>
<p> 理想主义？应该是幼稚吧。自认为看得很清，其实是众人当中最傻一个。感情洁癖？或许是孤芳自赏。无限意淫，想的是遥远的乌托邦。无法抉择？大概是博爱作祟。眼前是五颜六色花儿，心中是色彩斑斓世界。</p>
<p> 想太多，往往自作多情；想太多，往往作茧自缚；想太多，往往擦肩而过；想太多，往往一无所得。</p>
<p> 我本将心向明月，奈何明月照沟渠。曾经沧海难为水，除却巫山不是云。</p>
<p> 从一见钟情，到心如止水。从满腔热血，到心如死灰。从至死不渝，到随心所欲。从洁身自爱，到自暴自弃。是世界太快？抑或我走太慢？</p>
<p> 我不懂，我糊涂，我抓狂，我止躁。我痛如刀割，我舔舐伤口，我冷眼旁观，我欲语还休。我默默嚼碎，生生咽下，我拍拍胸口，强作欢颜。抹一把泪花，摔落在尘烬，转身，不见。</p>
<p> 亲爱的，妳在哪？我只怕，我坚持不到。我只怕，我等待不来。</p>
<p> 或许，我该孤独一生。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[风之谷]]></title>
      <url>http://rrkaige.com/2016/11/26/%E9%A3%8E%E4%B9%8B%E8%B0%B7/</url>
      <content type="html"><![CDATA[<p> 如果不是因为画质，很难相信这是一部八十年代的作品。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161126-myblog120.jpg" alt="Nausicaä of the Valley of the Wind"></p>
<a id="more"></a>
<p> 这个故事，有着独立的世界架构。1000 年后，孢子植物统治世界，空气中布满毒素，人类和腐海的斗争不息，国家间的冲突不断，看着恶心实质净化世界的王虫，毁灭世界只能苟延残喘的巨神兵。看完总觉得不完整，后来才知道是根据漫画改编，原始剧情则更加丰满宏大。</p>
<p> 娜乌西卡，风之谷的公主。她越过高山，跨过平原，她救了所有人，唯独她的父亲，和她自己。也许，她守住了自己的信念。大爱，不分敌我。</p>
<p> 我还能说什么呢，唯有欣赏。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[不了之人，宫崎骏]]></title>
      <url>http://rrkaige.com/2016/11/25/%E4%B8%8D%E4%BA%86%E4%B9%8B%E4%BA%BA%EF%BC%8C%E5%AE%AB%E5%B4%8E%E9%AA%8F/</url>
      <content type="html"><![CDATA[<p> 看这部纪录片的时候，莫名感动。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161125-myblog119.jpg" alt="Hayao Miyazaki"></p>
<a id="more"></a>
<p>75 岁高龄的宫崎骏，退休三年的老爷子，准备再次出山，尝试之前一直抵触的 CG 技术，制作长篇动画。</p>
<blockquote>
<p> 和什么都不做就死了相比，在制作中死去要好得多。做点什么总比等死强。</p>
</blockquote>
<p>《风之谷》，《天空之城》，《龙猫》，《魔女宅急便》，《红猪》，《幽灵公主》，《千与千寻》，《哈尔的移动城堡》，《悬崖上的金鱼姬》，《虞美人盛开的山坡》，《起风了》……</p>
<p> 绝对高产，高质量，由此成就一个传奇。当年看《龙猫》《千与千寻》《悬崖上的金鱼姬》，里面天马行空的想象传递出的爱和美好，总能直击人心中最柔软的一处。</p>
<p> 荣光背后，是手绘的无比艰辛。据说，《起风了》中一段四秒钟镜头，足足花了一年多时间。如此专注，艺人和匠人的完美结合。</p>
<p> 试想，如果每年能完成一件让自己满意的事，大概也就五十件吧。</p>
<p> 时不我待。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[原创何在]]></title>
      <url>http://rrkaige.com/2016/11/24/%E5%8E%9F%E5%88%9B%E4%BD%95%E5%9C%A8/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 熙来攘往的中国电视，终于容不下这唯一一档以原创为核心的音乐真人秀，慨当以叹！——刘欢 </p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161124-myblog118.jpg" alt="Monkey King: Hero Is Back"></p>
<a id="more"></a>
<p> 食堂，电视正播放某个音乐选秀节目，女歌手翻唱一首英文歌，声嘶力竭，极其熟悉。突然发现很无聊，当年也追过这类节目，现在觉得就是浪费时间。一场场秀，除了翻唱还是翻唱，或许有不同的味道，大多依然平淡无奇。节目的噱头更多在于灯光乐器舞蹈外貌故事，谁还去关注音乐本身呢。回顾往年节目，又有几个选手真正闯出一片天。娱乐罢了。</p>
<p> 网易云音乐最近总推送日语歌，听到太多熟悉的旋律。原来，华语翻唱如此之多。底下评论中，如我一般惊讶者不少，看来大家都在井底呆太久。现在想来，杰伦作为中国风开创者确实功不可没。</p>
<p> 开头是最近刘欢老师的感慨，《中国好歌曲》据说要停摆。纷扰的世界，大环境和小环境都不适应吧。回想那时，听到《野子》，《悟空》，《卷珠帘》的惊喜，至今仍在。可惜可叹。</p>
<p> 看音乐界的原创如此艰难，纷纷扰扰净是唯利主义。其他行业何尝不是？软件，同样抄袭成风，开源也是步履维艰。两者的平衡，如此难以把控。生活的重担，如何能说放就放？短暂的一生，到底该怎样活？</p>
<p> 但愿，浮世之中，能保持一颗初心。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=33162226&auto=1&height=66"></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JQuery 学习笔记之三]]></title>
      <url>http://rrkaige.com/2016/11/23/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161123-myblog117.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Traversing"><a href="#Traversing" class="headerlink" title="Traversing"></a>Traversing</h3><p>jQuery traversing, which means “move through”, are used to “find” (or select) HTML elements based on their relation to other elements. Start with one selection and move through that selection until you reach the elements you desire.</p>
<ul>
<li>An ancestor is a parent, grandparent, great-grandparent, and so on.</li>
<li>A descendant is a child, grandchild, great-grandchild, and so on.</li>
<li>Siblings share the same parent.</li>
</ul>
<h3 id="Ancestors"><a href="#Ancestors" class="headerlink" title="Ancestors"></a>Ancestors</h3><p>Three useful jQuery methods for traversing up the DOM tree are:</p>
<ul>
<li>The <code>parent()</code> method returns the direct parent element of the selected element. This method only traverse a single level up the DOM tree.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parent().css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>parents()</code> method returns all ancestor elements of the selected element, all the way up to the document’s root element (<code>&lt;html&gt;</code>). You can also use an optional parameter to filter the search for ancestors.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parents(&quot;ul&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>parentsUntil()</code> method returns all ancestor elements between two given arguments.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parentsUntil(&quot;div&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Descendants"><a href="#Descendants" class="headerlink" title="Descendants"></a>Descendants</h3><p>Two useful jQuery methods for traversing down the DOM tree are:</p>
<ul>
<li>The <code>children()</code> method returns all direct children of the selected element. This method only traverse a single level down the DOM tree. You can also use an optional parameter to filter the search for children.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).children().css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).children(&quot;p.first&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>find()</code> method returns descendant elements of the selected element, all the way down to the last descendant.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).find(&quot;*&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Siblings"><a href="#Siblings" class="headerlink" title="Siblings"></a>Siblings</h3><ul>
<li>The <code>siblings()</code> method returns all sibling elements of the selected element. You can also use an optional parameter to filter the search for siblings.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;h2&quot;).siblings(&quot;p&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>next()</code> method returns the next sibling element of the selected element.</li>
<li>The <code>nextAll()</code> method returns all next sibling elements of the selected element.</li>
<li>The <code>nextUntil()</code> method returns all next sibling elements between two given arguments.</li>
<li>The <code>prev()</code>, <code>prevAll()</code> and <code>prevUntil()</code> methods work just like the methods above but with reverse functionality: they return previous sibling elements (traverse backwards along sibling elements in the DOM tree, instead of forward).</li>
</ul>
<h3 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h3><ul>
<li>The <code>first()</code> method returns the first element of the selected elements.</li>
<li>The <code>last()</code> method returns the last element of the selected elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div p&quot;).first().css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>eq()</code> method returns an element with a specific index number of the selected elements. The index numbers start at 0, so the first element will have the index number 0 and not 1.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;p&quot;).eq(1).css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>filter()</code> method lets you specify a criteria. Elements that do not match the criteria are removed from the selection, and those that match will be returned.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;p&quot;).filter(&quot;.intro&quot;).css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>not()</code> method returns all elements that do not match the criteria.</li>
</ul>
<p><strong>Tip:</strong> The <code>not()</code> method is the opposite of <code>filter()</code>.</p>
<h3 id="AJAX-load-Method"><a href="#AJAX-load-Method" class="headerlink" title="AJAX load() Method"></a>AJAX load() Method</h3><p>The <code>load()</code> method loads data from a server and puts the returned data into the selected element.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).load(URL,data,callback);</div></pre></td></tr></table></figure>
<ul>
<li>The required URL parameter specifies the URL you wish to load.</li>
<li>The optional data parameter specifies a set of querystring key/value pairs to send along with the request.</li>
<li>The optional callback parameter is the name of a function to be executed after the <code>load()</code> method is completed.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).load(&quot;demo_test.txt #p1&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The optional callback parameter specifies a callback function to run when the <code>load()</code> method is completed. The callback function can have different parameters:</p>
<ul>
<li>responseTxt - contains the resulting content if the call succeeds</li>
<li>statusTxt - contains the status of the call</li>
<li>xhr - contains the XMLHttpRequest object</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).load(&quot;demo_test.txt&quot;, function(responseTxt, statusTxt, xhr)&#123;</div><div class="line">            if(statusTxt == &quot;success&quot;)</div><div class="line">                alert(&quot;External content loaded successfully!&quot;);</div><div class="line">            if(statusTxt == &quot;error&quot;)</div><div class="line">                alert(&quot;Error: &quot; + xhr.status + &quot;: &quot; + xhr.statusText);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="AJAX-get-and-post-Methods"><a href="#AJAX-get-and-post-Methods" class="headerlink" title="AJAX get() and post() Methods"></a>AJAX get() and post() Methods</h3><p>The <code>$.get()</code> method requests data from the server with an HTTP GET request.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.get(URL,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $.get(&quot;demo_test.asp&quot;, function(data, status)&#123;</div><div class="line">            alert(&quot;Data: &quot; + data + &quot;\nStatus: &quot; + status);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter of <code>$.get()</code> is the URL we wish to request (“demo_test.asp”).</li>
<li>The second parameter is a callback function. The first callback parameter holds the content of the page requested, and the second callback parameter holds the status of the request.</li>
</ul>
<p><strong>Tip:</strong> Here is how the ASP file looks like (“demo_test.asp”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">response.write(&quot;This is some text from an external ASP file.&quot;)</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<p>The <code>$.post()</code> method requests data from the server using an HTTP POST request.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.post(URL,data,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $.post(&quot;demo_test_post.asp&quot;,</div><div class="line">        &#123;</div><div class="line">          name: &quot;Donald Duck&quot;,</div><div class="line">          city: &quot;Duckburg&quot;</div><div class="line">        &#125;,</div><div class="line">        function(data,status)&#123;</div><div class="line">            alert(&quot;Data: &quot; + data + &quot;\nStatus: &quot; + status);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter of <code>$.post()</code> is the URL we wish to request (“demo_test_post.asp”).</li>
<li>Then we pass in some data to send along with the request (name and city).</li>
<li>The ASP script in “demo_test_post.asp” reads the parameters, processes them, and returns a result.</li>
<li>The third parameter is a callback function. The first callback parameter holds the content of the page requested, and the second callback parameter holds the status of the request.</li>
</ul>
<p><strong>Tip:</strong> Here is how the ASP file looks like (“demo_test_post.asp”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">dim fname,city</div><div class="line">fname=Request.Form(&quot;name&quot;)</div><div class="line">city=Request.Form(&quot;city&quot;)</div><div class="line">Response.Write(&quot;Dear &quot; &amp; fname &amp; &quot;. &quot;)</div><div class="line">Response.Write(&quot;Hope you live well in &quot; &amp; city &amp; &quot;.&quot;)</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<h3 id="The-noConflict-Method"><a href="#The-noConflict-Method" class="headerlink" title="The noConflict() Method"></a>The noConflict() Method</h3><p>The <code>noConflict()</code> method releases the hold on the $ shortcut identifier, so that other scripts can use it.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.noConflict();</div><div class="line">jQuery(document).ready(function()&#123;</div><div class="line">    jQuery(&quot;button&quot;).click(function()&#123;</div><div class="line">        jQuery(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>You can also create your own shortcut very easily. The <code>noConflict()</code> method returns a reference to jQuery, that you can save in a variable, for later use.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var jq = $.noConflict();</div><div class="line">jq(document).ready(function()&#123;</div><div class="line">    jq(&quot;button&quot;).click(function()&#123;</div><div class="line">        jq(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>If you have a block of jQuery code which uses the $ shortcut and you do not want to change it all, you can pass the $ sign in as a parameter to the ready method. This allows you to access jQuery using $, inside this function - outside of it, you will have to use “jQuery”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.noConflict();</div><div class="line">jQuery(document).ready(function($)&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[域名]]></title>
      <url>http://rrkaige.com/2016/11/22/%E5%9F%9F%E5%90%8D/</url>
      <content type="html"><![CDATA[<p>关于域名的一些事，整理下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161122-myblog116.gif" alt="Domain Name"></p>
<a id="more"></a>
<h3 id="域名注册"><a href="# 域名注册" class="headerlink" title="域名注册"></a>域名注册 </h3><p> 当初注册域名，本来想用 <code>kaneren.com</code> 或<code>rrk.com</code>，无奈均已被注册。所以退而求其次，在 GoDaddy 上注册了现在这个。</p>
<p>但总是不爽，本来看着快到期，想试试能否捡漏。但我还是太天真，原来还有续费保留赎回等说法。好吧，那就不等了，我再找找。</p>
<p>嘿，还真让我找着了。<code>kaneren.me</code>，<code>kaneren.xyz</code>，<code>kane.ren</code>，均未注册。</p>
<p>先科普下，域名包括顶级域名、二级域名，三级域名等。顶级域名又分为两类：</p>
<ul>
<li>国家和地区顶级域名（country code top-level domains，简称 ccTLDs），或者说国家顶级域名（national top-level domainnames，简称 nTLDs）；</li>
<li>通用顶级域名（generic top-level domains，简称 gTLDs），或者说国际顶级域名（international top-level domain names，简称 iTLDs）。</li>
</ul>
<p>现在，<code>.me</code>域名是前南斯拉夫地区西南部的国家黑山共和国（Montenegro，旧译“门的内哥罗”）的国家域名，<code>.xyz</code>和 <code>.ren</code> 域名是全球新通用顶级域名（后者竟然是人人网母公司千橡网景科技运营的）。</p>
<p>好吧，不管其他。考虑之后，决定在万网上注册 <code>kaneren.xyz</code> 和<code>kane.ren</code>，正搞促销，费用低廉，权且一试。申请付款，这两个后缀暂时不用实名认证，就此搞定。</p>
<p>从此，咱也是有三个域名的人了。手中有粮心中不慌，后面该折腾点事了。</p>
<h3 id="导航网页"><a href="# 导航网页" class="headerlink" title="导航网页"></a>导航网页 </h3><p> 于是，想着先更改个人导航网页的域名，就用<code>navi.kane.ren</code>，简单。操作如下：</p>
<ol>
<li>在万网中添加解析，给对应的二级域名添加 <code>CNAME</code> 解析到<code>kaneren.github.com</code>;</li>
<li>在 GoDaddy 中删除相应设置。</li>
<li>进入 <code>navi</code> 主页右面的 <code>Settings</code>，更改<code>Custom domain</code> 为<code>navi.kane.ren</code>；</li>
<li>更改 <code>navi</code> 项目的 <code>CNAME</code> 文件，将不带协议名的裸域名写进去(<code>navi.kane.ren</code>)。</li>
</ol>
<p>deploy 之后，等待 DNS 生效即可。</p>
<p>PS：一开始无法 deploy，和上次一样，更改 <code>.git/config</code> 文件中的 <code>rul</code> 即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JQuery 学习笔记之二]]></title>
      <url>http://rrkaige.com/2016/11/21/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-1.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Get-Content-and-Attributes"><a href="#Get-Content-and-Attributes" class="headerlink" title="Get Content and Attributes"></a>Get Content and Attributes</h3><p>Three simple, but useful, jQuery methods for DOM manipulation are:</p>
<ul>
<li><code>text()</code> - Sets or returns the text content of selected elements</li>
<li><code>html()</code> - Sets or returns the content of selected elements (including HTML markup)</li>
<li><code>val()</code> - Sets or returns the value of form fields</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        alert(&quot;Text: &quot; + $(&quot;#test&quot;).text());</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        alert(&quot;HTML: &quot; + $(&quot;#test&quot;).html());</div><div class="line">    &#125;);</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        alert(&quot;Value: &quot; + $(&quot;#test&quot;).val());</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>attr()</code> method is used to get attribute values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        alert($(&quot;#w3s&quot;).attr(&quot;href&quot;));</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Set-Content-and-Attributes"><a href="#Set-Content-and-Attributes" class="headerlink" title="Set Content and Attributes"></a>Set Content and Attributes</h3><p>We will use the same three methods from the previous page to set content:</p>
<ul>
<li><code>text()</code> - Sets or returns the text content of selected elements</li>
<li><code>html()</code> - Sets or returns the content of selected elements (including HTML markup)</li>
<li><code>val()</code> - Sets or returns the value of form fields</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test1&quot;).text(&quot;Hello world!&quot;);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test2&quot;).html(&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn3&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test3&quot;).val(&quot;Dolly Duck&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>All of the three jQuery methods above: <code>text()</code>, <code>html()</code>, and <code>val()</code>, also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) value. You then return the string you wish to use as the new value from the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test1&quot;).text(function(i, origText)&#123;</div><div class="line">            return &quot;Old text: &quot; + origText + &quot; New text: Hello world! (index: &quot; + i + &quot;)&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test2&quot;).html(function(i, origText)&#123;</div><div class="line">            return &quot;Old html: &quot; + origText + &quot; New html: Hello &lt;b&gt;world!&lt;/b&gt; (index: &quot; + i + &quot;)&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>attr()</code> method is also used to set/change attribute values. The <code>attr()</code> method also allows you to set multiple attributes at the same time.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#w3s&quot;).attr(&#123;</div><div class="line">            &quot;href&quot; : &quot;http://www.w3schools.com/jquery&quot;,</div><div class="line">            &quot;title&quot; : &quot;W3Schools jQuery Tutorial&quot;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery method <code>attr()</code>, also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) attribute value. You then return the string you wish to use as the new attribute value from the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#w3s&quot;).attr(&quot;href&quot;, function(i, origValue)&#123;</div><div class="line">            return origValue + &quot;/jquery&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Add-Elements"><a href="#Add-Elements" class="headerlink" title="Add Elements"></a>Add Elements</h3><ul>
<li>The jQuery <code>append()</code> method inserts content AT THE END of the selected HTML elements.</li>
<li>The jQuery <code>prepend()</code> method inserts content AT THE BEGINNING of the selected HTML elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).append(&quot; &lt;b&gt;Appended text&lt;/b&gt;.&quot;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;ol&quot;).append(&quot;&lt;li&gt;Appended item&lt;/li&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Both the <code>append()</code> and <code>prepend()</code> methods can take an infinite number of new elements as parameters. The new elements can be generated with text/HTML, with jQuery, or with JavaScript code and DOM elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function appendText() &#123;</div><div class="line">    var txt1 = &quot;&lt;p&gt;Text.&lt;/p&gt;&quot;;               // Create element with HTML  </div><div class="line">    var txt2 = $(&quot;&lt;p&gt;&lt;/p&gt;&quot;).text(&quot;Text.&quot;);   // Create with jQuery</div><div class="line">    var txt3 = document.createElement(&quot;p&quot;);  // Create with DOM</div><div class="line">    txt3.innerHTML = &quot;Text.&quot;;</div><div class="line">    $(&quot;body&quot;).append(txt1, txt2, txt3);      // Append the new elements </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The jQuery <code>after()</code> method inserts content AFTER the selected HTML elements.</li>
<li>The jQuery <code>before()</code> method inserts content BEFORE the selected HTML elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;img&quot;).before(&quot;&lt;b&gt;Before&lt;/b&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;img&quot;).after(&quot;&lt;i&gt;After&lt;/i&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function afterText() &#123;</div><div class="line">    var txt1 = &quot;&lt;b&gt;I &lt;/b&gt;&quot;;                   // Create element with HTML</div><div class="line">    var txt2 = $(&quot;&lt;i&gt;&lt;/i&gt;&quot;).text(&quot;love &quot;);    // Create with jQuery</div><div class="line">    var txt3 = document.createElement(&quot;b&quot;);   // Create with DOM</div><div class="line">    txt3.innerHTML = &quot;jQuery!&quot;;</div><div class="line">    $(&quot;img&quot;).after(txt1, txt2, txt3);      // Insert new elements after img</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Remove-Elements"><a href="#Remove-Elements" class="headerlink" title="Remove Elements"></a>Remove Elements</h3><ul>
<li>The jQuery <code>remove()</code> method removes the selected element(s) and its child elements.</li>
<li>The jQuery <code>empty()</code> method removes the child elements of the selected element(s).</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).remove();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>remove()</code> method also accepts one parameter, which allows you to filter the elements to be removed. The parameter can be any of the jQuery selector syntaxes.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).remove(&quot;.test, .demo&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Get-and-Set-CSS-Classes"><a href="#Get-and-Set-CSS-Classes" class="headerlink" title="Get and Set CSS Classes"></a>Get and Set CSS Classes</h3><ul>
<li><code>addClass()</code> - Adds one or more classes to the selected elements</li>
<li><code>removeClass()</code> - Removes one or more classes from the selected elements</li>
<li><code>toggleClass()</code> - Toggles between adding/removing classes from the selected elements</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.important &#123;</div><div class="line">    font-weight: bold;</div><div class="line">    font-size: xx-large;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.blue &#123;</div><div class="line">    color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).addClass(&quot;important blue&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>css()</code> - Sets or returns the style attribute</li>
</ul>
<p>To return the value of a specified CSS property, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&quot;propertyname&quot;);</div></pre></td></tr></table></figure>
<p>To set a specified CSS property, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&quot;propertyname&quot;,&quot;value&quot;);</div></pre></td></tr></table></figure>
<p>To set multiple CSS properties, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&#123;&quot;propertyname&quot;:&quot;value&quot;,&quot;propertyname&quot;:&quot;value&quot;,...&#125;);</div></pre></td></tr></table></figure>
<h3 id="Dimensions"><a href="#Dimensions" class="headerlink" title="Dimensions"></a>Dimensions</h3><p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-2.gif" alt="JQuery"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        var txt = &quot;&quot;;</div><div class="line">        txt += &quot;Width of div: &quot; + $(&quot;#div1&quot;).width() + &quot;&lt;/br&gt;&quot;;</div><div class="line">        txt += &quot;Height of div: &quot; + $(&quot;#div1&quot;).height();</div><div class="line">        $(&quot;#div1&quot;).html(txt);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).width(500).height(500);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JQuery 学习笔记之一]]></title>
      <url>http://rrkaige.com/2016/11/20/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p> 学习 JQuery，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161120-myblog114.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>jQuery is a lightweight, “write less, do more”, <strong>JavaScript library</strong>.</p>
<p>The purpose of jQuery is to make it much easier to use JavaScript on your website.</p>
<p>jQuery takes a lot of common tasks that require many lines of JavaScript code to accomplish, and wraps them into methods that you can call with a single line of code.</p>
<p>jQuery also simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation.</p>
<p>The jQuery library contains the following features:</p>
<ul>
<li>HTML/DOM manipulation</li>
<li>CSS manipulation</li>
<li>HTML event methods</li>
<li>Effects and animations</li>
<li>AJAX</li>
<li>Utilities</li>
</ul>
<p><strong>Note:</strong> The jQuery team knows all about cross-browser issues, and they have written this knowledge into the jQuery library. jQuery will run exactly the same in all major browsers, including Internet Explorer 6!</p>
<h3 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h3><p>Downloading jQuery</p>
<p>There are two versions of jQuery available for downloading:</p>
<ul>
<li>Production version - this is for your live website because it has been minified and compressed</li>
<li>Development version - this is for testing and development (uncompressed and readable code)</li>
</ul>
<p>Both versions can be downloaded from jQuery.com.</p>
<p>The jQuery library is a single JavaScript file, and you reference it with the HTML <code>&lt;script&gt;</code> tag (notice that the <code>&lt;script&gt;</code> tag should be inside the <code>&lt;head&gt;</code> section):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> Place the downloaded file in the same directory as the pages where you wish to use it.</p>
<p>Do you wonder why we do not have type=”text/javascript” inside the <code>&lt;script&gt;</code> tag?</p>
<p>This is not required in HTML5. JavaScript is the default scripting language in HTML5 and in all modern browsers!</p>
<p>jQuery CDN</p>
<p>If you don’t want to download and host jQuery yourself, you can include it from a CDN (Content Delivery Network).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>The jQuery syntax is tailor-made for <strong>selecting</strong> HTML elements and performing some <strong>action</strong> on the element(s).</p>
<p>Basic syntax is: <code>$(selector).action()</code></p>
<ul>
<li>A $ sign to define/access jQuery</li>
<li>A (selector) to “query (or find)” HTML elements</li>
<li>A jQuery <code>action()</code> to be performed on the element(s)</li>
</ul>
<p>All jQuery methods in our examples, are inside a document ready event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">   // jQuery methods go here...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>This is to prevent any jQuery code from running before the document is finished loading (is ready).</p>
<p><strong>Tip:</strong> The jQuery team has also created an even shorter method for the document ready event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(function()&#123;</div><div class="line">   // jQuery methods go here...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Selectors"><a href="#Selectors" class="headerlink" title="Selectors"></a>Selectors</h3><p>jQuery selectors allow you to select and manipulate HTML element(s).</p>
<p>jQuery selectors are used to “find” (or select) HTML elements based on their name, id, classes, types, attributes, values of attributes and much more. It’s based on the existing CSS Selectors, and in addition, it has some own custom selectors.</p>
<p>All selectors in jQuery start with the dollar sign and parentheses: <code>$()</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;)</div><div class="line">$(&quot;#test&quot;)</div><div class="line">$(&quot;.test&quot;)</div></pre></td></tr></table></figure>
<h3 id="Event-Methods"><a href="#Event-Methods" class="headerlink" title="Event Methods"></a>Event Methods</h3><p>All the different visitor’s actions that a web page can respond to are called events.</p>
<p>The term “<strong>fires/fired</strong>“ is often used with events. Example: “The keypress event is fired, the moment you press a key”.</p>
<p>Here are some common DOM events:</p>
<table>
<thead>
<tr>
<th>Mouse Events</th>
<th>Keyboard Events</th>
<th>Form Events</th>
<th>Document/Window Events</th>
</tr>
</thead>
<tbody>
<tr>
<td>click</td>
<td>keypress</td>
<td>submit</td>
<td>load</td>
</tr>
<tr>
<td>dblclick</td>
<td>keydown</td>
<td>change</td>
<td>resize</td>
</tr>
<tr>
<td>mouseenter</td>
<td>keyup</td>
<td>focus</td>
<td>scroll</td>
</tr>
<tr>
<td>mouseleave</td>
<td></td>
<td>blur</td>
<td>unload</td>
</tr>
</tbody>
</table>
<p>In jQuery, most DOM events have an equivalent jQuery method.</p>
<p>To assign a click event to all paragraphs on a page, you can do this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;).click();</div></pre></td></tr></table></figure>
<p>The next step is to define what should happen when the event fires. You must pass a function to the event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;).click(function()&#123;</div><div class="line">  // action goes here!!</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Hide-and-Show"><a href="#Hide-and-Show" class="headerlink" title="Hide and Show"></a>Hide and Show</h3><p>With jQuery, you can hide and show HTML elements with the <code>hide()</code> and <code>show()</code> methods:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).hide(speed,callback);</div><div class="line">$(selector).show(speed,callback);</div></pre></td></tr></table></figure>
<ul>
<li>The optional speed parameter specifies the speed of the hiding/showing, and can take the following values: “slow”, “fast”, or milliseconds.</li>
<li>The optional callback parameter is a function to be executed after the hide() or show() method completes.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).hide(1000);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>With jQuery, you can toggle between the <code>hide()</code> and <code>show()</code> methods with the <code>toggle()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).toggle(speed,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).toggle();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Fading"><a href="#Fading" class="headerlink" title="Fading"></a>Fading</h3><p>With jQuery you can fade an element in and out of visibility.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeIn(speed,callback);</div><div class="line">$(selector).fadeOut(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>fadeToggle()</code> method toggles between the <code>fadeIn()</code> and <code>fadeOut()</code> methods.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeToggle(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>fadeTo()</code> method allows fading to a given opacity (value between 0 and 1).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeTo(speed,opacity,callback);</div></pre></td></tr></table></figure>
<h3 id="Sliding"><a href="#Sliding" class="headerlink" title="Sliding"></a>Sliding</h3><p>With jQuery you can create a sliding effect on elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).slideDown(speed,callback);</div><div class="line">$(selector).slideUp(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>slideToggle()</code> method toggles between the <code>slideDown()</code> and <code>slideUp()</code> methods.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).slideToggle(speed,callback);</div></pre></td></tr></table></figure>
<h3 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h3><p>The jQuery <code>animate()</code> method is used to create custom animations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).animate(&#123;params&#125;,speed,callback);</div></pre></td></tr></table></figure>
<p>The required params parameter defines the CSS properties to be animated.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            left: &apos;250px&apos;,</div><div class="line">            opacity: &apos;0.5&apos;,</div><div class="line">            height: &apos;150px&apos;,</div><div class="line">            width: &apos;150px&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> By default, all HTML elements have a static position, and cannot be moved. To manipulate the position, remember to first set the CSS position property of the element to relative, fixed, or absolute!</p>
<p>It is also possible to define <strong>relative values</strong> (the value is then relative to the element’s current value). This is done by putting += or -= in front of the value:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            left: &apos;250px&apos;,</div><div class="line">            height: &apos;+=150px&apos;,</div><div class="line">            width: &apos;+=150px&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>You can even specify a property’s animation value as “show”, “hide”, or “toggle”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            height: &apos;toggle&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>By default, jQuery comes with <strong>queue functionality</strong> for animations.</p>
<p>This means that if you write multiple <code>animate()</code> calls after each other, jQuery creates an “internal” queue with these method calls. Then it runs the animate calls ONE by ONE.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        var div = $(&quot;div&quot;);</div><div class="line">        div.animate(&#123;left: &apos;100px&apos;&#125;, &quot;slow&quot;);</div><div class="line">        div.animate(&#123;fontSize: &apos;3em&apos;&#125;, &quot;slow&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Stop-Animations"><a href="#Stop-Animations" class="headerlink" title="Stop Animations"></a>Stop Animations</h3><p>The jQuery <code>stop()</code> method is used to stop an animation or effect before it is finished.</p>
<p>The <code>stop()</code> method works for <strong>all jQuery effect functions</strong>, including sliding, fading and custom animations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).stop(stopAll,goToEnd);</div></pre></td></tr></table></figure>
<ul>
<li>The optional stopAll parameter specifies whether also the animation queue should be cleared or not. Default is false, which means that only the active animation will be stopped, allowing any queued animations to be performed afterwards.</li>
<li>The optional goToEnd parameter specifies whether or not to complete the current animation immediately. Default is false.</li>
</ul>
<p>So, by default, the <code>stop()</code> method kills the current animation being performed on the selected element.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#flip&quot;).click(function()&#123;</div><div class="line">        $(&quot;#panel&quot;).slideDown(5000);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#stop&quot;).click(function()&#123;</div><div class="line">        $(&quot;#panel&quot;).stop();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Callback-Functions"><a href="#Callback-Functions" class="headerlink" title="Callback Functions"></a>Callback Functions</h3><p>JavaScript statements are executed line by line. However, with effects, the next line of code can be run even though the effect is not finished. This can create errors.</p>
<p>To prevent this, you can create a callback function.</p>
<p>A callback function is executed after the current effect is 100% finished.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).hide(&quot;slow&quot;, function()&#123;</div><div class="line">            alert(&quot;The paragraph is now hidden&quot;);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Chaining"><a href="#Chaining" class="headerlink" title="Chaining"></a>Chaining</h3><p>Chaining allows us to run multiple jQuery methods (on the same element) within a single statement.</p>
<p><strong>Tip:</strong> This way, browsers do not have to find the same element(s) more than once.</p>
<p>To chain an action, you simply append the action to the previous action.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#p1&quot;).css(&quot;color&quot;, &quot;red&quot;)</div><div class="line">            .slideUp(2000)</div><div class="line">            .slideDown(2000);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> When chaining, the line of code could become quite long. However, jQuery is not very strict on the syntax; you can format it like you want, including line breaks and indentations.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[个人 Logo 设计]]></title>
      <url>http://rrkaige.com/2016/11/19/%E4%B8%AA%E4%BA%BALogo%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p>做一个自己独有的 Logo，想想就觉得兴奋。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-1.png" alt="RK Logo"></p>
<a id="more"></a>
<p>看到别人独具一格的个人 Logo，萌生自己设计的想法，说做就做。</p>
<p>先了解下位图和矢量图的 <a href="http://www.coreldrawchina.com/xinshourumen/weitu-shiliangtu.html" target="_blank" rel="external"> 区别</a>。</p>
<p>没有 Photoshop，那就用<a href="https://www.gimp.org/" target="_blank" rel="external">GIMP</a>。和 Photoshop 类似的操作，上手很快。</p>
<p>主要在于设计构思，利用“R”和“K”的变形，组成图案。第一版如下，略显方正。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-2.png" alt="RK Logo"></p>
<p>第二版更加抽象化，圆润些许，如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-3.png" alt="RK Logo"></p>
<p>就此，暂时用着，后续有好的想法再行制作。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JSON 学习笔记]]></title>
      <url>http://rrkaige.com/2016/11/18/JSON%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 学习 JSON，教程来自 <a href="http://www.w3schools.com/js/js_json_intro.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161118-myblog112.png" alt="JSON"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><ul>
<li>JSON stands for JavaScript Object Notation</li>
<li>JSON is a lightweight data-interchange format</li>
<li>JSON is language independent *</li>
<li>JSON is “self-describing” and easy to understand</li>
</ul>
<p><strong>Note:</strong> * JSON uses JavaScript syntax, but the JSON format is text only, just like XML. Text can be read and used as a data format by any programming language.</p>
<p>Much Like XML Because</p>
<ul>
<li>Both JSON and XML are “self describing” (human readable)</li>
<li>Both JSON and XML are hierarchical (values within values)</li>
<li>Both JSON and XML can be parsed and used by lots of programming languages</li>
<li>Both JSON and XML can be fetched with an XMLHttpRequest</li>
</ul>
<p>Much Unlike XML Because</p>
<ul>
<li>JSON doesn’t use end tag</li>
<li>JSON is shorter</li>
<li>JSON is quicker to read and write</li>
<li>JSON can use arrays</li>
</ul>
<p>The biggest difference is: XML has to be parsed with an XML parser. JSON can be parsed by a standard JavaScript function.</p>
<p>For AJAX applications, JSON is faster and easier than XML:</p>
<p>Using XML</p>
<ul>
<li>Fetch an XML document</li>
<li>Use the XML DOM to loop through the document</li>
<li>Extract values and store in variables</li>
</ul>
<p>Using JSON</p>
<ul>
<li>Fetch a JSON string</li>
<li><code>JSON.Parse</code> the JSON string</li>
</ul>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>JSON syntax is derived from JavaScript object notation syntax:</p>
<ul>
<li>Data is in name/value pairs</li>
<li>Data is separated by commas</li>
<li>Curly braces hold objects</li>
<li>Square brackets hold arrays</li>
</ul>
<p>JSON data is written as name/value pairs. A name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value.</p>
<p><strong>Note:</strong> JSON names require double quotes. JavaScript names don’t.</p>
<p>JSON values can be:</p>
<ul>
<li>A number (integer or floating point)</li>
<li>A string (in double quotes)</li>
<li>A Boolean (true or false)</li>
<li>An array (in square brackets)</li>
<li>An object (in curly braces)</li>
<li>null</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;employees&quot;:[</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;:&quot;Jones&quot;&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>Because JSON syntax is derived from JavaScript object notation, very little extra software is needed to work with JSON within JavaScript.</p>
<p>With JavaScript you can create an array of objects and assign data to it, like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var employees = [</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;,</div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;,</div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;: &quot;Jones&quot;&#125;</div><div class="line">];</div></pre></td></tr></table></figure>
<p>The first entry in the JavaScript object array can be accessed like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// returns John Doe</div><div class="line">employees[0].firstName + &quot; &quot; + employees[0].lastName;</div><div class="line"></div><div class="line">employees[0][&quot;firstName&quot;] + &quot; &quot; + employees[0][&quot;lastName&quot;];</div></pre></td></tr></table></figure>
<ul>
<li>The file type for JSON files is “<code>.json</code>“</li>
<li>The MIME type for JSON text is “application/json”</li>
</ul>
<h3 id="How-To"><a href="#How-To" class="headerlink" title="How To"></a>How To</h3><p>A common use of JSON is to read data from a web server, and display the data in a web page.</p>
<p>The JavaScript function <code>JSON.parse(text)</code> can be used to convert a JSON text into a JavaScript object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var text = &apos;&#123;&quot;employees&quot;:[&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Doe&quot; &#125;,&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;Anna&quot;,&quot;lastName&quot;:&quot;Smith&quot; &#125;,&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;:&quot;Jones&quot; &#125;]&#125;&apos;;</div><div class="line"></div><div class="line">obj = JSON.parse(text);</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">obj.employees[1].firstName + &quot; &quot; + obj.employees[1].lastName;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Older browsers without the support for the JavaScript function <code>JSON.parse()</code> can use the <code>eval()</code> function to convert a JSON text into a JavaScript object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var obj = eval (&quot;(&quot; + text + &quot;)&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The <code>eval()</code> function can compile and execute any JavaScript. This represents a potential security problem. <strong>Try to avoid it</strong>.</p>
<p>It is safer to use a JSON parser to convert a JSON text to a JavaScript object.</p>
<ul>
<li>A JSON parser will recognize only JSON text and will not compile scripts.</li>
<li>In browsers that provide native JSON support, JSON parsers are also faster.</li>
</ul>
<h3 id="Http-Request"><a href="#Http-Request" class="headerlink" title="Http Request"></a>Http Request</h3><ol>
<li>Create an <strong>array of objects</strong>. Use an <strong>array literal</strong> to declare an array of objects. Give each object two properties: <strong>display</strong> and <strong>url</strong>.</li>
<li>Create a <strong>JavaScript function</strong> to display the array. Create a function <code>myFunction()</code> that loops the array objects, and display the content as HTML links.</li>
<li>Create a <strong>text file</strong>. Put the array literal in a file named <code>myTutorials.txt</code>.</li>
<li>Read the text file with an <strong>XMLHttpRequest</strong>. Write an XMLHttpRequest to read the text file, and use <code>myFunction()</code> to display the array.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;id01&quot;&gt;&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var xmlhttp = new XMLHttpRequest();</div><div class="line">var url = &quot;myTutorials.txt&quot;;</div><div class="line"></div><div class="line">xmlhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">        var myArr = JSON.parse(this.responseText);</div><div class="line">        myFunction(myArr);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">xmlhttp.open(&quot;GET&quot;, url, true);</div><div class="line">xmlhttp.send();</div><div class="line"></div><div class="line">function myFunction(arr) &#123;</div><div class="line">    var out = &quot;&quot;;</div><div class="line">    var i;</div><div class="line">    for(i = 0; i &lt; arr.length; i++) &#123;</div><div class="line">        out += &apos;&lt;a href=&quot;&apos; + arr[i].url + &apos;&quot;&gt;&apos; +</div><div class="line">        arr[i].display + &apos;&lt;/a&gt;&lt;br&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;id01&quot;).innerHTML = out;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>myTutorials.txt</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;JavaScript Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/js/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;HTML Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/html/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;CSS Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/css/default.asp&quot;</div><div class="line">&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="Function-Files"><a href="#Function-Files" class="headerlink" title="Function Files"></a>Function Files</h3><ol>
<li>Create an <strong>array of objects</strong>. Use an <strong>array literal</strong> to declare an array of objects. Give each object two properties: <strong>display</strong> and <strong>url</strong>.</li>
<li>Create a <strong>JavaScript function</strong> to display the array. Create a function <code>myFunction()</code> that loops the array objects, and display the content as HTML links.</li>
<li>Use an <strong>array literal</strong> as the argument (instead of the array variable).</li>
<li>Put the function in an external <strong>js file</strong>.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;id01&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function myFunction(arr) &#123;</div><div class="line">    var out = &quot;&quot;;</div><div class="line">    var i;</div><div class="line">    for(i = 0; i&lt;arr.length; i++) &#123;</div><div class="line">        out += &apos;&lt;a href=&quot;&apos; + arr[i].url + &apos;&quot;&gt;&apos; +</div><div class="line">        arr[i].display + &apos;&lt;/a&gt;&lt;br&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;id01&quot;).innerHTML = out;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;script src=&quot;myTutorials.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>myTutorials.js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">myFunction([</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;JavaScript Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/js/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;HTML Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/html/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;CSS Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/css/default.asp&quot;</div><div class="line">&#125;</div><div class="line">]);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AJAX 学习笔记]]></title>
      <url>http://rrkaige.com/2016/11/17/AJAX%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 学习 JavaScript AJAX，教程来自 <a href="http://www.w3schools.com/js/js_ajax_intro.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-1.jpg" alt="AJAX"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>AJAX = <strong>Asynchronous JavaScript And XML</strong>.</p>
<p>AJAX is not a programming language. AJAX just uses a combination of:</p>
<ul>
<li>A browser built-in XMLHttpRequest object (to request data from a web server)</li>
<li>JavaScript and HTML DOM (to display or use the data)</li>
</ul>
<p><strong>Note:</strong> AJAX is a misleading name. AJAX applications might use <strong>XML</strong> to transport data, but it is equally common to transport data as <strong>plain text</strong> or <strong>JSON text</strong>.</p>
<p>AJAX allows web pages to be updated asynchronously by exchanging data with a web server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;demo&quot;&gt;</div><div class="line">&lt;h1&gt;The XMLHttpRequest Object&lt;/h1&gt;</div><div class="line">&lt;button type=&quot;button&quot; onclick=&quot;loadDoc()&quot;&gt;Change Content&lt;/button&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function loadDoc() &#123;</div><div class="line">  var xhttp = new XMLHttpRequest();</div><div class="line">  xhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">      document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">      this.responseText;</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line">  xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, true);</div><div class="line">  xhttp.send();</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-2.gif" alt="How AJAX Works"></p>
<ol>
<li>An event occurs in a web page (the page is loaded, a button is clicked)</li>
<li>An XMLHttpRequest object is created by JavaScript</li>
<li>The XMLHttpRequest object sends a request to a web server</li>
<li>The server processes the request</li>
<li>The server sends a response back to the web page</li>
<li>The response is read by JavaScript</li>
<li>Proper action (like page update) is performed by JavaScript</li>
</ol>
<h3 id="The-XMLHttpRequest-Object"><a href="#The-XMLHttpRequest-Object" class="headerlink" title="The XMLHttpRequest Object"></a>The XMLHttpRequest Object</h3><p>All modern browsers (Chrome, IE7+, Firefox, Safari, and Opera) have a built-in <strong>XMLHttpRequest</strong> object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable = new XMLHttpRequest();</div></pre></td></tr></table></figure>
<p>Old versions of Internet Explorer (IE5 and IE6) use an ActiveX Object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var xhttp;</div><div class="line">if (window.XMLHttpRequest) &#123;</div><div class="line">    // code for modern browsers</div><div class="line">    xhttp = new XMLHttpRequest();</div><div class="line">    &#125; else &#123;</div><div class="line">    // code for IE6, IE5</div><div class="line">    xhttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>For security reasons, modern browsers do not allow access across domains. This means that both the web page and the XML file it tries to load, must be located <strong>on the same server</strong>.</p>
<h3 id="Send-a-Request-To-a-Server"><a href="#Send-a-Request-To-a-Server" class="headerlink" title="Send a Request To a Server"></a>Send a Request To a Server</h3><p>To send a request to a server, we use the open() and send() methods of the XMLHttpRequest object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>open(method,url,async,user,psw)</td>
<td>Specifies the type of request</td>
</tr>
<tr>
<td>send()</td>
<td>Sends the request to the server (used for GET)</td>
</tr>
<tr>
<td>send(string)</td>
<td>Sends the request to the server (used for POST)</td>
</tr>
</tbody>
</table>
<ul>
<li>method: the type of request: GET or POST</li>
<li>url: the server (file) location</li>
</ul>
<p>The file can be any kind of file, like <code>.txt</code> and <code>.xml</code>, or server scripting files like <code>.asp</code> and <code>.php</code> (which can perform actions on the server before sending the response back).</p>
<ul>
<li>async: true (asynchronous) or false (synchronous)</li>
<li>user: optional user name</li>
<li>psw: optional password</li>
</ul>
<p><strong>GET</strong> is simpler and faster than <strong>POST</strong>, and can be used in most cases. However, always use POST requests when:</p>
<ul>
<li>A cached file is not an option (update a file or database on the server).</li>
<li>Sending a large amount of data to the server (POST has no size limitations).</li>
<li>Sending user input (which can contain unknown characters), POST is more robust and secure than GET.</li>
</ul>
<p>A simple GET request:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get.asp&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>In the example above, you may get a cached result. To avoid this, add a unique ID to the URL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get.asp?t=&quot; + Math.random(), true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>If you want to send information with the GET method, add the information to the URL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get2.asp?fname=Henry&amp;lname=Ford&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>A simple POST request:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;POST&quot;, &quot;demo_post.asp&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>To POST data like an HTML form, add an HTTP header with setRequestHeader(). Specify the data you want to send in the send() method:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;POST&quot;, &quot;ajax_test.asp&quot;, true);</div><div class="line">xhttp.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</div><div class="line">xhttp.send(&quot;fname=Henry&amp;lname=Ford&quot;);</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>setRequestHeader(header, value)</td>
<td>Adds HTTP headers to the request</td>
</tr>
</tbody>
</table>
<ul>
<li>header: specifies the header name</li>
<li>value: specifies the header value</li>
</ul>
<p>Using async=false is not recommended, but for a few small requests this can be ok. Remember that the JavaScript will NOT continue to execute, until the server response is ready. If the server is busy or slow, the application will hang or stop.</p>
<p><strong>Note:</strong> When you use async=false, do NOT write an onreadystatechange function - just put the code after the send() statement:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, false);</div><div class="line">xhttp.send();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = xhttp.responseText;</div></pre></td></tr></table></figure>
<h3 id="Server-Response"><a href="#Server-Response" class="headerlink" title="Server Response"></a>Server Response</h3><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>onreadystatechange</td>
<td>Defines a function to be called when the readyState property changes</td>
</tr>
<tr>
<td>readyState</td>
<td>Holds the status of the XMLHttpRequest. (0: request not initialized; 1: server connection established; 2: request received; 3: processing request; 4: request finished and response is ready)</td>
</tr>
<tr>
<td>status</td>
<td>200: “OK”; 403: “Forbidden”; 404: “Page not found”</td>
</tr>
<tr>
<td>statusText</td>
<td>Returns the status-text (e.g. “OK” or “Not Found”)</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong> The onreadystatechange event is triggered five times (0-4), one time for each change in readyState.</p>
<p>A <strong>callback function</strong> is a function passed as a parameter to another function.</p>
<p>If you have more than one AJAX task a website, you should create one function for executing the XMLHttpRequest object, and one callback function for each AJAX task.</p>
<p>The function call should contain the URL and what function to call when the response is ready.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">loadDoc(&quot;url-1&quot;, myFunction1);</div><div class="line"></div><div class="line">loadDoc(&quot;url-2&quot;, myFunction2);</div><div class="line"></div><div class="line">function loadDoc(url, cFunction) &#123;</div><div class="line">  var xhttp;</div><div class="line">  xhttp=new XMLHttpRequest();</div><div class="line">  xhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">      cFunction(this);</div><div class="line">    &#125;</div><div class="line"> 	&#125;;</div><div class="line">  xhttp.open(&quot;GET&quot;, url, true);</div><div class="line">  xhttp.send();</div><div class="line">&#125;</div><div class="line"></div><div class="line">function myFunction1(xhttp) &#123;</div><div class="line">  // action goes here</div><div class="line">&#125; </div><div class="line">function myFunction2(xhttp) &#123;</div><div class="line">  // action goes here</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>responseText</td>
<td>get the response data as a string</td>
</tr>
<tr>
<td>responseXML</td>
<td>get the response data as XML data</td>
</tr>
<tr>
<td>getResponseHeader()</td>
<td>Returns specific header information from the server resource</td>
</tr>
<tr>
<td>getAllResponseHeaders()</td>
<td>Returns all the header information from the server resource</td>
</tr>
</tbody>
</table>
<p>The <strong>responseText</strong> property returns the server response as a JavaScript string, and you can use it accordingly:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = xhttp.responseText;</div></pre></td></tr></table></figure>
<p>The <strong>responseXML</strong> property returns the server response as an XML DOM object. Using this property you can parse the response as an XML DOM object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">xmlDoc = xhttp.responseXML;</div><div class="line">txt = &quot;&quot;;</div><div class="line">x = xmlDoc.getElementsByTagName(&quot;ARTIST&quot;);</div><div class="line">for (i = 0; i &lt; x.length; i++) &#123;</div><div class="line">  txt += x[i].childNodes[0].nodeValue + &quot;&lt;br&gt;&quot;;</div><div class="line">  &#125;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = txt;</div><div class="line">xhttp.open(&quot;GET&quot;, &quot;cd_catalog.xml&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = this.getAllResponseHeaders();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = this.getResponseHeader(&quot;Last-Modified&quot;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[后街歌声]]></title>
      <url>http://rrkaige.com/2016/11/16/%E5%90%8E%E8%A1%97%E6%AD%8C%E5%A3%B0/</url>
      <content type="html"><![CDATA[<p> 后街，从来不缺少歌声。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161116-myblog110.jpg" alt="Street Singer"></p>
<a id="more"></a>
<p> 大早到实验室，窗外歌声正炽。咦，新来的？我和同学打着招呼，侧耳倾听。一首《迟来的爱》，吐字很有特点，每句结尾带着奇异的音调，微微上旋。后续的《小薇》《好人一生平安》《离家的孩子》，一首接一首，热闹了整个上午。总之，还不错，真心实意，没有放着原唱哼哈几句。</p>
<p> 窗外，越过围墙，能看到附近唯一的菜场，人流汹涌，理所当然成为卖唱者的福地。每隔三两天，必有歌声飞扬，从早到午，一刻不歇。附近买菜的大爷大妈叔叔阿姨，向来不吝几个零钞钢镚。于是，皆大欢喜，愈发兴盛热闹。</p>
<p> 时间长了，大致能分辨出常来的几人，约好似的，拖着话筒音箱，带着必备神曲，诸如《永远是朋友》《北国之春》《九月九的酒》《两只蝴蝶》《牡丹之歌》《说句心里话》《常回家看看》《红尘情歌》《在心里从此永远有个你》之类。就在路边找个空缺，放好装备，开口自嗨，间或“谢谢”，时光就此凝固。</p>
<p> 还记得，睡在实验室被吵醒的满腔抱怨，打水时跟着节奏摇头晃脑，听着含糊的发音猜测歌词，站在窗台边探头张望，树枝掩映间，仿若人流漩涡的中心。</p>
<p> 逐渐习惯，多年后，是否还会想起，每个推开窗飘着歌的早晨。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在家做小工]]></title>
      <url>http://rrkaige.com/2016/11/15/%E5%9C%A8%E5%AE%B6%E5%81%9A%E5%B0%8F%E5%B7%A5/</url>
      <content type="html"><![CDATA[<p> 回家几天，做小工，真心累。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161115-myblog109-1.jpg-b" alt="Change"></p>
<a id="more"></a>
<p> 后院一角，“历史遗留问题”。老爸一直想着翻新，这次抓了我当帮工。好吧，我也早看不顺眼，欣然应诺。</p>
<p> 于是，两个“外行”，凑一起讨论设计，着手施工。测量，挖土，夯实，开凿，铺设，砌墙，搅拌，浇筑，各种工具齐上阵，看着工程不大，做起来却不简单。毕竟不是照着图纸复制，而要因地制宜，随时修改，这就大大拖长了工期。所以，直到我返校，才完成一半。不过大体已成型，留待下次再战。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161115-myblog109-2.jpg-b" alt="Construction"></p>
<p> 要说做小工的体验，一个字，累！腰酸背疼，手掌都磨出水泡。体力劳动也要讲究技巧。挖土时铁锹如何切入，如何抛土；砌墙时泥刀如何削砖，如何敷砂浆。事事都有经验可循。如此，不枉忙碌一番。</p>
<p> 真想，亲手建一栋房子，在山脚湖畔，田园林边。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[超级月亮]]></title>
      <url>http://rrkaige.com/2016/11/14/%E8%B6%85%E7%BA%A7%E6%9C%88%E4%BA%AE/</url>
      <content type="html"><![CDATA[<p> 从被窝爬起来，上天台看月亮。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161114-myblog108.jpg-b" alt="Moon"></p>
<a id="more"></a>
<p> 已经躺进被窝的我，看到“超级月亮”的新闻。据科学家预测，14 日晚，全球将迎来近 70 年来最大的“超级月亮”，如果错过可能要等到 2034 年。</p>
<p> 天，我才知道！待在家中，毫无关注。怎么办？起床啊。</p>
<p> 披上衣服，爬上天台。夜已深，静静的街道唯有路灯亮着，远处的房子晕染成暗影。抬头看天空，月亮却在云后。风很大，云在飘，月亮时隐时现。我仰着头，右手手机，左手 OK，等待，等待月亮在云间露脸的刹那。</p>
<p> 脖子僵硬，手脚发凉，终于抓拍成功，确实很圆很亮。</p>
<p> 想起当年和舍友一起夜登紫金山看月全食，下来后我还作文一篇：</p>
<blockquote>
<p> 是夜，211 全体舍员齐登紫金山。月华如水，白霜满地。山风凛冽，寒气逼人。石阶参差，树影婆娑。众人蜿蜒而上，嘻笑阔谈。或纵声吼叫，作鬼哭狼嚎；或引吭高歌，声振山林，回音阵阵。及顶，天狗吞月，婵娟已缺，星斗满天，寒光闪烁。不多时，月牙隐隐，红晕茫茫，全食至也。凭栏四望，俯仰之间，顿觉人之渺渺，沧海一粟，命运无常，时光短暂。年少轻狂，不为之过，青春热血，不可或缺。值此花样年华，若无心血来潮不可思议之举，人生憾事也。故夜登山，观月食，虽天寒地冻，身困体乏，实兴致高昂，难能可贵。他日思及，哂然一笑，悠悠乎岂不乐哉？兴之所至，是为之记。辛卯年十一月既望。</p>
</blockquote>
<p> 那时候我们都还年轻，而今夜，也算是兴之所至吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的特工爷爷]]></title>
      <url>http://rrkaige.com/2016/11/13/%E6%88%91%E7%9A%84%E7%89%B9%E5%B7%A5%E7%88%B7%E7%88%B7/</url>
      <content type="html"><![CDATA[<p> 那个扎俩小辫，带着花草帽的小女孩，如此可爱。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161113-myblog107.jpeg" alt="The Bodyguard"></p>
<a id="more"></a>
<p> 不服老的洪金宝亲自上阵，为保护邻家小女孩，勇斗黑帮。老套的故事情节，常见的打斗场面。唯有小女孩的角色，让人眼前一亮。</p>
<p> 那个翻进窗户的身影，一脸俏皮的表情，自来熟，叛逆又有点小脾气，粘人却无法讨厌，快言快语让人忍俊不禁，内心真诚会关心人。</p>
<p> 去钓鱼吧。背起渔具，舔着甜筒，学大人说话，跑前跑后叽叽喳喳，沉不住气等待，钓上鱼的喜悦，滑稽地摔倒，无处不爱。</p>
<p> 有这样一个女儿，真是件幸福的事。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[挑剔老爸]]></title>
      <url>http://rrkaige.com/2016/11/12/%E6%8C%91%E5%89%94%E8%80%81%E7%88%B8/</url>
      <content type="html"><![CDATA[<p> 老爸很挑剔，对于衣服，他不看品牌不看价格，只要舒服。但这个舒服，却是最难把握。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161112-myblog106.jpg" alt="Dad"></p>
<a id="more"></a>
<p> 之前给老爸买的，唯有一双鞋子最称心。迪卡侬 99 元登山鞋，柔软结实耐用，一年四季可穿，下小雨也没事，随便穿不介意。老爸很满意，于是继续买来，算是必备良品。</p>
<p> 这次降温，又去迪卡侬买鞋，顺带两件抓绒衣。本以为老爸会嫌弃，结果穿上就说好，保暖吸汗速干透气，非常适合。结果穿上就不想换，居然直接睡觉，还说这样暖和舒服。我也是无言以对。</p>
<p> 说这么多，当然不是给迪卡侬打广告，只是确合老爸心意。老爸老了，愈来愈怕冷，穿得暖和，是最大的需求。</p>
<p> 重要的是，老爸喜欢。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[超级工程]]></title>
      <url>http://rrkaige.com/2016/11/11/%E8%B6%85%E7%BA%A7%E5%B7%A5%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p> 超级工程，超级大，超级难，工期超级长，造价超级高。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161111-myblog105.jpg" alt="China's Mega Projects"></p>
<a id="more"></a>
<p> 第一季共 5 集，看了前 2 集，珠港澳大桥，上海中心大厦。前者连接珠海香港澳门，人工造岛，海底隧道，海面大桥，桥隧组合。后者上海最高，螺旋结构，内外两层，补全城市天际线。</p>
<p> 看完后，几点感想。</p>
<ul>
<li> 机会总给有准备的人。很多前期工作持续多年，海里建桥防氯盐研究拿出的样本竟然始于二十多年前。</li>
<li> 实际经验无比重要。建造珠港澳大桥的参与过杭州湾跨海大桥，操作塔吊的先后在金茂大厦、环球金融中心施工。</li>
<li> 细微处都是平凡人。人工岛钢圆筒边的电焊工，大厦顶部操作台上的钢筋工，无数小人物最简单的工作叠加，成就了超级工程。</li>
</ul>
<p> 一个工程持续十年，人一生又有几个十年。</p>
<p> 只希望超级工程，寿命超长。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[金庸的小说]]></title>
      <url>http://rrkaige.com/2016/11/10/%E9%87%91%E5%BA%B8%E7%9A%84%E5%B0%8F%E8%AF%B4/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 飞雪连天射白鹿，笑书神侠倚碧鸳。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161110-myblog104.jpg" alt="Jinyong"></p>
<a id="more"></a>
<p> 忘了何时何地何人，只记得当年在课堂上听老师念出这两句，无比佩服。金庸老爷子，神人也。这诗当然是事后编撰，但其足以青史留名。</p>
<p> 那时我早已读过不少金庸作品，接触的电视剧电影更是数不胜数。没记错的话，我看的第一本应是《笑傲江湖》，犹记得两个片段。</p>
<p> 放学路上，我拿着书，就像现在拿着手机。令狐冲背任盈盈，在水中看到她真面目时，惊为天人。</p>
<blockquote>
<p> 令狐冲已喝了好几口涧水，眼前金星乱舞，定了定神，只见清澈的涧水之中，映上来两个倒影，一个妙龄姑娘正抓着自己背心。</p>
<p> 再看水中倒影时，见到那姑娘的半边脸蛋，眼睛紧闭，睫毛甚长，虽然倒影瞧不清楚，但显然容貌秀丽绝伦，不过十七八岁年纪。</p>
</blockquote>
<p> 午睡时，看到桃谷六仙插科打诨，舌戏群雄，忍不住笑出声来。</p>
<blockquote>
<p>“这个……嗯，是了，定静师太说道：‘五派虽然并而为一，但泰山、衡山、华山、恒山、嵩山这东南西北中五岳，却是并不到一块的。左冷禅又不是玉皇大帝，难道他还能将五座大山搬在一起吗？请桃谷六仙中的五兄弟分驻五山，剩下一个做总掌门也就是了。’”</p>
<p>“不错！定逸师太便说：‘师姊此见甚是。原来桃谷六仙的父母当年甚有先见，知道日后左冷禅要合并五岳剑派，因此生下他六个兄弟来，既不是五个，又不是七个，佩服啊佩服！’”</p>
</blockquote>
<p> 奇怪的是，记忆中第一个发生在小学，第二个是初一。莫非是错觉？不明白，但这两个片段印象深刻，确凿无疑。后来，陆续看过《碧血剑》，《鹿鼎记》，《侠客行》，其他的或许读过，已不大确定。</p>
<p> 今天说起这个，是因为沙漠公众号中提及。沙漠是网络小说历史穿越类作者，追过几本书，多有关注。之后又正巧看到“六神磊磊读金庸”，天马行空又紧跟时事，很有趣的公众号，很有意思的人。他抓住一点，坚持不懈，成功转身。</p>
<blockquote>
<p> 我觉得一个写字的人，随时要做好被人忘记的准备，你会有干气象的时候，也会有苦低垂的时候，我们都应该是一只蚂蚱，但是必须是一个不停地学习，不停地充实自己的蚂蚱，我们要努力地蹦达着，然后静静地等待秋后的到来。</p>
</blockquote>
<p> 我需要积累的还很多很多。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[秋橘]]></title>
      <url>http://rrkaige.com/2016/11/09/%E7%A7%8B%E6%A9%98/</url>
      <content type="html"><![CDATA[<p> 晚上吃完饭，去后街买点橘子。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161109-myblog103.jpg" alt="Orange"></p>
<a id="more"></a>
<p> 秋天，正是橘子上市的时节。后街对面的水果摊，2.8 元 / 斤，挑 10 个，7 块钱左右即可，微信支付，非常方便。相对来说，橘子真是够便宜。表皮金黄圆润，非常好剥，味道甜而不酸，饱满多汁，我一口气可以吃两个。拎回实验室，大家一起分享。</p>
<p> 突然想起来，“橘”和“桔”的区别在哪？以前似乎随便用，并无注意。寻思不得，Google 之。嘿，还真有不少门道和争论。</p>
<ul>
<li><a href="http://health.sohu.com/20151224/n432477039.shtml" target="_blank" rel="external"> 终于分得清橘、橙、柑、桔了！</a></li>
<li><a href="http://www.guokr.com/question/7111/" target="_blank" rel="external"> 桔 + 柑 + 橙 + 枳 + 有什么区别？</a></li>
<li><a href="https://www.zhihu.com/question/20686259" target="_blank" rel="external"> 桔子、橘子、芦柑三者之间的差别是什么？</a></li>
</ul>
<p> 看了半天，还是没搞明白。所以，我这吃的到底是“橘”、“桔”还是“柑”呢？反正肯定不是“橙”了。</p>
<p> 算了，还是吃个橘子压压惊吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[丢失的 Contributions]]></title>
      <url>http://rrkaige.com/2016/11/08/%E4%B8%A2%E5%A4%B1%E7%9A%84Contributions/</url>
      <content type="html"><![CDATA[<p>换电脑后，继续更新个人博客，deploy 之后，发现 GitHub 上 Contribution 的小绿块没有出现，郁闷。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161108-myblog102.jpg" alt="GitHub Contribution Graph"></p>
<a id="more"></a>
<p>因为之前换电脑迁移博客正好碰上 NexT 主题有 bug，<a href="https://github.com/iissnan/hexo-theme-next/issues/1214" target="_blank" rel="external">这里</a>。而且，博客内容可以正常 deploy，只是没有计入 Contribution。所以多次尝试无效后，暂时没多想。</p>
<p>结果连续几天都这样，我坐不住了。再看时，发现上次 <code>Rename source/vendors to source/lib</code> 更改还有遗漏，对照作者的 <a href="https://github.com/iissnan/hexo-theme-next/commit/565c09f6a45c75ffb8f74c88270b72fbe6e1a6e0#diff-b9cfc7f2cdf78a7f4b91a753d10865a2R28" target="_blank" rel="external"> 文档</a>，检查一遍。</p>
<p>再次尝试，问题依旧。Google 后，发现不一定是 NexT 的问题。</p>
<ul>
<li><a href="https://segmentfault.com/a/1190000000520300" target="_blank" rel="external">什么样的 contributions 会被 Github 计算在内？</a></li>
<li><a href="https://segmentfault.com/a/1190000004318632" target="_blank" rel="external">为什么 Github 没有记录你的 Contributions？</a></li>
<li><a href="https://mrxin.github.io/2014/08/11/no-contributions/" target="_blank" rel="external">contributions 不显示在 github 上</a></li>
</ul>
<p>上述提到是 <code>.gitconfig</code> 文件的问题。但我看里面 <code>name</code> 和<code>email</code>是正确的。</p>
<p>有 <a href="http://blog.52fhy.com/2015/07/05/hexo/solve_hexo_-d_problem/" target="_blank" rel="external"> 文章 </a> 提到 <code>repo</code> 应该是 <code>git@github.com:xxx/xxx.github.io.git</code> 形式的，不是 <code>https://github.com/xxx/xxx.github.io.git</code> 形式的。虽然问题不一样，但可以试试。我尝试修改 <code>_config.yml</code> 文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:xxx/xxx.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>更改，deploy，出现一个提示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Warning: Permanently added the RSA host key for IP address &apos;#&#123;Some IP address&#125;&apos; to the list of known hosts.</div></pre></td></tr></table></figure>
<p><a href="https://github.com/blog/1606-ip-address-changes" target="_blank" rel="external">IP Address Changes</a>，表示正常。</p>
<p>好吧，小绿块又回来了，完美。</p>
<p>所以，稀里糊涂解决了问题。</p>
<p>PS：顺手解决一直出现的问题：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">warning: LF will be replaced by CRLF in...</div></pre></td></tr></table></figure>
<p>输入命令<code>git config --global core.autocrlf false</code>，即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[尘埃落定]]></title>
      <url>http://rrkaige.com/2016/11/07/%E5%B0%98%E5%9F%83%E8%90%BD%E5%AE%9A/</url>
      <content type="html"><![CDATA[<p> 冒着大雨，签订三方，由此，尘埃落定。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161107-myblog101.jpg" alt="What Do You Wanna"></p>
<a id="more"></a>
<p> 不等了，尽管诸多不如意。两个月来，夙夜忧叹，紧张、担心、焦急、不满、感慨、内疚，时时缠绕，难以释怀。脸上起痘，心中烦躁。横向比较，拒绝两家 OFFER。因为等待，推迟签约时间。直到今天，下定决心，就这样吧。</p>
<p> 连日天晴，又起风雨。穿越大半个城市，履行约定。填写信息，签字盖章，大红圆圈宣告契约缔结。不出意外的话，就这样了。</p>
<p> 读书十八载，不说出类拔萃，心中自有矜持。本欲一展抱负，无奈伯乐难寻。理想的鸡蛋碰上现实的石头，一击粉碎。网申被刷，笔试被刷，面试被刷，太多太多被拒。几度怀疑，几度抑郁，还好，没成光头。</p>
<p> 细细想来，怨不得谁。从事技术类工作，无奈忙于俗事，没有实习，没有经验，必然受挫。</p>
<p> 但我并不甘心，并不甘心，并不甘心。</p>
<p> 尘埃虽定，且行且看。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何自在]]></title>
      <url>http://rrkaige.com/2016/11/06/%E5%A6%82%E4%BD%95%E8%87%AA%E5%9C%A8/</url>
      <content type="html"><![CDATA[<p> 昨晚，突如其来的焦虑，攫取了我的身心。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161106-myblog100.png" alt="House Rates"></p>
<a id="more"></a>
<p> 没有房，没有女朋友，刚走出象牙塔，无数门槛要跨越。</p>
<p> 不怕不识货，就怕货比货。好友找到了高薪工作，解决了房子问题。舍友刚谈了女朋友，在宿舍打电话甜腻到爆。那些进入国家电网之类，一生轻松。我奔波如此之多，尽是碰壁。</p>
<p> 就我目前而言，此前所有的努力，那些比赛、论文、专利、职务，以及随之而来的荣誉，在现实面前如此无力。我一头埋在学校，两耳不闻窗外事，忙乱于繁杂琐事，自以为是，沾沾自喜。然而毫无用处。书生意气不顶用，理想主义也不得不面对衣食住行。</p>
<p> 对待房子问题，之前的无知与犹豫，错失太多良机。刚需不容置疑，嗅觉实在差劲。唯有擦亮双眼，多看多跑，欠下的债，迟早要还。</p>
<p> 该集中精力，解决主要问题。该把目光放到自己身上，放到毕业工作、成家立业。毕竟，自己好，才有时间顾及其他。接下来，不能再天真。阶级跃迁的路上，容不得幻想与犹豫。一失足成千古恨，踏正确成百年功。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[小腾子的春天]]></title>
      <url>http://rrkaige.com/2016/11/05/%E5%B0%8F%E8%85%BE%E5%AD%90%E7%9A%84%E6%98%A5%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p> 小腾子来了，带着他的女朋友，老黄。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161105-myblog99.jpg" alt="Peach Blossom"></p>
<a id="more"></a>
<p> 明明比我们小很多，却一点不扭捏。活泼，爱笑，有着俩酒窝。当着我的面秀恩爱，也不觉得做作。就是这种性格了吧，让人怎么也讨厌不起来。我拍拍小腾子的肩膀，兄弟苦尽甘来，捡着宝了。</p>
<p> 他们来是为陈粒的演唱会。WHO？陈粒？回来搜索听听，发现歌还不错。果然，很久不关注这些了。</p>
<p> 其实上次来已经见过，第一印象就不错。饭桌上聊得很开，气氛融洽。他俩是小腾子同事介绍认识的，你来我往接触几次，就对上了眼，而今已如胶似漆。所以说，缘份来了，挡都挡不住。</p>
<p> 小腾子算是玩得来的好兄弟，高中至今，情谊深厚。当年和叶子的纠缠不清，如今双双找到幸福。欸，当班长的老毛病又犯了。</p>
<p> 总之，为兄弟开心。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java 开发环境搭建]]></title>
      <url>http://rrkaige.com/2016/11/04/Java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>新电脑，重新搭建 Java 开发环境，记录下来，以备后用。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161104-myblog98.jpg" alt="Java"></p>
<a id="more"></a>
<p>老规矩，下载 <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">Java SE</a>，安装之后配置环境变量，参照这篇<a href="http://www.runoob.com/java/java-environment-setup.html" target="_blank" rel="external"> 文章 </a>。至于原因，这篇<a href="http://blog.csdn.net/u010297957/article/details/51334951" target="_blank" rel="external"> 文章 </a> 解释很清楚。在系统变量中添加<code>JAVA_HOME</code>，<code>C:\Program Files\Java\jdk1.8.0_112</code>，在用户变量中添加<code>PATH</code>，<code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code>。在运行中键入命令: <code>java -version</code>、<code>java</code>、<code>javac</code>，查看结果。</p>
<p>写一个 Hello World 小程序<code>HelloWorld.java</code>，进行测试。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public class HelloWorld &#123;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        System.out.println(&quot;Hello World!&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在运行中键入<code>javac HelloWorld.java</code>，<code>java HelloWorld</code>，查看结果。</p>
<p>接下来，下载 <a href="https://www.eclipse.org/downloads/eclipse-packages/" target="_blank" rel="external">Eclipse IDE for Java Developers</a> 安装包，解压后打开即可用。参照这篇 <a href="http://wiki.jikexueyuan.com/project/eclipse/eclipse-install.html" target="_blank" rel="external"> 文章</a>。</p>
<p>导入 Java 项目，以 leetcode 为例。使用 GitHub 将项目 Clone 到本地，在 Eclipse 中 Import，使用<code>Git → Projects from Git</code>，一步步添加即可。Git 中的项目带有黄色方块角标（Indicates that the resource is under version control）。</p>
<p>如此，准备工作基本完成。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[新装备]]></title>
      <url>http://rrkaige.com/2016/11/03/%E6%96%B0%E8%A3%85%E5%A4%87/</url>
      <content type="html"><![CDATA[<p>思虑良久，换了新的手提电脑。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161103-myblog97.jpg-b" alt="Laptop"></p>
<a id="more"></a>
<p>正赶上双十一，到处大促销。在 JD 上寻找比较三天，挑中了现在这款，华硕飞行堡垒 FX-PRO。刚上大学买的华硕笔记本用到现在依然不错，不愧“华硕品质，坚如磐石”。</p>
<p>凌晨下单，下午就到货。拆箱开机，摸起来爱不释手。配置大致如下：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>配置</th>
</tr>
</thead>
<tbody>
<tr>
<td>处理器</td>
<td>Intel i5-6300HQ，2.3 GHz，三级缓存 6 M</td>
</tr>
<tr>
<td>芯片组</td>
<td>Intel HM170 PCH</td>
</tr>
<tr>
<td>内存</td>
<td>8GB，DDR4 2133 MHz，2 x SODIMM</td>
</tr>
<tr>
<td>显卡</td>
<td>独显：NV GTX 960M，核显：Intel HD Graphics 530，2 GB GDDR5</td>
</tr>
<tr>
<td>固态硬盘</td>
<td>128 G</td>
</tr>
<tr>
<td>机械硬盘</td>
<td>1 T，5400 转 / 分钟</td>
</tr>
</tbody>
</table>
<p>运行良好，完全足够日常使用。售价 5000 多，12 期无息，以后每月需还款 400 多。</p>
<p>接下来，就是枯燥繁重的安装软件过程。除去日常必需，还有就是 Git，Thunderbird 和个人博客了。</p>
<p>迁移个人博客时，遇到太多状况外。参照以前建个人博客的文章，以及这篇 <a href="http://puhemo.xyz/2016/06/03/hexo-change-pc/" target="_blank" rel="external"> 帮助</a>。大体分两步，先按照正常步骤把文件夹初始化做好，然后将必须的文件转移覆盖。</p>
<p>安装 Node 时，最新 6.9.1 LTS 版本问题多多，无法解决，不得已换成 4.4.4 LTS 版本，还得手动安装必要的 modules。发布时正好遇到 NexT 出问题，主页只显示空白背景，多次尝试后无解，上网搜索才发现是集体状况，<a href="https://github.com/iissnan/hexo-theme-next/issues/1214" target="_blank" rel="external">解决办法</a>。</p>
<p>终于搞定，心累，但也开心。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[好久不见]]></title>
      <url>http://rrkaige.com/2016/11/02/%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81/</url>
      <content type="html"><![CDATA[<p> 猴子回来，约饭走起。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161102-myblog96.jpg" alt="Long Time No See"></p>
<a id="more"></a>
<p> 青奥会的小伙伴，因为有缘，所以相识，因为投缘，所以再聚。</p>
<p> 两年多来，境况各异，工作、读研、出国，大家都在各自努力。</p>
<p> 每次重聚，都是一次近况回顾。大伙谈天说地，那些难忘的，琐碎的，八卦的，畅所欲言，如此欢乐。</p>
<p> 每次重聚，都有一场饕餮大餐。我们喜欢尝试不同的美食，也曾亲自动手下厨，在食物的芬芳中大快朵颐，不亦乐乎。</p>
<p> 每次重聚，都会一起搞怪自拍。那些笑脸，定格在那一瞬间，多年后回首，定会绽开笑颜。</p>
<p> 今天，我，猴子，小金金，菲菲，安琪，重聚在一家日料店。多日不见，如此亲切。</p>
<p> 夜已深，冷风寒。我们挥手作别，期待下次再聚。</p>
<p> 晚上想到，我们才认识近 800 天？嗯，我们已认识近 800 天。</p>
<p> 路还很长，相约不散。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[雨后天晴]]></title>
      <url>http://rrkaige.com/2016/11/01/%E9%9B%A8%E5%90%8E%E5%A4%A9%E6%99%B4/</url>
      <content type="html"><![CDATA[<p> 雨后天晴，一如心情。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161101-myblog95.jpg" alt="It Was Fine After The Rain"></p>
<a id="more"></a>
<p> 绵绵阴雨退去，久违的阳光普照。地面渐干，气温回暖。人们走出房间，姑娘又穿上丝袜。</p>
<p> 我走在路上，前去面试的路上，沐浴在阳光中，心情也格外晴朗。</p>
<p> 这一个月来，断断续续的秋雨笼罩这座城市，抬头是灰蒙蒙天空，刺骨的寒冷将人包裹地严严实实。</p>
<p> 我讨厌下雨，没有带来生机，却预示着严冬。无法晾干的衣物，冰冷的被衾，随身携带的雨具，如此厌烦。</p>
<p> 终于，过去了。接下来会有一周的好天气。</p>
<p> 我的脚步无比轻松。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[幻灭的美好]]></title>
      <url>http://rrkaige.com/2016/10/31/%E5%B9%BB%E7%81%AD%E7%9A%84%E7%BE%8E%E5%A5%BD/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 苏堤春晓，此处无声，欲问西子，佳人奈何。</p>
<p> 水光潋滟晴方好，除却巫山不见云。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161031-myblog94.jpeg" alt="Only You"></p>
<a id="more"></a>
<p> 就像流星划过天空，我的爱情，半途夭折。</p>
<p> 昨天，返程的火车上，我终于问出心底的疑惑。</p>
<p> 那你有男朋友么？</p>
<p> 我有丈夫。</p>
<p> 好吧。早有准备的我，犹豫半天敲出这七个字的我，忐忑不安点击发送的我，仿佛被抽干了所有气力，如释重负又满心苦涩。</p>
<p> 为什么？</p>
<p> 前天，我一路睡到杭州，在拥挤的地铁中询问。她已结束面试，上了去火车站的公交。就这么擦肩而过。我笑言她轻轻的来，悄悄的走。结果，一语成谶。</p>
<p> 前晚，夜游西湖，在苏堤的桥上，我写下了第一句。奈何奈何？</p>
<p> 昨天，逛完西湖，和她瞎聊。在火车站错误的检票口傻等，差点误了车次。她是如此的独特！独来独往，随心任性，不悲过去，只做能掌控的事。一句一句，我笑言她有人生导师的即视感。她直言只和有想法的人多说，所以女性朋友不多，反而容易和男生处朋友。于是，回到开头的一幕。</p>
<p> 过程大抵如此。</p>
<p> 铁锤砸碎了幻镜，我也随之放开。越深入了解，越惊讶万分。他们夫妻的关系，相处的态度，相互吸引又完全独立，仿若小说中的情节。我只能惊叹，赞叹，感叹，别无他念。</p>
<p> 这短短一周，仿若过山车般。回味，咀嚼，我写下了第二句。不见云呵。</p>
<p> 我的爱情，妳在哪里？</p>
<p> 就这样吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[杭州印象]]></title>
      <url>http://rrkaige.com/2016/10/30/%E6%9D%AD%E5%B7%9E%E5%8D%B0%E8%B1%A1/</url>
      <content type="html"><![CDATA[<p> 昨天，一次面试，前往杭州，这座从未踏足的城市。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161030-myblog93.jpg" alt="Hangzhou"></p>
<a id="more"></a>
<p> 面试地点在西溪路，结束出来，天色已晚。沿着干净的街道，很快到了浙大。</p>
<p> 一进浙大校园，拦住一对情侣，食堂何处？遥指前方不远，喏！好吧，留学生食堂，的确很有特色。不是快餐打菜，而是柜台点菜，但大家又随便坐，等待服务员上菜。点了份蒜蓉空心菜，梅菜扣肉，结果一个略生，一个太齁。好在找位置时遇到雯雯，意大利来的华裔，文静略僵硬的口音，交谈甚欢。</p>
<p> 浙大的校园很长，这头到那头走了二十分钟。许是太大，虽处处有路灯，依然昏暗。路上有学子，行色匆匆或欢快交谈。也有很多外人，中间路遇到一群广东过来参加培训的，粤语味浓。</p>
<p> 浙大也有后街，不宽却长。两边都是大栋居民楼，改建成超市旅馆大排档，彩灯、阳伞、秋千，闪耀的霓虹招牌，烤鱼的火炉冒着烟气，玻璃窗内推杯换盏，身着制服相隔不远的辅警，警车灯在夜色下闪烁。</p>
<p> 终于走到西湖，上了苏堤，笔直宽敞，间或四五座拱桥，起伏很大。坐在堤边长椅上，看远处灯火辉煌，听近处水波阵阵，感觉和玄武湖边差不了多少。</p>
<p> 继续前进，走走停停，两边都是大树，路灯斑驳，静谧孤独。累了，歇会，挨到车站，腰酸脚疼，今天走了太多路。直接坐公交去房东家，结果又多坐一站。寻寻觅觅，终于到了目的地。开门是位小姐姐，家里干净整洁。洗个热水澡，躺在沙发上。惬意，就这样入眠吧。</p>
<p> 大清早起来，计划去西湖边看看。到车站公交刚走，不得已等了近半个小时，人多到爆炸。明明周末，还这么多人上班？到处都在修地铁，工地上热火朝天，交通自然拥堵。经过钱塘江大桥，江面不宽，江水浑浊，装沙的大船排成长条。</p>
<p> 看看时间，坐到西湖问水亭，沿着曲折的岸漫步。碧波荡漾，垂柳依依，廊道回转，拱桥精美。湖面有高大的画舫，摇橹的扁舟，与小岛凑成一副画卷。晨练的老人，欢快的小孩，自拍的游客，吃食的鸽子，还有树间跳跃的松鼠。但，越发觉得和玄武湖如此相似，只是更大，人更多而已。或者说，杭州，和南京是如此的相似。中国的大都市都是如此相似。</p>
<p> 将将赶上返程的火车，回到大南京，看着车站地铁拥挤的人流，无奈苦笑。杭州，下次再约。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[同学新婚视频制作之二]]></title>
      <url>http://rrkaige.com/2016/10/29/%E5%90%8C%E5%AD%A6%E6%96%B0%E5%A9%9A%E8%A7%86%E9%A2%91%E5%88%B6%E4%BD%9C%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p> 辛苦这般为了啥？执念吧。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161029-myblog92.jpg" alt="Happy Marriage"></p>
<a id="more"></a>
<p> 现在是早上 5 点 40 分，不是刚起，是一夜未睡。只为做个视频，我又一次通宵。</p>
<p> 大学舍友伟子今天结婚，二十多天前搞的“突然袭击”。前有灿姐，后有伟子，这个十月班里喜事成双。伟子是内蒙人，婚礼远在呼市，同宿舍的兄弟唯有黑子前往，我们只能遥祝幸福，且捎去份心意。当然，月初灿姐结婚，刚定下的章程，我又得操刀，做个视频。</p>
<p> 收齐大家的祝福短片，以及手写的祝福语，我本想简单拼接制作，花不了多少时间。事实证明，我又一次高估了自己的能力，低估了自己的想法，结果，花了整整一宿，完成了这次任务。</p>
<p> 我在做视频过程中，翻出之前的老照片，于是冒出无数 idea。干嘛不剪个宿舍兄弟情？干脆全都放进去，算是个回忆。好吧，我无法不去做。这样一来，内容的构思，照片的处理，视频的衔接，细节的推敲，花费了太多时间，以至于直到现在。</p>
<p> 好在，我终于完成了。现在，趁着视频上传，且休息一会。</p>
<p> 眯了一会，天已大亮，该起来干活了。视频在下面。</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTc3ODY5MDUxNg==" frameborder="0" 'allowfullscreen'=""></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一见钟情么]]></title>
      <url>http://rrkaige.com/2016/10/28/%E4%B8%80%E8%A7%81%E9%92%9F%E6%83%85%E4%B9%88/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 当你对一个人产生好奇的时候，你就喜欢上 TA 了。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161028-myblog91.jpg" alt="Love at First Sight"></p>
<a id="more"></a>
<p> 是的，我现在是如此的激动，心跳很快。我觉得，我喜欢上她了。</p>
<p> 就是那个女孩，云。23 号的群面，在我之前，坐我旁边。进房间前，很自然搭上了话，文文静静，只一眼就有好感。群面时，不缓不急，声如珠玉。当面试官问她，会从在座十位同学选哪两位共事时，我屏住了呼吸。然后，满心欢喜却强忍笑意。是的，有我。我转过头，看她侧脸优美的曲线，耳边一缕青丝。那一瞬间，我沦陷了。</p>
<p> 当然，我注意到她左手无名指的戒指，暗自忐忑。结束后，没有多聊就分开了。直到坐上公交，上网一查，天，结婚戒指？不，不一定吧。也许——我也不知道也许啥。我暗自叹息，也没要联系方式，还能再见么？</p>
<p> 那天晚上，我神思不属。只记得她本科和研究生的学校，上网一搜，还真有！本科的学院？好像和小雨一样啊。小雨是我的高中同学，果断询问。啊哈，认识的，就这样要到了她的 QQ 号。加不加？我犹豫不决。</p>
<p> 直到昨天，我收到终面的通知，需要明天前往杭州。是时候了，我对自己说。加好友，打招呼，说明来意，就这么聊开了。什么？也是我们县的？什么？初中就是在县中上的？那岂不是有很多认识的同学？对啊！天！是巧合么？就这样熟悉，愉快地交谈，像认识很久的老朋友。哦，你也收到终面通知了？一个人？那正好啊。我适时提出一同坐车前去，结果已买票，而且已售罄，面试时间也相差两小时。好吧，那就，杭州见。很高兴认识你，我很开心！</p>
<p> 晚上，按耐不住的我，忍不住向暴暴打听。暴暴也是我的高中同学，果然认识，而且还有个大新闻。她就是我们那一届的县中考状元，由此去了市里读书。原来，当年入学考试，旁边第一排空着的位置就是她的啊？怪不得总感觉名字如此熟悉，我恍然大悟。而且，貌似也是高考没发挥好，但最终考研逆袭成功。</p>
<p> 如此有缘。</p>
<p> 于是，今天的我总会莫名兴奋。我问阿修和小妹，他们都说我恋爱了。是的，很久没这么冲动，陷入无限遐思。但是，他们提到了戒指，像锤子砸碎幻镜。我忐忑不安，却无法直言相问。等等吧，我安慰自己。明天就能见到了，会搞清楚的。</p>
<p> 我敲下这些文字，依然无法平静。先把手头工作搞定，今夜注定无眠。</p>
<p> 或许，这就是一见钟情吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[学校边的商机]]></title>
      <url>http://rrkaige.com/2016/10/27/%E5%AD%A6%E6%A0%A1%E8%BE%B9%E7%9A%84%E5%95%86%E6%9C%BA/</url>
      <content type="html"><![CDATA[<p> 一直以来，我都在思考，身边人也在讨论。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161027-myblog90.jpg" alt="Business"></p>
<a id="more"></a>
<p> 作为一名大学生，我们的眼光局限在学校周边。六年来，那些店铺起起伏伏，但是，总有很多奇迹。</p>
<p> 前街卖包子的夫妻俩，生意虽小，收入可观，女儿女婿又在别处开了分店。后街卖包子的连锁店，价格更贵，每天依然排着长队，晚起就买不到。卖粥的小门面，一平米多点，价格不菲，生意火爆。卖糕点的铺子，各色小食，五花八门，过路行人总会驻足称些。卖水果的，街面两边同属一家，摊子摆到人行道，一天到晚不停歇，边上又开一家同样如此。卖奶茶的，当年一溜几家，个个赚的盆满钵满。黄焖鸡，外卖之王，送外卖的小哥一刻不停。远一些的骨头饭，地锅鸡，大盆菜，咖喱饭，羊肉汤，水饺店，麻辣烫，鸡蛋饼，烧烤店，鸭血粉丝，家家生意都不错。还有那几家大餐馆，一到假期就装修升级，越来越高大上，搞起了加盟经营。</p>
<p> 细细数来，让人惊讶。当然，多是餐饮。学校周边，食为先。现吃现结，快速消费。只要口碑好，不怕没钱赚。</p>
<p> 当然，也有其他行当。眼镜店，绝对暴利。理发店，绝对高级。文具店，绝对坚挺。医药店，绝对不缺。照相馆，绝对需要。还有数不尽的网吧，哦，网咖。</p>
<p> 因为紧邻小区，房产中介多如牛毛。菜市场，大超市，五金店，通讯营业厅，这些同样必须。</p>
<p> 但是，还是卖吃的最赚钱。国人，爱吃。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[与时俱进]]></title>
      <url>http://rrkaige.com/2016/10/26/%E4%B8%8E%E6%97%B6%E4%BF%B1%E8%BF%9B/</url>
      <content type="html"><![CDATA[<p> 表哥开了个微店。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161026-myblog89.jpg" alt="Keep Up With The Times"></p>
<a id="more"></a>
<p> 表哥养螃蟹有些年头，接触电商这还是头一遭。以前都是卖给中间商，或有零星散客。总体来说，没亏本，也没赚大钱。前段时间，表哥开始在朋友圈发图卖螃蟹，做成不少生意。而今天，表哥找我帮他开通微店。</p>
<p> 前后忙活一小时，表哥的微店正式上线。略显简陋，但也算迈出一小步。</p>
<p> 我不禁反思，平时常在网上购物，却从未想过网上淘金。微商微店如火如荼，大多时候鄙视之。或许是读了大学，不自觉高人一等，总觉得那些在朋友圈买东西的都是坑货，为之不耻。我还算理智，听之任之，没有吐槽拉黑。现在想想，是否是封建思想作祟？士农工商的等级观念融入血肉，上完大学就要找个工作，至于自己创业做生意，特别是消费品这种和专业完全不合的，想都不想。</p>
<p> 这个年代，做生意发大财的太多太多。大学出来，找份稳定工作，表面光鲜，日子依然紧巴巴。诚然，做生意有苦有累，还有风险。我也不可能真正放下一切去创业，至少目前。但是，我的思维不应僵化，不能局限在以前的舒适区，后知后觉。时代在变，而且越变越快，掌握并运用新的工具，为自己服务，才能在浪潮中分一杯羹。否则，连汤都喝不上。</p>
<p> 表哥的微店给我这些思考。作为家里的大学生，传递新思想，我责无旁贷。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[外甥女的背水一战]]></title>
      <url>http://rrkaige.com/2016/10/25/%E5%A4%96%E7%94%A5%E5%A5%B3%E7%9A%84%E8%83%8C%E6%B0%B4%E4%B8%80%E6%88%98/</url>
      <content type="html"><![CDATA[<p> 回家，和外甥女一番长谈。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161025-myblog88.jpg" alt="Study Until Die"></p>
<a id="more"></a>
<p> 外甥女今年中考失利，分数刚够县里三中，她决定复读一年。家里商量之后，花钱托关系，还是进了原来的镇初中，和升上来的初三学生同班。平时走读，为了方便，住在我家。</p>
<p> 这次回来，本是拿御寒的衣服。看到她的学习状态，不禁着急。母亲这边亲戚，走动比较频繁。家中小一辈，逐渐长大。外甥女侄子，学习都不甚理想。晚上看她早早写完作业，多谈几句。</p>
<p> 聊天中，发现她仍未进入状态。或许是和应届生同班的原因，每天依然上上新课，做做作业，按部就班，循规蹈矩。计划？没有。复习？没想。目标？县中！额……想法很好，缺少行动啊。</p>
<p> 我打开电脑，输入“复读是种怎样的体验”，在知乎上挑了两个实例给她看。又查到今年县中二中三中的高考情况，县中本一达线 260 人、本二 349 人，二中本二以上达线 171 人，三中本一达线 1 人、本二 7 人，这是连我都惊讶的数据。谈到大学的情况，985 高校、211 高校、普通一本高校，社会就业情况，零零总总，不厌其烦。而这一切，从中考开始。这是人生的第一个分水岭。</p>
<p> 聊到她现在状态，脑袋中的弦未绷紧，还在等老师安排，却没有主动复习。去年买的资料正该好好利用，先复习一到两遍才能领先一步。题海战术，多做多想，理清脉络，化繁为简。做到这些，必有回响。</p>
<p> 如此，还得看她自己的悟性。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[剃头]]></title>
      <url>http://rrkaige.com/2016/10/24/%E5%89%83%E5%A4%B4/</url>
      <content type="html"><![CDATA[<p> 我想，我真是个念旧的人。单拿剃头来说，人生的前 25 年，是 5 家理发店的常客。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161024-myblog87.jpg" alt="Haircut"></p>
<a id="more"></a>
<p> 上学前，家还在村里。村上有家理发店，给全村老少服务。四十多岁的中年人，腿脚不便，婆娘早故，剩下一个女儿，靠理发度日。具体已经没印象，只记得满面笑容，拿着剃刀在皮革带上熟练地划拉几下，给顾客刮去一脸泡沫。</p>
<p> 上小学，家搬到镇上。车队门口有个理发店，昏暗逼仄，人一多只能站在门口。瘸腿的老头，陈旧的工具，每次移步都费些劲。没过几年，人去店也关了。</p>
<p> 只能去稍远另一条街的理发店，这次是个三十出头的男人，戴副眼镜，文质彬彬。家里装修不错，大镜子，软躺椅，烫发机，还隔出了洗头的小房间。手艺很好，我中小学的小平头全出自他手。</p>
<p> 之后搬了家，去县城上高中，仍是趁回家的周末剃头。这次去的理发店，是对外地来的夫妻，生活多年，已能说本地方言。我只剃短发，看不出手艺好坏，由此直到考上大学。</p>
<p> 到了大学，周边理发店不少，装修高档，动辄十几二十。所幸还有后街，小区之中，总有家庭式理发店。依然是夫妻档，便宜实惠。六年来，基本每月光顾一次，价格也从五元涨到七元，但依然实在。</p>
<p> 晚上刚去剃了个头，想想，佩服我自己。</p>
<p> 谨以为记。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[群面]]></title>
      <url>http://rrkaige.com/2016/10/23/%E7%BE%A4%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p> 应聘后端开发，却遭遇一场群面。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161023-myblog86.jpg" alt="Apple And Google"></p>
<a id="more"></a>
<p> 签到时通知群面，一下子惊到了。做技术群面什么鬼？团队协作能力？好吧，既来之则安之。</p>
<p>10 个人，分坐长桌两边。规则是：读题 5 分钟，各自介绍 1 分钟，讨论 20 分钟，总结 3 分钟。题目是：根据移动互联网发展前景，对 7 项内容进行重要性排序，大概是 LTE 网络、3*3 开发平台、可穿戴设备、智能终端、定位技术、监控技术和好的设计。</p>
<p> 都是第一次面对这种情况，有点乱。有人过于主动，有人全程无话，有人言之无味，有人计时却不能很好把控全场，有人记录却总结不够到位，有人想法不同但被迫妥协。我发挥一般中规中矩。面试官的意思，我们过早达成一致。完了问我为什么不主动总结？额……我保留意见。又逐一发问，比较尖锐。后续聊到地点选择，手中 Offer，最后还要英文自我介绍。前后长达一小时。</p>
<p> 总之，一次全新的体验吧。</p>
<p> 嗯，在我前面的妹子很漂亮。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[垫底辣妹]]></title>
      <url>http://rrkaige.com/2016/10/22/%E5%9E%AB%E5%BA%95%E8%BE%A3%E5%A6%B9/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 世界上最大的谎言是你不行。</p>
</blockquote>
<p> 原来，日本也有这种正能量电影。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161022-myblog85.jpg" alt="Flying Colors"></p>
<a id="more"></a>
<p> 大概讲的是一个成绩垫底的辣妹工藤沙耶加，通过补习班突击，幡然醒悟，奋勇拼搏，考上庆应大学的故事。等等，怎么听起来好像是补习班广告。其实不尽然，主要是补习班坪田老师因材施教，让学生充满动力。</p>
<p> 当然，中间穿插了家庭和学校的故事，整个剧情波折起伏。爱孩子的伟大妈妈，有爱难言的热心爸爸，懂事的妹妹，叛逆的弟弟，带有偏见的学校老师，永远的姐妹淘。最后考试一波三折，让人揪心。由于喝饮料肚子疼，没考上第一志愿，但也进了庆应大学，最终皆大欢喜。</p>
<p> 所以，真的是励志热血，正能量满满。网上评价很高，很多人感同身受。在中国这样一个高考激烈程度远甚日本的国家，大家都看到了自己的影子。可惜，国内却缺少如此真诚的作品。而这，才是青春片该有的样子。</p>
<blockquote>
<p> 天不造人上人，亦不造人下人。</p>
</blockquote>
<p> 原来，只有我们自己能决定自己的未来。</p>
<p> 还有，女主真的是辣妹。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[锤子]]></title>
      <url>http://rrkaige.com/2016/10/21/%E9%94%A4%E5%AD%90/</url>
      <content type="html"><![CDATA[<p> 看完锤子手机发布会。一个字，爽。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161021-myblog84.jpg" alt="Luo Yonghao"></p>
<a id="more"></a>
<p> 知道老罗是从他做手机开始的。进而了解到他之前的一些光辉事迹，英语老师创办网站，拎起锤子砸掉冰箱。总而言之，做了一些常人敢想不敢做的事。包括做手机。</p>
<p> 这次的发布会同样有情怀，但也有妥协。理想面对现实，往往都得低头。不低头，你就输了。</p>
<p> 但仍有亮点。给我印象最深的就是开源。Big Bang 和 One Step 这两个功能，真正切中痛点，现场就点燃观众热情。令人惊喜的是，还要开源，我不得不佩服。我一向热爱开源，之前对锤子把门票钱捐给开源社区的行为就有好感。这次真是身体力行了。抛开其他不谈，能作出这种决定，就已经说明问题。</p>
<blockquote>
<p> 锤子科技的一小步，智能手机的一大步。</p>
</blockquote>
<p> 多少年后，即使没了锤子，恐怕也会记得这些坚持。</p>
<p> 当然，希望能有。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[路见]]></title>
      <url>http://rrkaige.com/2016/10/20/%E8%B7%AF%E8%A7%81/</url>
      <content type="html"><![CDATA[<p> 秋雨烦人，这样的鬼天气，我依然出门奔波。没办法，为了工作，只能辛苦些。今天多跑点，明日少累点，也值。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161020-myblog83.jpg" alt="Crowded Bus"></p>
<a id="more"></a>
<p> 站稳脚跟，我抹了把汗。天气湿冷，长袖长裤的我却一身是汗。我能想象别人眼中自己的狼狈样：头发凌乱，衣衫不整，裤腿尽湿，鞋带还散开着。刚从地铁站出来，远远看到站台边的公交，发足狂奔，紧赶慢赶正好上车，那还顾得了其他。这不，伞还在滴水，鞋带只能拖着，我从前挪到后，无法转身，更别提弯腰。先随它去吧，我抓紧扶手，随车起伏。</p>
<p> 上地铁前，我撑伞走了两公里。面试结束，想着看看周边环境，提脚就走。没料到雨越下越大，把我淋成落汤鸡。钻进地铁，我松了口气，整整衣装，找个空位坐下。左顾右看，掏出手机玩耍。旁边的小哥游戏声太大，引来对面小学生围观。妈妈一声喊，乖乖回去坐好。</p>
<p> 一个急刹车，我回过神来。一车人前扑后倒，哎呦声声。</p>
<p> 堵车了。下班放学的高峰，一眼望去，全是亮着红灯的车屁股。早知道就该转地铁，我暗恨。车中湿闷，身上更热，汗珠滑落脸颊，我胡乱在肩膀蹭蹭，一股汗馊味。坐着的人闭眼打盹，站着的昏昏欲睡，大家都面无表情。终于开了点窗，冷风灌进来，舒服些。</p>
<p> 短短路程，半个小时才到。下车后，蹲在站台系鞋带，风吹翻了雨伞，囧。</p>
<p> 如果我有钱，肯定不坐公交。</p>
<p>PS：</p>
<p> 地铁上，医院挂完水的宝宝哭闹不停。小伙让出座位；边上打扮时髦的大姐，一口标准普通话，教导爷俩给宝宝穿太多衣服；年轻妈妈递过来香蕉，逗宝宝开心。</p>
<p> 公交上，美丽的大姐，捡到公共自行车卡，发声询问，穿着雨衣的老太向后传达，大家互相提醒，但无人认领，大概失主已经下车。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[蘑菇]]></title>
      <url>http://rrkaige.com/2016/10/19/%E8%98%91%E8%8F%87/</url>
      <content type="html"><![CDATA[<p> 本来无一物，孢子何处来？</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161019-myblog82.jpg-b" alt="Mushroom"></p>
<a id="more"></a>
<p> 早起，推开厕所门，板凳边沿靠墙处，一丛灰黄。啥情况？瞪大眼睛，蘑菇！</p>
<p> 万万没想到，此时此处，真真的是蘑菇。毫无预兆，一夜之间，全撑开了小伞。细细数来，怕不下二十只，大大小小，挤挤泱泱，高低错落，欣欣向荣。</p>
<p> 这种凳子，用的是木屑压制成的刨花板。塑料边沿脱落后，浸水发胀，成了蘑菇的天然温床。</p>
<p> 可是，哪来的呢？</p>
<p> 许是风，裹挟着脱落的孢子，旋转，跳跃，拐过墙角，扶摇直上，穿过气窗的狭缝。风止了，孢子也落了下来。</p>
<p> 许是老早就有，混合着木屑，从木板到凳子，不远千里，静静地休眠。直到边沿脱落，再见阳光，从睡梦中醒来，舒展身体。</p>
<p> 总之，生命的惊喜。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Javascript BOM 学习笔记]]></title>
      <url>http://rrkaige.com/2016/10/18/Javascript-BOM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 学习 JavaScript BOM，教程来自 <a href="http://www.w3schools.com/js/js_window.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161018-myblog81.jpg" alt="I Love Javascript"></p>
<a id="more"></a>
<h3 id="Window-The-Browser-Object-Model"><a href="#Window-The-Browser-Object-Model" class="headerlink" title="Window - The Browser Object Model"></a>Window - The Browser Object Model</h3><p>The Browser Object Model (BOM) allows JavaScript to “talk to” the browser.</p>
<p>There are no official standards for the <strong>Browser Object Model</strong> (BOM).</p>
<p>Since modern browsers have implemented (almost) the same methods and properties for JavaScript interactivity, it is often referred to, as methods and properties of the BOM.</p>
<p>All global JavaScript objects, functions, and variables automatically become members of the window object.</p>
<ul>
<li>Global variables are properties of the window object.</li>
<li>Global functions are methods of the window object.</li>
</ul>
<p>Even the document object (of the HTML DOM) is a property of the window object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">window.document.getElementById(&quot;header&quot;);</div><div class="line">document.getElementById(&quot;header&quot;);</div></pre></td></tr></table></figure>
<p>Two properties can be used to determine the size of the browser window.</p>
<ul>
<li><code>window.innerHeight</code> - the inner height of the browser window (in pixels)</li>
<li><code>window.innerWidth</code> - the inner width of the browser window (in pixels)</li>
</ul>
<p><strong>Note:</strong> The browser window (the browser viewport) is NOT including toolbars and scrollbars.</p>
<p>For Internet Explorer 8, 7, 6, 5:</p>
<ul>
<li><code>document.documentElement.clientHeight</code>, <code>document.documentElement.clientWidth</code></li>
</ul>
<p>or</p>
<ul>
<li><code>document.body.clientHeight</code>, <code>document.body.clientWidth</code></li>
</ul>
<p>A practical JavaScript solution (covering all browsers):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var w = window.innerWidth</div><div class="line">|| document.documentElement.clientWidth</div><div class="line">|| document.body.clientWidth;</div><div class="line"></div><div class="line">var h = window.innerHeight</div><div class="line">|| document.documentElement.clientHeight</div><div class="line">|| document.body.clientHeight;</div></pre></td></tr></table></figure>
<p>Some other methods:</p>
<ul>
<li><code>window.open()</code> - open a new window</li>
<li><code>window.close()</code> - close the current window</li>
<li><code>window.moveTo()</code> -move the current window</li>
<li><code>window.resizeTo()</code> -resize the current window</li>
</ul>
<h3 id="Window-Screen"><a href="#Window-Screen" class="headerlink" title="Window Screen"></a>Window Screen</h3><p>The <code>window.screen</code> object can be written without the window prefix.</p>
<ul>
<li>The <code>screen.width</code> property returns the width of the visitor’s screen in pixels.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">&quot;Screen Width: &quot; + screen.width;</div></pre></td></tr></table></figure>
<ul>
<li>The <code>screen.height</code> property returns the height of the visitor’s screen in pixels.</li>
<li>The <code>screen.availWidth</code> property returns the width of the visitor’s screen, in pixels, minus interface features like the Windows Taskbar.</li>
<li>The <code>screen.availHeight</code> property returns the height of the visitor’s screen, in pixels, minus interface features like the Windows Taskbar.</li>
<li>The <code>screen.colorDepth</code> property returns the number of bits used to display one color.</li>
</ul>
<p><strong>Note:</strong> The #rrggbb (rgb) values used in HTML represents “True Colors” (16,777,216 different colors)</p>
<ul>
<li>The <code>screen.pixelDepth</code> property returns the pixel depth of the screen.</li>
</ul>
<p><strong>Note:</strong> For modern computers, Color Depth and Pixel Depth are equal.</p>
<h3 id="Window-Location"><a href="#Window-Location" class="headerlink" title="Window Location"></a>Window Location</h3><p>The <code>window.location</code> object can be written without the window prefix.</p>
<ul>
<li><code>window.location.href</code> returns the href (URL) of the current page</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">&quot;Page location is &quot; + window.location.href;</div></pre></td></tr></table></figure>
<ul>
<li><code>window.location.hostname</code> returns the domain name of the web host</li>
<li><code>window.location.pathname</code> returns the path and filename of the current page</li>
<li><code>window.location.protocol</code> returns the web protocol used (http:// or https://)</li>
<li><code>window.location.assign</code> loads a new document</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">function newDoc() &#123;</div><div class="line">    window.location.assign(&quot;http://www.w3schools.com&quot;)</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;input type=&quot;button&quot; value=&quot;Load new document&quot; onclick=&quot;newDoc()&quot;&gt;</div></pre></td></tr></table></figure>
<h3 id="Window-History"><a href="#Window-History" class="headerlink" title="Window History"></a>Window History</h3><p>The <code>window.history</code> object can be written without the window prefix.</p>
<p>To protect the privacy of the users, there are limitations to how JavaScript can access this object.</p>
<ul>
<li><code>history.back()</code> - same as clicking back in the browser</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">function goBack() &#123;</div><div class="line">    window.history.back()</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;input type=&quot;button&quot; value=&quot;Back&quot; onclick=&quot;goBack()&quot;&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>history.forward()</code> - same as clicking forward in the browser</li>
</ul>
<h3 id="Window-Navigator"><a href="#Window-Navigator" class="headerlink" title="Window Navigator"></a>Window Navigator</h3><p>The <code>window.navigator</code> object can be written without the window prefix.</p>
<ul>
<li>The <strong>cookieEnabled</strong> property returns true if cookies are enabled, otherwise false.</li>
<li>The <strong>appName</strong> property returns the application name of the browser.</li>
</ul>
<p><strong>Note:</strong> Strange enough, “Netscape” is the application name for both IE11, Chrome, Firefox, and Safari.</p>
<ul>
<li>The <strong>appCodeName</strong> property returns the application code name of the browser.</li>
</ul>
<p><strong>Note:</strong> “Mozilla” is the application code name for both Chrome, Firefox, IE, Safari, and Opera.</p>
<ul>
<li>The <strong>product</strong> property returns the product name of the browser engine.</li>
<li>The <strong>appVersion</strong> property returns version information about the browser.</li>
<li>The <strong>userAgent</strong> property returns the user-agent header sent by the browser to the server.</li>
<li>The <strong>platform</strong> property returns the browser platform (operating system).</li>
<li>The <strong>language</strong> property returns the browser’s language.</li>
<li>The <strong>onLine</strong> property returns true if the browser is online.</li>
<li>The <code>javaEnabled()</code> method returns true if Java is enabled.</li>
</ul>
<h3 id="Popup-Boxes"><a href="#Popup-Boxes" class="headerlink" title="Popup Boxes"></a>Popup Boxes</h3><p>JavaScript has three kind of popup boxes: <strong>Alert box</strong>, <strong>Confirm box</strong>, and <strong>Prompt box</strong>.</p>
<p>An alert box is often used if you want to make sure information comes through to the user. When an alert box pops up, the user will have to click “OK” to proceed.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">window.alert(&quot;sometext&quot;);</div></pre></td></tr></table></figure>
<p>The <code>window.alert()</code> method can be written without the window prefix.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(&quot;I am an alert box!&quot;);</div></pre></td></tr></table></figure>
<p>A confirm box is often used if you want the user to verify or accept something. When a confirm box pops up, the user will have to click either “OK” or “Cancel” to proceed. If the user clicks “OK”, the box returns true. If the user clicks “Cancel”, the box returns false.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">window.confirm(&quot;sometext&quot;);</div></pre></td></tr></table></figure>
<p>The <code>window.confirm()</code> method can be written without the window prefix.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&quot;myFunction()&quot;&gt;Try it&lt;/button&gt;</div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">    var x;</div><div class="line">    if (confirm(&quot;Press a button!&quot;) == true) &#123;</div><div class="line">        x = &quot;You pressed OK!&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">        x = &quot;You pressed Cancel!&quot;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = x;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>A prompt box is often used if you want the user to input a value before entering a page. When a prompt box pops up, the user will have to click either “OK” or “Cancel” to proceed after entering an input value. If the user clicks “OK” the box returns the input value. If the user clicks “Cancel” the box returns null.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">window.prompt(&quot;sometext&quot;,&quot;defaultText&quot;);</div></pre></td></tr></table></figure>
<p>The <code>window.prompt()</code> method can be written without the window prefix.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&quot;myFunction()&quot;&gt;Try it&lt;/button&gt;</div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">    var person = prompt(&quot;Please enter your name&quot;, &quot;Harry Potter&quot;);</div><div class="line">    if (person != null) &#123;</div><div class="line">        document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">        &quot;Hello &quot; + person + &quot;! How are you today?&quot;;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>To display <strong>line breaks</strong> inside a popup box, use a <strong>back-slash followed by the character n</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(&quot;Hello\nHow are you?&quot;);</div></pre></td></tr></table></figure>
<h3 id="Timing-Events"><a href="#Timing-Events" class="headerlink" title="Timing Events"></a>Timing Events</h3><p>The window object allows execution of code at specified time intervals.</p>
<p><code>setTimeout(function, milliseconds)</code> executes a function, after waiting a specified number of milliseconds.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&quot;setTimeout(myFunction, 3000)&quot;&gt;Try it&lt;/button&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">    alert(&apos;Hello&apos;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>The <code>clearTimeout()</code> method stops the execution of the function specified in <code>setTimeout()</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">myVar = setTimeout(function, milliseconds);</div><div class="line">clearTimeout(myVar);</div></pre></td></tr></table></figure>
<p><code>setInterval(function, milliseconds)</code> is same as <code>setTimeout()</code>, but repeats the execution of the function continuously.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var myVar = setInterval(myTimer, 1000);</div><div class="line"></div><div class="line">function myTimer() &#123;</div><div class="line">    var d = new Date();</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = d.toLocaleTimeString();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>clearInterval()</code> method stops the executions of the function specified in the <code>setInterval()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;button onclick=&quot;clearInterval(myVar)&quot;&gt;Stop time&lt;/button&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var myVar = setInterval(myTimer, 1000);</div><div class="line">function myTimer() &#123;</div><div class="line">    var d = new Date();</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = d.toLocaleTimeString();</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h3><p>Cookies are data, stored in small text files, on your computer.</p>
<p>When a web server has sent a web page to a browser, the connection is shut down, and the server forgets everything about the user.</p>
<p>Cookies were invented to solve the problem “how to remember information about the user”:</p>
<ul>
<li>When a user visits a web page, his name can be stored in a cookie.</li>
<li>Next time the user visits the page, the cookie “remembers” his name.</li>
</ul>
<p>Cookies are saved in name-value pairs like:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username = John Doe</div></pre></td></tr></table></figure>
<p>JavaScript can create, read, and delete cookies with the <code>document.cookie</code> property.</p>
<p>With JavaScript, a cookie can be created like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.cookie = &quot;username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/&quot;;</div></pre></td></tr></table></figure>
<p>With JavaScript, cookies can be read like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var x = document.cookie;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> <code>document.cookie</code> will return all cookies in one string much like: <code>cookie1=value; cookie2=value; cookie3=value</code>;</p>
<p>With JavaScript, you can change a cookie the same way as you create it, The old cookie is overwritten.</p>
<p>Deleting a cookie is very simple. Just set the expires parameter to a passed date:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.cookie = &quot;username=; expires=Thu, 01 Jan 1970 00:00:00 UTC&quot;;</div></pre></td></tr></table></figure>
<p>In the example to follow, we will create a cookie that stores the name of a visitor.</p>
<p>The first time a visitor arrives to the web page, he will be asked to fill in his name. The name is then stored in a cookie.</p>
<p>The next time the visitor arrives at the same page, he will get a welcome message.</p>
<p>For the example we will create 3 JavaScript functions:</p>
<ul>
<li>A function to set a cookie value</li>
<li>A function to get a cookie value</li>
<li>A function to check a cookie value</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">function setCookie(cname, cvalue, exdays) &#123;</div><div class="line">    var d = new Date();</div><div class="line">    d.setTime(d.getTime() + (exdays*24*60*60*1000));</div><div class="line">    var expires = &quot;expires=&quot;+d.toUTCString();</div><div class="line">    document.cookie = cname + &quot;=&quot; + cvalue + &quot;;&quot; + expires + &quot;;path=/&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function getCookie(cname) &#123;</div><div class="line">    var name = cname + &quot;=&quot;;</div><div class="line">    var ca = document.cookie.split(&apos;;&apos;);</div><div class="line">    for(var i = 0; i &lt; ca.length; i++) &#123;</div><div class="line">        var c = ca[i];</div><div class="line">        while (c.charAt(0) == &apos; &apos;) &#123;</div><div class="line">            c = c.substring(1);</div><div class="line">        &#125;</div><div class="line">        if (c.indexOf(name) == 0) &#123;</div><div class="line">            return c.substring(name.length, c.length);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return &quot;&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function checkCookie() &#123;</div><div class="line">    var user = getCookie(&quot;username&quot;);</div><div class="line">    if (user != &quot;&quot;) &#123;</div><div class="line">        alert(&quot;Welcome again &quot; + user);</div><div class="line">    &#125; else &#123;</div><div class="line">        user = prompt(&quot;Please enter your name:&quot;, &quot;&quot;);</div><div class="line">        if (user != &quot;&quot; &amp;&amp; user != null) &#123;</div><div class="line">            setCookie(&quot;username&quot;, user, 365);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[缝缝补补又三年]]></title>
      <url>http://rrkaige.com/2016/10/17/%E7%BC%9D%E7%BC%9D%E8%A1%A5%E8%A1%A5%E5%8F%88%E4%B8%89%E5%B9%B4/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 新三年，旧三年，缝缝补补又三年。</p>
</blockquote>
<p> 咧开大嘴的被套，不忍直视，开工吧。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161017-myblog80.jpg-b" alt="Bedding Bag"></p>
<a id="more"></a>
<p> 拿起我的针，穿上我的线，小剪刀，放一旁。挽起衣袖，弯下腰，右起一针进，左抽一针出，来来又回回。</p>
<p> 大一入学发的一整套床上用品，读研直接搬了过来。无数次水洗曝晒，棉质变得柔软脆弱。不知何时裂开了小口，也没放在心上。总想凑合着用到毕业，到时候直接换新。结果，昨天发现边上又开道口子，晚上睡觉一扯，哗啦，整个一大窟窿。好吧，这下再不能无视，搞不好就得提前“退休”。</p>
<p> 一晚无事，今天备好针线，好好拾掇。缝补不是初次，也算经验十足。左右开工，一会大功告成。手艺不算精致，将将过得去眼。看着闭上的嘴巴，自得其乐。</p>
<p> 得，先凑合着用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[意乱]]></title>
      <url>http://rrkaige.com/2016/10/16/%E6%84%8F%E4%B9%B1/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 向晚意不适。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161016-myblog79.jpg" alt="Face the Unknown"></p>
<a id="more"></a>
<p> 一晚上心绪不宁。</p>
<p> 找工作一个半月，“收获”很大。</p>
<p> 学校的重要性毋庸置疑。虽然是双 211，但在这座大学扎堆公司不多的城市，依然不够看。宣讲会的数量，简历的初筛，似乎处处滞后。</p>
<p> 技能的掌握程度是关键。当初铁了心要做软件开发，钻研 Java、算法、数据库，看书，看视频。十几场笔试下来，依然不够格。没做过实际项目，没有实习经验，只是学了罢了。</p>
<p> 无尽的比较很伤心。身边的小伙伴，薪资高者有之，offer 多者有之。心高气傲，恨不尽得。</p>
<p> 心态摇摆。工作？读博？又进入死循环。软件？嵌入式？遇挫后的不淡定。后端？前端？销售？管理？真想一个个尝试。</p>
<p> 我想，我需要好好睡一觉。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript HTML DOM 学习笔记]]></title>
      <url>http://rrkaige.com/2016/10/15/JavaScript-HTML-DOM%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 学习 JavaScript HTML DOM，教程来自 <a href="http://www.w3schools.com/js/js_htmldom.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161015-myblog78-1.gif" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="DOM-Introduction"><a href="#DOM-Introduction" class="headerlink" title="DOM Introduction"></a>DOM Introduction</h3><p>The DOM (<strong>Document Object Model</strong>) is a W3C (World Wide Web Consortium) standard.</p>
<p>The DOM defines a standard for accessing documents:</p>
<p>“The W3C Document Object Model (DOM) is a platform and language-neutral interface that allows programs and scripts to dynamically access and update the content, structure, and style of a document.”</p>
<p>The W3C DOM standard is separated into 3 different parts:</p>
<ul>
<li><strong>Core DOM</strong> - standard model for all document types</li>
<li><strong>XML DOM</strong> - standard model for XML documents</li>
<li><strong>HTML DOM</strong> - standard model for HTML documents</li>
</ul>
<p>The HTML DOM is a standard <strong>object</strong> model and <strong>programming interface</strong> for HTML. It defines:</p>
<ul>
<li>The HTML elements as <strong>objects</strong></li>
<li>The <strong>properties</strong> of all HTML elements</li>
<li>The <strong>methods</strong> to access all HTML elements</li>
<li>The <strong>events</strong> for all HTML elements</li>
</ul>
<p>In other words: <strong>The HTML DOM is a standard for how to get, change, add, or delete HTML elements</strong>.</p>
<p>When a web page is loaded, the browser creates a DOM of the page.</p>
<p>The <strong>HTML DOM</strong> model is constructed as a tree of <strong>Objects</strong>:</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161015-myblog78-2.png" alt="HTML DOM"></p>
<p>With the object model, JavaScript gets all the power it needs to create dynamic HTML:</p>
<ul>
<li>JavaScript can change all the HTML elements in the page</li>
<li>JavaScript can change all the HTML attributes in the page</li>
<li>JavaScript can change all the CSS styles in the page</li>
<li>JavaScript can remove existing HTML elements and attributes</li>
<li>JavaScript can add new HTML elements and attributes</li>
<li>JavaScript can react to all existing HTML events in the page</li>
<li>JavaScript can create new HTML events in the page</li>
</ul>
<h3 id="DOM-Methods"><a href="#DOM-Methods" class="headerlink" title="DOM Methods"></a>DOM Methods</h3><p>The HTML DOM can be accessed with JavaScript (and with other programming languages).</p>
<p>In the DOM, all HTML elements are defined as objects.</p>
<p>The programming interface is the properties and methods of each object.</p>
<p>HTML DOM <strong>methods</strong> are <strong>actions</strong> you can perform (on HTML Elements).</p>
<p>HTML DOM <strong>properties</strong> are <strong>values</strong> (of HTML Elements) that you can set or change.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello World!&quot;;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>In the example above, <strong>getElementById</strong> is a method, while <strong>innerHTML</strong> is a property.</p>
<ul>
<li>The most common way to access an HTML element is to use the id of the element.</li>
<li>The easiest way to get the content of an element is by using the innerHTML property.</li>
</ul>
<h3 id="DOM-Document"><a href="#DOM-Document" class="headerlink" title="DOM Document"></a>DOM Document</h3><p>The HTML DOM <strong>document</strong> object is the owner of all other objects in your web page.</p>
<h3 id="DOM-Elements"><a href="#DOM-Elements" class="headerlink" title="DOM Elements"></a>DOM Elements</h3><ul>
<li>Finding HTML Element by <strong>Id</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var myElement = document.getElementById(&quot;intro&quot;);</div></pre></td></tr></table></figure>
<p>If the element is found, the method will return the element as an object (in myElement). If the element is not found, myElement will contain null.</p>
<ul>
<li>Finding HTML Elements by <strong>Tag Name</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var x = document.getElementsByTagName(&quot;p&quot;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = document.getElementById(&quot;main&quot;);</div><div class="line">var y = x.getElementsByTagName(&quot;p&quot;);</div></pre></td></tr></table></figure>
<ul>
<li>Finding HTML Elements by <strong>Class Name</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var x = document.getElementsByClassName(&quot;intro&quot;);</div></pre></td></tr></table></figure>
<ul>
<li>Finding HTML Elements by <strong>CSS Selectors</strong></li>
</ul>
<p>If you want to find all HTML elements that matches a specified CSS selector (id, class names, types, attributes, values of attributes, etc), use the <code>querySelectorAll()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var x = document.querySelectorAll(&quot;p.intro&quot;);</div></pre></td></tr></table></figure>
<ul>
<li>Finding HTML Elements by <strong>HTML Object Collections</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var x = document.forms[&quot;frm1&quot;];</div><div class="line">var text = &quot;&quot;;</div><div class="line">var i;</div><div class="line">for (i = 0; i &lt; x.length; i++) &#123;</div><div class="line">    text += x.elements[i].value + &quot;&lt;br&gt;&quot;;</div><div class="line">&#125;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = text;</div></pre></td></tr></table></figure>
<h3 id="DOM-Changing-HTML"><a href="#DOM-Changing-HTML" class="headerlink" title="DOM - Changing HTML"></a>DOM - Changing HTML</h3><p>The HTML DOM allows JavaScript to change the content of HTML elements.</p>
<p>To change the content of an HTML <strong>element</strong>, use this syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(id).innerHTML = new HTML;</div></pre></td></tr></table></figure>
<p>To change the value of an HTML <strong>attribute</strong>, use this syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(id).attribute = new value;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;img id=&quot;myImage&quot; src=&quot;smiley.gif&quot;&gt;</div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;myImage&quot;).src = &quot;landscape.jpg&quot;;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="DOM-Changing-CSS"><a href="#DOM-Changing-CSS" class="headerlink" title="DOM - Changing CSS"></a>DOM - Changing CSS</h3><p>The HTML DOM allows JavaScript to change the style of HTML elements.</p>
<p>To change the style of an HTML element, use this syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(id).style.property = new style;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;p2&quot;&gt;Hello World!&lt;/p&gt;</div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;p2&quot;).style.color = &quot;blue&quot;;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="DOM-Animation"><a href="#DOM-Animation" class="headerlink" title="DOM Animation"></a>DOM Animation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;</div><div class="line">&lt;button onclick=&quot;myMove()&quot;&gt;Click Me&lt;/button&gt;</div><div class="line">&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;div id =&quot;container&quot;&gt;</div><div class="line">&lt;div id =&quot;animate&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function myMove() &#123;</div><div class="line">  var elem = document.getElementById(&quot;animate&quot;);</div><div class="line">  var pos = 0;</div><div class="line">  var id = setInterval(frame, 5);</div><div class="line">  function frame() &#123;</div><div class="line">    if (pos == 350) &#123;</div><div class="line">      clearInterval(id);</div><div class="line">    &#125; else &#123;</div><div class="line">      pos++;</div><div class="line">      elem.style.top = pos + &apos;px&apos;;</div><div class="line">      elem.style.left = pos + &apos;px&apos;;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="DOM-Events"><a href="#DOM-Events" class="headerlink" title="DOM Events"></a>DOM Events</h3><p>A JavaScript can be executed when an event occurs, like when a user clicks on an HTML element.</p>
<ul>
<li>The onclick Events</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;h1 onclick=&quot;this.innerHTML=&apos;Ooops!&apos;&quot;&gt;Click on this text!&lt;/h1&gt;</div></pre></td></tr></table></figure>
<ul>
<li>The onload and onunload Events</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;body onload=&quot;checkCookies()&quot;&gt;</div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function checkCookies() &#123;</div><div class="line">    var text = &quot;&quot;;</div><div class="line">    if (navigator.cookieEnabled == true) &#123;</div><div class="line">        text = &quot;Cookies are enabled.&quot;;</div><div class="line">    &#125; else &#123;</div><div class="line">        text = &quot;Cookies are not enabled.&quot;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = text;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>The onchange Event</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;text&quot; id=&quot;fname&quot; onchange=&quot;myFunction()&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">    var x = document.getElementById(&quot;fname&quot;);</div><div class="line">    x.value = x.value.toUpperCase();</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>The onmouseover and onmouseout Events</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;div onmouseover=&quot;mOver(this)&quot; onmouseout=&quot;mOut(this)&quot;</div><div class="line">style=&quot;background-color:#D94A38;width:120px;height:20px;padding:40px;&quot;&gt;</div><div class="line">Mouse Over Me&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function mOver(obj) &#123;</div><div class="line">    obj.innerHTML = &quot;Thank You&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function mOut(obj) &#123;</div><div class="line">    obj.innerHTML = &quot;Mouse Over Me&quot;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>The onmousedown, onmouseup and onclick Events</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;div onmousedown=&quot;mDown(this)&quot; onmouseup=&quot;mUp(this)&quot;</div><div class="line">style=&quot;background-color:#D94A38;width:90px;height:20px;padding:40px;&quot;&gt;</div><div class="line">Click Me&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function mDown(obj) &#123;</div><div class="line">    obj.style.backgroundColor = &quot;#1ec5e5&quot;;</div><div class="line">    obj.innerHTML = &quot;Release Me&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function mUp(obj) &#123;</div><div class="line">    obj.style.backgroundColor=&quot;#D94A38&quot;;</div><div class="line">    obj.innerHTML=&quot;Thank You&quot;;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="DOM-EventListener"><a href="#DOM-EventListener" class="headerlink" title="DOM EventListener"></a>DOM EventListener</h3><p>The <code>addEventListener()</code> method attaches an event handler to an element without overwriting existing event handlers.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.addEventListener(event, function, useCapture);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter is the type of the event (like “click” or “mousedown”).</li>
<li>The second parameter is the function we want to call when the event occurs.</li>
<li>The third parameter is a boolean value specifying whether to use event <strong>bubbling</strong> or event <strong>capturing</strong>. This parameter is optional.</li>
</ul>
<p><strong>Note:</strong> you don’t use the “on” prefix for the event; use “click” instead of “onclick”.</p>
<p>Add an Event Handler to an Element</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.addEventListener(&quot;click&quot;, function()&#123; alert(&quot;Hello World!&quot;); &#125;);</div></pre></td></tr></table></figure>
<p>Add Many Event Handlers to the Same Element</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;button id=&quot;myBtn&quot;&gt;Try it&lt;/button&gt;</div><div class="line"></div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var x = document.getElementById(&quot;myBtn&quot;);</div><div class="line">x.addEventListener(&quot;mouseover&quot;, myFunction);</div><div class="line">x.addEventListener(&quot;click&quot;, mySecondFunction);</div><div class="line">x.addEventListener(&quot;mouseout&quot;, myThirdFunction);</div><div class="line"></div><div class="line">function myFunction() &#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML += &quot;Moused over!&lt;br&gt;&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function mySecondFunction() &#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML += &quot;Clicked!&lt;br&gt;&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function myThirdFunction() &#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML += &quot;Moused out!&lt;br&gt;&quot;;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Add an Event Handler to the Window Object</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">window.addEventListener(&quot;resize&quot;, function()&#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = Math.random();</div><div class="line">&#125;);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Passing Parameters</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;button id=&quot;myBtn&quot;&gt;Try it&lt;/button&gt;</div><div class="line"></div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var p1 = 5;</div><div class="line">var p2 = 7;</div><div class="line"></div><div class="line">document.getElementById(&quot;myBtn&quot;).addEventListener(&quot;click&quot;, function() &#123;</div><div class="line">    myFunction(p1, p2);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">function myFunction(a, b) &#123;</div><div class="line">    var result = a * b;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = result;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Event Bubbling or Event Capturing?</p>
<p>There are two ways of event propagation in the HTML DOM, bubbling and capturing.</p>
<p>Event propagation is a way of defining the element order when an event occurs. If you have a <code>&lt;p&gt;</code> element inside a <code>&lt;div&gt;</code> element, and the user clicks on the <code>&lt;p&gt;</code> element, which element’s “click” event should be handled first?</p>
<ul>
<li>In bubbling the inner most element’s event is handled first and then the outer: the <code>&lt;p&gt;</code> element’s click event is handled first, then the <code>&lt;div&gt;</code> element’s click event.</li>
<li>In capturing the outer most element’s event is handled first and then the inner: the <code>&lt;div&gt;</code> element’s click event will be handled first, then the <code>&lt;p&gt;</code> element’s click event.</li>
</ul>
<p>The default value is <strong>false</strong>, which will use the <strong>bubbling propagation</strong>, when the value is set to <strong>true</strong>, the event uses the <strong>capturing propagation</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;myDiv&quot;&gt;</div><div class="line">  &lt;p id=&quot;myP&quot;&gt;Click this paragraph, I am Bubbling.&lt;/p&gt;</div><div class="line">&lt;/div&gt;&lt;br&gt;</div><div class="line"></div><div class="line">&lt;div id=&quot;myDiv2&quot;&gt;</div><div class="line">  &lt;p id=&quot;myP2&quot;&gt;Click this paragraph, I am Capturing.&lt;/p&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;myP&quot;).addEventListener(&quot;click&quot;, function() &#123;</div><div class="line">    alert(&quot;You clicked the P element!&quot;);</div><div class="line">&#125;, false);</div><div class="line"></div><div class="line">document.getElementById(&quot;myDiv&quot;).addEventListener(&quot;click&quot;, function() &#123;</div><div class="line">    alert(&quot;You clicked the DIV element!&quot;);</div><div class="line">&#125;, false);</div><div class="line"></div><div class="line">document.getElementById(&quot;myP2&quot;).addEventListener(&quot;click&quot;, function() &#123;</div><div class="line">    alert(&quot;You clicked the P element!&quot;);</div><div class="line">&#125;, true);</div><div class="line"></div><div class="line">document.getElementById(&quot;myDiv2&quot;).addEventListener(&quot;click&quot;, function() &#123;</div><div class="line">    alert(&quot;You clicked the DIV element!&quot;);</div><div class="line">&#125;, true);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>The <code>removeEventListener()</code> method</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&quot;removeHandler()&quot; id=&quot;myBtn&quot;&gt;Try it&lt;/button&gt;</div><div class="line"></div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;myDIV&quot;).addEventListener(&quot;mousemove&quot;, myFunction);</div><div class="line"></div><div class="line">function myFunction() &#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = Math.random();</div><div class="line">&#125;</div><div class="line"></div><div class="line">function removeHandler() &#123;</div><div class="line">    document.getElementById(&quot;myDIV&quot;).removeEventListener(&quot;mousemove&quot;, myFunction);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="DOM-Navigation"><a href="#DOM-Navigation" class="headerlink" title="DOM Navigation"></a>DOM Navigation</h3><p>The nodes in the node tree have a hierarchical relationship to each other.</p>
<p>The terms parent, child, and sibling are used to describe the relationships.</p>
<ul>
<li>In a node tree, the top node is called the root (or root node)</li>
<li>Every node has exactly one parent, except the root (which has no parent)</li>
<li>A node can have a number of children</li>
<li>Siblings (brothers or sisters) are nodes with the same parent</li>
</ul>
<p>You can use the following node properties to navigate between nodes with JavaScript:</p>
<ul>
<li>parentNode</li>
<li>childNodes[nodenumber]</li>
<li>firstChild</li>
<li>lastChild</li>
<li>nextSibling</li>
<li>previousSibling</li>
</ul>
<p>A common error in DOM processing is to expect an element node to contain text.</p>
<p>In this example: <code>&lt;title&gt;DOM Tutorial&lt;/title&gt;</code>, the element node <code>&lt;title&gt;</code> does not contain text. It contains a <strong>text node</strong> with the value “DOM Tutorial”.</p>
<p>The value of the text node can be accessed by the node’s <strong>innerHTML</strong> property, or the <strong>nodeValue</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;h1 id=&quot;intro&quot;&gt;My First Page&lt;/h1&gt;</div><div class="line"></div><div class="line">&lt;p id=&quot;demo&quot;&gt;Hello!&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var myText = document.getElementById(&quot;intro&quot;).childNodes[0].nodeValue;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = myText;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var myText = document.getElementById(&quot;intro&quot;).firstChild.nodeValue;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = myText;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>There are two special properties that allow access to the full document:</p>
<ul>
<li><strong>document.body</strong> - The body of the document</li>
<li><strong>document.documentElement</strong> - The full document</li>
</ul>
<p>The nodeName property specifies the name of a node.</p>
<ul>
<li>nodeName is read-only</li>
<li>nodeName of an element node is the same as the tag name</li>
<li>nodeName of an attribute node is the attribute name</li>
<li>nodeName of a text node is always #text</li>
<li>nodeName of the document node is always #document</li>
</ul>
<p><strong>Note:</strong> nodeName always contains the uppercase tag name of an HTML element.</p>
<p>The nodeValue property specifies the value of a node.</p>
<ul>
<li>nodeValue for element nodes is undefined</li>
<li>nodeValue for text nodes is the text itself</li>
<li>nodeValue for attribute nodes is the attribute value</li>
</ul>
<p>The nodeType property returns the type of node. nodeType is read only.</p>
<table>
<thead>
<tr>
<th>Element type</th>
<th>NodeType</th>
</tr>
</thead>
<tbody>
<tr>
<td>Element</td>
<td>1</td>
</tr>
<tr>
<td>Attribute</td>
<td>2</td>
</tr>
<tr>
<td>Text</td>
<td>3</td>
</tr>
<tr>
<td>Comment</td>
<td>8</td>
</tr>
<tr>
<td>Document</td>
<td>9</td>
</tr>
</tbody>
</table>
<h3 id="DOM-Elements-Nodes"><a href="#DOM-Elements-Nodes" class="headerlink" title="DOM Elements (Nodes)"></a>DOM Elements (Nodes)</h3><ul>
<li>Creating New HTML Elements (Nodes)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;div1&quot;&gt;</div><div class="line">&lt;p id=&quot;p1&quot;&gt;This is a paragraph.&lt;/p&gt;</div><div class="line">&lt;p id=&quot;p2&quot;&gt;This is another paragraph.&lt;/p&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var para = document.createElement(&quot;p&quot;);</div><div class="line">var node = document.createTextNode(&quot;This is new.&quot;);</div><div class="line">para.appendChild(node);</div><div class="line"></div><div class="line">var element = document.getElementById(&quot;div1&quot;);</div><div class="line">element.appendChild(para);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Creating new HTML Elements - insertBefore()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var para = document.createElement(&quot;p&quot;);</div><div class="line">var node = document.createTextNode(&quot;This is new.&quot;);</div><div class="line">para.appendChild(node);</div><div class="line"></div><div class="line">var element = document.getElementById(&quot;div1&quot;);</div><div class="line">var child = document.getElementById(&quot;p1&quot;);</div><div class="line">element.insertBefore(para,child);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Removing Existing HTML Elements</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var parent = document.getElementById(&quot;div1&quot;);</div><div class="line">var child = document.getElementById(&quot;p1&quot;);</div><div class="line">parent.removeChild(child);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> It would be nice to be able to remove an element without referring to the parent. But sorry. The DOM needs to know both the element you want to remove, and its parent.</p>
<p>Here is a common workaround: Find the child you want to remove, and use its <strong>parentNode</strong> property to find the parent:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var child = document.getElementById(&quot;p1&quot;);</div><div class="line">child.parentNode.removeChild(child);</div></pre></td></tr></table></figure>
<ul>
<li>Replacing HTML Elements </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var para = document.createElement(&quot;p&quot;);</div><div class="line">var node = document.createTextNode(&quot;This is new.&quot;);</div><div class="line">para.appendChild(node);</div><div class="line"></div><div class="line">var parent = document.getElementById(&quot;div1&quot;);</div><div class="line">var child = document.getElementById(&quot;p1&quot;);</div><div class="line">parent.replaceChild(para,child);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="DOM-Node-List"><a href="#DOM-Node-List" class="headerlink" title="DOM Node List"></a>DOM Node List</h3><p>The <code>getElementsByTagName()</code> method returns a <strong>node list</strong>. A node list is an array-like collection of nodes.</p>
<p>The <strong>length</strong> property defines the number of nodes in a node list.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var	myNodelist = document.getElementsByTagName(&quot;p&quot;);</div><div class="line">var i;</div><div class="line">for (i = 0; i &lt;	myNodelist.length; i++) &#123;</div><div class="line">   	myNodelist[i].style.backgroundColor = &quot;red&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> A node list is not an array! A node list may look like an array, but it is not. You can loop through the node list and refer to its nodes like an array. However, you cannot use Array Methods, like <code>valueOf()</code> or <code>join()</code> on the node list.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[非死不可]]></title>
      <url>http://rrkaige.com/2016/10/14/%E9%9D%9E%E6%AD%BB%E4%B8%8D%E5%8F%AF/</url>
      <content type="html"><![CDATA[<p>Facebook，非死不可，醉。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161014-myblog77.png" alt="Facebook"></p>
<a id="more"></a>
<p> 翻墙蛮久，但一直没申请 Facebook 账号，觉着不会用到，也没时间和心思打理。Twitter 同样。毕竟有本土的微信和微博，朋友圈社交圈都在国内，并无必要。而且账号太多，也是麻烦事。</p>
<p> 今天心血来潮，想着整理下关注的英文网站，发现已经不少，多是技术类和设计类。索性把 Facebook 和 Twitter 也搞定，还有 Pinterest 和 Behance。这么多的帐号真心麻烦，可惜没有统一的入口。似乎也不可能，入口流量关乎利益之争，谁肯松手。</p>
<p> 在 Facebook 和 Twitter 的第一条动态。</p>
<p>Hello, world!</p>
<p> 下次更新，恐怕很久很久。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[娱乐至死]]></title>
      <url>http://rrkaige.com/2016/10/13/%E5%A8%B1%E4%B9%90%E8%87%B3%E6%AD%BB/</url>
      <content type="html"><![CDATA[<p> 生于无知，死于娱乐。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161013-myblog76.jpg" alt="Amusing Ourselves to Death"></p>
<a id="more"></a>
<p> 总局的成就有目共睹。</p>
<p> 记得之前限韩令一出，网上哗然。反对者多是韩剧迷脑残粉，赞成者不乏五毛党“爱国人士”。一时纷争四起，甚嚣尘上。唯有总局稳坐钓鱼台，又一次展示了庞大能量。</p>
<p> 韩剧韩综的盛行不乏总局推动。对欧美节目的抵制封锁，美名其曰血腥暴力影响未成年防止文化入侵和平演变，对韩流的引入泛滥娱乐至死却任其自然。不惮以最坏的恶意揣测，背后的利益链条恐怕不少。</p>
<p> 那些中毒已深的反对者，自我标榜的赞成者，都是总局指挥棒下最好的副产品。殊不知，前因后果都是总局一手炮制，而今左支右突尽在瓠中。</p>
<p> 讯息的枯竭带来大脑的僵化，僵化又朝僵死变去。一辈子从不思考只图安安稳稳嘻嘻哈哈，这就是和谐真谛之所在。</p>
<p> 岂不悲哉！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之七]]></title>
      <url>http://rrkaige.com/2016/10/12/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%83/</url>
      <content type="html"><![CDATA[<p> 继续学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161012-myblog75.png" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h3><p>Validation can be defined by many different methods, and deployed in many different ways.</p>
<ul>
<li><strong>Server side validation</strong> is performed by a web server, after input has been sent to the server.</li>
<li><strong>Client side validation</strong> is performed by a web browser, before input is sent to a web server.</li>
</ul>
<p>HTML5 introduced a new HTML validation concept called <strong>constraint validation</strong>. HTML constraint validation is based on:</p>
<ul>
<li>Constraint validation <strong>HTML Input Attributes</strong></li>
<li>Constraint validation <strong>CSS Pseudo Selectors</strong></li>
<li>Constraint validation <strong>DOM Properties and Methods</strong></li>
</ul>
<h3 id="Validation-API"><a href="#Validation-API" class="headerlink" title="Validation API"></a>Validation API</h3><p>Constraint Validation DOM Methods</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>checkValidity()</code></td>
<td>Returns true if an input element contains valid data.</td>
</tr>
<tr>
<td><code>setCustomValidity()</code></td>
<td>Sets the validationMessage property of an input element.</td>
</tr>
</tbody>
</table>
<p>Constraint Validation DOM Properties</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>validity</td>
<td>Contains boolean properties related to the validity of an input element.</td>
</tr>
<tr>
<td>validationMessage</td>
<td>Contains the message a browser will display when the validity is false.</td>
</tr>
<tr>
<td>willValidate</td>
<td>Indicates if an input element will be validated.</td>
</tr>
</tbody>
</table>
<p>Validity Properties</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>customError</td>
<td>Set to true, if a custom validity message is set.</td>
</tr>
<tr>
<td>patternMismatch</td>
<td>Set to true, if an element’s value does not match its pattern attribute.</td>
</tr>
<tr>
<td>rangeOverflow</td>
<td>Set to true, if an element’s value is greater than its max attribute.</td>
</tr>
<tr>
<td>rangeUnderflow</td>
<td>Set to true, if an element’s value is less than its min attribute.</td>
</tr>
<tr>
<td>stepMismatch</td>
<td>Set to true, if an element’s value is invalid per its step attribute.</td>
</tr>
<tr>
<td>tooLong</td>
<td>Set to true, if an element’s value exceeds its maxLength attribute.</td>
</tr>
<tr>
<td>typeMismatch</td>
<td>Set to true, if an element’s value is invalid per its type attribute.</td>
</tr>
<tr>
<td>valueMissing</td>
<td>Set to true, if an element (with a required attribute) has no value.</td>
</tr>
<tr>
<td>valid</td>
<td>Set to true, if an element’s value is valid.</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;input id=&quot;id1&quot; type=&quot;number&quot; max=&quot;100&quot;&gt;</div><div class="line">&lt;button onclick=&quot;myFunction()&quot;&gt;OK&lt;/button&gt;</div><div class="line"></div><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">    var txt = &quot;&quot;;</div><div class="line">    if (document.getElementById(&quot;id1&quot;).validity.rangeOverflow) &#123;</div><div class="line">       txt = &quot;Value too large&quot;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = txt;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h3><p>In JavaScript, objects are king. If you understand objects, you understand JavaScript.</p>
<p>In JavaScript, almost “everything” is an object.</p>
<ul>
<li>Booleans can be objects (or primitive data treated as objects)</li>
<li>Numbers can be objects (or primitive data treated as objects)</li>
<li>Strings can be objects (or primitive data treated as objects)</li>
<li>Dates are always objects</li>
<li>Maths are always objects</li>
<li>Regular expressions are always objects</li>
<li>Arrays are always objects</li>
<li>Functions are always objects</li>
<li>Objects are objects</li>
</ul>
<p>In JavaScript, all values, except primitive values, are objects.</p>
<p>Primitive values are: strings (“John Doe”), numbers (3.14), true, false, null, and undefined.</p>
<ul>
<li>Using an <strong>object literal</strong>, you both define and create an object in one statement. An object literal is a list of name:value pairs (like age:50) inside curly braces {}.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var person = &#123;</div><div class="line">    firstName:&quot;John&quot;,</div><div class="line">    lastName:&quot;Doe&quot;,</div><div class="line">    age:50,</div><div class="line">    eyeColor:&quot;blue&quot;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Using the JavaScript <strong>Keyword new</strong>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var person = new Object();</div><div class="line">person.firstName = &quot;John&quot;;</div><div class="line">person.lastName = &quot;Doe&quot;;</div><div class="line">person.age = 50;</div><div class="line">person.eyeColor = &quot;blue&quot;;</div></pre></td></tr></table></figure>
<p><strong>Note：</strong> The two examples above do exactly the same. There is no need to use <code>new Object()</code>. For simplicity, readability and execution speed, use the first one (the object literal method).</p>
<ul>
<li>Using an <strong>Object Constructor</strong>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function person(first, last, age, eye) &#123;</div><div class="line">    this.firstName = first;</div><div class="line">    this.lastName = last;</div><div class="line">    this.age = age;</div><div class="line">    this.eyeColor = eye;</div><div class="line">&#125;</div><div class="line">var myFather = new person(&quot;John&quot;, &quot;Doe&quot;, 50, &quot;blue&quot;);</div><div class="line">var myMother = new person(&quot;Sally&quot;, &quot;Rally&quot;, 48, &quot;green&quot;);</div></pre></td></tr></table></figure>
<p>In JavaScript, the thing called <strong>this</strong>, is the object that “owns” the JavaScript code.</p>
<p>The value of <strong>this</strong>, when used in a function, is the object that “owns” the function.<br>The value of <strong>this</strong>, when used in an object, is the object itself.<br>The <strong>this</strong> keyword in an object constructor does not have a value. It is only a substitute for the new object.<br>The value of <strong>this</strong> will become the new object when the constructor is used to create an object.</p>
<p><strong>Note:</strong> <strong>this</strong> is not a variable. It is a keyword. You cannot change the value of <strong>this</strong>.</p>
<ul>
<li>In ECMAScript 5, an object can also be created with the function <code>Object.create()</code>.</li>
</ul>
<p>JavaScript has <strong>built-in constructors</strong> for native objects.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var x1 = new Object();    // A new Object object</div><div class="line">var x2 = new String();    // A new String object</div><div class="line">var x3 = new Number();    // A new Number object</div><div class="line">var x4 = new Boolean();   // A new Boolean object</div><div class="line">var x5 = new Array();     // A new Array object</div><div class="line">var x6 = new RegExp();    // A new RegExp object</div><div class="line">var x7 = new Function();  // A new Function object</div><div class="line">var x8 = new Date();      // A new Date object</div></pre></td></tr></table></figure>
<p>There is no reason to create complex objects. Primitive values execute much faster.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var x1 = &#123;&#125;;            // new object</div><div class="line">var x2 = &quot;&quot;;            // new primitive string</div><div class="line">var x3 = 0;             // new primitive number</div><div class="line">var x4 = false;         // new primitive boolean</div><div class="line">var x5 = [];            // new array	object</div><div class="line">var x6 = /()/           // new regexp object</div><div class="line">var x7 = function()&#123;&#125;;  // new function object</div></pre></td></tr></table></figure>
<p>Objects are <strong>mutable</strong>: They are addressed by <strong>reference</strong>, not by value.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var x = person;  // This will not create a copy of person.</div></pre></td></tr></table></figure>
<p>The object x is <strong>not a copy of</strong> person. It <strong>is</strong> person. Both x and person is the same object. Any changes to x will also change person, because x and person are the same object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var person = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;&#125;</div><div class="line"></div><div class="line">var x = person;</div><div class="line">x.age = 10;           // This will change both x.age and person.age</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> JavaScript variables are not mutable. Only JavaScript objects.</p>
<h3 id="Object-Properties"><a href="#Object-Properties" class="headerlink" title="Object Properties"></a>Object Properties</h3><p>Properties are the most important part of any JavaScript object.</p>
<p>Properties are the values associated with a JavaScript object. A JavaScript object is a collection of unordered properties. Properties can usually be changed, added, and deleted, but some are read only.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">objectName.property          // person.age</div><div class="line">objectName[&quot;property&quot;]       // person[&quot;age&quot;]</div><div class="line">objectName[expression]       // x = &quot;age&quot;; person[x]</div></pre></td></tr></table></figure>
<p>The JavaScript <strong>for…in</strong> statement loops through the properties of an object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for (variable in object) &#123;</div><div class="line">    code to be executed</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The block of code inside of the for…in loop will be executed <strong>once</strong> for each property.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var person = &#123;fname:&quot;John&quot;, lname:&quot;Doe&quot;, age:25&#125;; </div><div class="line">for (x in person) &#123;</div><div class="line">    txt += person[x];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>You can add new properties to an existing object by simply giving it a value.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">person.nationality = &quot;English&quot;;</div></pre></td></tr></table></figure>
<p>The <strong>delete</strong> keyword deletes a property from an object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var person = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;&#125;;</div><div class="line">delete person.age;   // or delete person[&quot;age&quot;];</div></pre></td></tr></table></figure>
<ul>
<li>The delete keyword deletes both the value of the property and the property itself.</li>
<li>After deletion, the property cannot be used before it is added back again.</li>
<li>The delete operator is designed to be used on object properties. It has no effect on variables or functions.</li>
<li>The delete operator should not be used on predefined JavaScript object properties. It can crash your application.</li>
</ul>
<h3 id="Object-Methods"><a href="#Object-Methods" class="headerlink" title="Object Methods"></a>Object Methods</h3><p>A JavaScript method is a property containing a <strong>function definition</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">methodName : function() &#123; code lines &#125;</div><div class="line">objectName.methodName()</div></pre></td></tr></table></figure>
<p>This example accesses the fullName() method of a person object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name = person.fullName();</div></pre></td></tr></table></figure>
<p>If you access the fullName <strong>property</strong>, without (), it will return the <strong>function definition</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name = person.fullName;</div></pre></td></tr></table></figure>
<h3 id="Object-Prototypes"><a href="#Object-Prototypes" class="headerlink" title="Object Prototypes"></a>Object Prototypes</h3><p>Every JavaScript object has a prototype. The prototype is also an object. All JavaScript objects inherit the properties and methods from their prototype.</p>
<ul>
<li>Objects created using an object literal, or with <code>new Object()</code>, inherit from a prototype called Object.prototype.</li>
<li>Objects created with <code>new Date()</code> inherit the Date.prototype.</li>
<li>The Object.prototype is on the top of the prototype chain.</li>
<li>All JavaScript objects (Date, Array, RegExp, Function, ….) inherit from the Object.prototype.</li>
</ul>
<p>The standard way to create an object prototype is to use an <strong>object constructor function</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function Person(first, last, age, eyecolor) &#123;</div><div class="line">    this.firstName = first;</div><div class="line">    this.lastName = last;</div><div class="line">    this.age = age;</div><div class="line">    this.eyeColor = eyecolor;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>The constructor function is the prototype for Person objects.</li>
<li>It is considered good practice to name constructor function with an upper-case first letter.</li>
</ul>
<p>To add a new <strong>property</strong> to a prototype, you must add it to the constructor function.</p>
<p>Your constructor function can also define <strong>methods</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function Person(first, last, age, eyecolor) &#123;</div><div class="line">    this.firstName = first;</div><div class="line">    this.lastName = last;</div><div class="line">    this.age = age;</div><div class="line">    this.eyeColor = eyecolor;</div><div class="line">    this.nationality = &quot;English&quot;;</div><div class="line">    this.name = function() &#123;return this.firstName + &quot; &quot; + this.lastName;&#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The JavaScript prototype property allows you to add new <strong>properties</strong> to an existing prototype.</p>
<p>The JavaScript prototype property also allows you to add new <strong>methods</strong> to an existing prototype.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">function Person(first, last, age, eyecolor) &#123;</div><div class="line">    this.firstName = first;</div><div class="line">    this.lastName = last;</div><div class="line">    this.age = age;</div><div class="line">    this.eyeColor = eyecolor;</div><div class="line">&#125;</div><div class="line">Person.prototype.nationality = &quot;English&quot;;</div><div class="line">Person.prototype.name = function() &#123;</div><div class="line">    return this.firstName + &quot; &quot; + this.lastName;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="Function-Definitions"><a href="#Function-Definitions" class="headerlink" title="Function Definitions"></a>Function Definitions</h3><p>JavaScript functions are <strong>defined</strong> with the <strong>function</strong> keyword. You can use a function <strong>declaration</strong> or a function <strong>expression</strong>.</p>
<p>Earlier in this tutorial, you learned that functions are <strong>declared</strong> with the following syntax. Declared functions are not executed immediately. They are “saved for later use”, and will be executed later, when they are invoked (called upon).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function functionName(parameters) &#123;</div><div class="line">  code to be executed</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Semicolons are used to separate executable JavaScript statements. Since a function declaration is not an executable statement, it is not common to end it with a semicolon.</p>
<p>A JavaScript function can also be defined using an <strong>expression</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = function (a, b) &#123;return a * b&#125;;</div><div class="line">var z = x(4, 3);</div></pre></td></tr></table></figure>
<p>The function above is actually an <strong>anonymous</strong> function (a function without a name). Functions stored in variables do not need function names. They are always invoked (called) using the variable name.</p>
<p><strong>Note:</strong> The function above ends with a semicolon because it is a part of an executable statement.</p>
<p>Functions can also be defined with a built-in JavaScript function constructor called <code>Function()</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var myFunction = new Function(&quot;a&quot;, &quot;b&quot;, &quot;return a * b&quot;);</div><div class="line">var x = myFunction(4, 3);</div></pre></td></tr></table></figure>
<p>Function expressions can be made “<strong>self-invoking</strong>“. A self-invoking expression is invoked (started) automatically, without being called. Function expressions will execute automatically if the expression is followed by ().</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(function () &#123;</div><div class="line">    var x = &quot;Hello!!&quot;;      // I will invoke myself</div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
<p>The function above is actually an <strong>anonymous self-invoking function</strong> (function without name).</p>
<h3 id="Function-Parameters"><a href="#Function-Parameters" class="headerlink" title="Function Parameters"></a>Function Parameters</h3><p>Earlier in this tutorial, you learned that functions can have <strong>parameters</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">functionName(parameter1, parameter2, parameter3) &#123;</div><div class="line">    code to be executed</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Function <strong>parameters</strong> are the <strong>names</strong> listed in the function definition.</li>
<li>Function <strong>arguments</strong> are the real <strong>values</strong> passed to (and received by) the function.</li>
</ul>
<p>JavaScript function definitions do not specify data types for parameters. JavaScript functions do not perform type checking on the passed arguments. JavaScript functions do not check the number of arguments received.</p>
<p>If a function is called with <strong>missing arguments</strong> (less than declared), the missing values are set to: <strong>undefined</strong>.</p>
<p>If a function is called with <strong>too many arguments</strong> (more than declared), these arguments can be reached using <strong>the arguments object</strong>.</p>
<p>The argument object contains an array of the arguments used when the function was called (invoked).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">x = findMax(1, 123, 500, 115, 44, 88);</div><div class="line">function findMax() &#123;</div><div class="line">    var i;</div><div class="line">    var max = -Infinity;</div><div class="line">    for (i = 0; i &lt; arguments.length; i++) &#123;</div><div class="line">        if (arguments[i] &gt; max) &#123;</div><div class="line">            max = arguments[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return max;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>JavaScript arguments are passed by <strong>value</strong>: The function only gets to know the values, not the argument’s locations. If a function changes an argument’s value, it does not change the parameter’s original value.</p>
<p><strong>Changes to arguments are not visible (reflected) outside the function.</strong></p>
<p>Objects will behave like they are passed by <strong>reference</strong>: If a function changes an object property, it changes the original value.</p>
<p><strong>Changes to object properties are visible (reflected) outside the function.</strong></p>
<h3 id="Function-Invocation"><a href="#Function-Invocation" class="headerlink" title="Function Invocation"></a>Function Invocation</h3><h4 id="Invoking-a-Function-as-a-Function"><a href="#Invoking-a-Function-as-a-Function" class="headerlink" title="Invoking a Function as a Function"></a>Invoking a Function as a Function</h4><p>In HTML the default global object is the HTML page itself, so the function above “belongs” to the HTML page. In a browser the page object is the browser window. The function above automatically becomes a <strong>window function</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function myFunction(a, b) &#123;</div><div class="line">    return a * b;</div><div class="line">&#125;</div><div class="line">myFunction(10, 2);           // myFunction(10, 2) will return 20</div><div class="line"></div><div class="line">window.myFunction(10, 2);    // window.myFunction(10, 2) will also return 20</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> This is a common way to invoke a JavaScript function, but not a very good practice. Global variables, methods, or functions can easily create name conflicts and bugs in the global object.</p>
<h4 id="Invoking-a-Function-as-a-Method"><a href="#Invoking-a-Function-as-a-Method" class="headerlink" title="Invoking a Function as a Method"></a>Invoking a Function as a Method</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var myObject = &#123;</div><div class="line">    firstName:&quot;John&quot;,</div><div class="line">    lastName: &quot;Doe&quot;,</div><div class="line">    fullName: function () &#123;</div><div class="line">        return this.firstName + &quot; &quot; + this.lastName;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">myObject.fullName();         // Will return &quot;John Doe&quot;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Invoking a function as an object method, causes the value of <strong>this</strong> to be the object itself.</p>
<h4 id="Invoking-a-Function-with-a-Function-Constructor"><a href="#Invoking-a-Function-with-a-Function-Constructor" class="headerlink" title="Invoking a Function with a Function Constructor"></a>Invoking a Function with a Function Constructor</h4><p>If a function invocation is preceded with the new keyword, it is a constructor invocation.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// This is a function constructor:</div><div class="line">function myFunction(arg1, arg2) &#123;</div><div class="line">    this.firstName = arg1;</div><div class="line">    this.lastName  = arg2;</div><div class="line">&#125;</div><div class="line">// This	creates a new object</div><div class="line">var x = new myFunction(&quot;John&quot;,&quot;Doe&quot;);</div><div class="line">x.firstName;                             // Will return &quot;John&quot;</div></pre></td></tr></table></figure>
<h4 id="Invoking-a-Function-with-a-Function-Method"><a href="#Invoking-a-Function-with-a-Function-Method" class="headerlink" title="Invoking a Function with a Function Method"></a>Invoking a Function with a Function Method</h4><p>In JavaScript, functions are objects. JavaScript functions have properties and methods.</p>
<p><code>call()</code> and <code>apply()</code> are predefined JavaScript function methods. Both methods can be used to invoke a function, and both methods must have the owner object as first parameter. The only difference is that <code>call()</code> takes the function arguments <strong>separately</strong>, and <code>apply()</code> takes the function arguments <strong>in an array</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function myFunction(a, b) &#123;</div><div class="line">    return a * b;</div><div class="line">&#125;</div><div class="line">myObject1 = myFunction.call(myObject, 10, 2);     // Will return 20</div><div class="line"></div><div class="line">myArray = [10, 2];</div><div class="line">myObject2 = myFunction.apply(myObject, myArray);  // Will also return 20</div></pre></td></tr></table></figure>
<h3 id="Function-Closures"><a href="#Function-Closures" class="headerlink" title="Function Closures"></a>Function Closures</h3><p>Global variables can be used (and changed) by all scripts in the page (and in the window). A local variable can only be used inside the function where it is defined. It is hidden from other functions and other scripting code.</p>
<p><strong>Note:</strong> Variables created <strong>without</strong> the keyword <strong>var</strong>, are always global, even if they are created inside a function.</p>
<ul>
<li>Global variables live as long as your application (your window / your web page) lives.</li>
<li>Local variables have short lives. They are created when the function is invoked, and deleted when the function is finished.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var add = (function () &#123;</div><div class="line">    var counter = 0;</div><div class="line">    return function () &#123;return counter += 1;&#125;</div><div class="line">&#125;)();</div><div class="line"></div><div class="line">function myFunction()&#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = add();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The variable <strong>add</strong> is assigned the return value of a self-invoking function.</li>
<li>The self-invoking function only runs once. It sets the counter to zero (0), and returns a function expression.</li>
<li>This way add becomes a function. The “wonderful” part is that it can access the counter in the parent scope.</li>
<li>This is called a JavaScript <strong>closure</strong>. It makes it possible for a function to have “<strong>private</strong>“ variables.</li>
<li>The counter is protected by the scope of the anonymous function, and can only be changed using the add function.</li>
</ul>
<p><strong>Note:</strong> A closure is a function having access to the parent scope, even after the parent function has closed.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之六]]></title>
      <url>http://rrkaige.com/2016/10/11/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%85%AD/</url>
      <content type="html"><![CDATA[<p> 继续学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161011-myblog74.png" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="Errors-Throw-and-Try-to-Catch"><a href="#Errors-Throw-and-Try-to-Catch" class="headerlink" title="Errors - Throw and Try to Catch"></a>Errors - Throw and Try to Catch</h3><p>The JavaScript statements <strong>try</strong> and <strong>catch</strong> come in pairs。</p>
<ul>
<li>The <strong>try</strong> statement allows you to define a block of code to be tested for errors while it is being executed.</li>
<li>The <strong>catch</strong> statement allows you to define a block of code to be executed, if an error occurs in the try block.</li>
<li>The <strong>throw</strong> statement allows you to create a <strong>custom error</strong>. Technically you can <strong>raise (throw) an exception</strong>.</li>
<li>The <strong>finally</strong> statement lets you execute code, after try and catch, regardless of the result</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">try &#123;</div><div class="line">    Block of code to try</div><div class="line">&#125;</div><div class="line">catch(err) &#123;</div><div class="line">    Block of code to handle errors</div><div class="line">&#125; </div><div class="line">finally &#123;</div><div class="line">    Block of code to be executed regardless of the try / catch result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">function myFunction() &#123;</div><div class="line">    var message, x;</div><div class="line">    message = document.getElementById(&quot;message&quot;);</div><div class="line">    message.innerHTML = &quot;&quot;;</div><div class="line">    x = document.getElementById(&quot;demo&quot;).value;</div><div class="line">    try &#123; </div><div class="line">        if(x == &quot;&quot;) throw &quot;is empty&quot;;</div><div class="line">        if(isNaN(x)) throw &quot;is not a number&quot;;</div><div class="line">        x = Number(x);</div><div class="line">        if(x &gt; 10) throw &quot;is too high&quot;;</div><div class="line">        if(x &lt; 5) throw &quot;is too low&quot;;</div><div class="line">    &#125;</div><div class="line">    catch(err) &#123;</div><div class="line">        message.innerHTML = &quot;Error: &quot; + err + &quot;.&quot;;</div><div class="line">    &#125;</div><div class="line">    finally &#123;</div><div class="line">        document.getElementById(&quot;demo&quot;).value = &quot;&quot;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h3><p>Searching for errors in programming code is called code debugging.</p>
<p>Normally, otherwise follow the steps at the bottom of this page, you activate debugging in your browser with the <code>F12</code> key, and select “Console” in the debugger menu.</p>
<p>If your browser supports debugging, you can use <code>console.log()</code> to display JavaScript values in the debugger window.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">a = 5;</div><div class="line">b = 6;</div><div class="line">c = a + b;</div><div class="line">console.log(c);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>The <strong>debugger</strong> keyword stops the execution of JavaScript, and calls (if available) the debugging function. This has the same function as setting a breakpoint in the debugger. If no debugging is available, the debugger statement has no effect.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = 15 * 5;</div><div class="line">debugger;</div><div class="line">document.getElementbyId(&quot;demo&quot;).innerHTML = x;</div></pre></td></tr></table></figure>
<h3 id="Hoisting"><a href="#Hoisting" class="headerlink" title="Hoisting"></a>Hoisting</h3><p>In JavaScript, a variable can be declared after it has been used. In other words, a variable can be used before it has been declared.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">x = 5; // Assign 5 to x</div><div class="line">elem = document.getElementById(&quot;demo&quot;); // Find an element </div><div class="line">elem.innerHTML = x;                     // Display x in the element</div><div class="line">var x; // Declare x</div></pre></td></tr></table></figure>
<p>JavaScript only hoists <strong>declarations</strong>, not <strong>initializations</strong>.</p>
<p><strong>Note:</strong> JavaScript in strict mode does not allow variables to be used if they are not declared.</p>
<h3 id="Use-Strict"><a href="#Use-Strict" class="headerlink" title="Use Strict"></a>Use Strict</h3><p>The “<strong>use strict</strong>“ directive is new in JavaScript 1.8.5 (ECMAScript version 5). It is not a statement, but a literal expression, ignored by earlier versions of JavaScript. The purpose of “use strict” is to indicate that the code should be executed in “strict mode”.</p>
<p>Strict mode is declared by adding <code>&quot;use strict&quot;;</code> to the beginning of a script or a function. Declared at the beginning of a script, it has global scope (all code in the script will execute in strict mode).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;use strict&quot;;</div><div class="line">x = 3.14;       // This will cause an error because x is not declared</div></pre></td></tr></table></figure>
<p>Future reserved keywords are not allowed in strict mode. These are:</p>
<ul>
<li>implements</li>
<li>interface</li>
<li>let</li>
<li>package</li>
<li>private</li>
<li>protected</li>
<li>public</li>
<li>static</li>
<li>yield</li>
</ul>
<h3 id="Style-Guide-and-Coding-Conventions"><a href="#Style-Guide-and-Coding-Conventions" class="headerlink" title="Style Guide and Coding Conventions"></a>Style Guide and Coding Conventions</h3><p>Coding conventions are <strong>style guidelines for programming</strong>. They typically cover:</p>
<ul>
<li>Naming and declaration rules for variables and functions.</li>
<li>Rules for the use of white space, indentation, and comments.</li>
<li>Programming practices and principles</li>
</ul>
<p>At W3schools we use <strong>camelCase</strong> for identifier names (variables and functions). All names start with a <strong>letter</strong>.</p>
<p>Always put spaces around operators <code>(= + - * /)</code>, and after commas.</p>
<p>Always use <strong>4 spaces</strong> for indentation of code blocks.</p>
<p>General rules for simple statements: Always end a simple statement with a semicolon.</p>
<p>General rules for complex (compound) statements:</p>
<ul>
<li>Put the opening bracket at the end of the first line.</li>
<li>Use one space before the opening bracket.</li>
<li>Put the closing bracket on a new line, without leading spaces.</li>
<li>Do not end a complex statement with a semicolon.</li>
</ul>
<p>General rules for object definitions:</p>
<ul>
<li>Place the opening bracket on the same line as the object name.</li>
<li>Use colon plus one space between each property and its value.</li>
<li>Use quotes around string values, not around numeric values.</li>
<li>Do not add a comma after the last property-value pair.</li>
<li>Place the closing bracket on a new line, without leading spaces.</li>
<li>Always end an object definition with a semicolon.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var person = &#123;</div><div class="line">    firstName: &quot;John&quot;,</div><div class="line">    lastName: &quot;Doe&quot;,</div><div class="line">    age: 50,</div><div class="line">    eyeColor: &quot;blue&quot;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Short objects can be written compressed, on one line, using spaces only between properties.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var person = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;&#125;;</div></pre></td></tr></table></figure>
<p>For readability, avoid lines longer than <strong>80 characters</strong>. If a JavaScript statement does not fit on one line, the best place to break it, is after an operator or a comma.</p>
<p>Use simple syntax for loading external scripts (the type attribute is not necessary).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;myscript.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>JavaScript files should have a <code>.js</code> extension.</p>
<h3 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h3><ul>
<li>Avoid Global Variables</li>
<li>Always Declare Local Variables</li>
<li>Declarations on Top</li>
<li>Initialize Variables</li>
<li>Never Declare Number, String, or Boolean Objects</li>
<li>Don’t Use new Object()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var x1 = &#123;&#125;;           // new object</div><div class="line">var x2 = &quot;&quot;;           // new primitive string</div><div class="line">var x3 = 0;            // new primitive number</div><div class="line">var x4 = false;        // new primitive boolean</div><div class="line">var x5 = [];           // new array object</div><div class="line">var	x6 = /()/;         // new regexp object</div><div class="line">var x7 = function()&#123;&#125;; // new function object</div></pre></td></tr></table></figure>
<ul>
<li>Beware of Automatic Type Conversions</li>
<li>Use <code>===</code> Comparison</li>
</ul>
<h3 id="Common-Mistakes"><a href="#Common-Mistakes" class="headerlink" title="Common Mistakes"></a>Common Mistakes</h3><ul>
<li>Accidentally Using the Assignment Operator</li>
<li>Expecting Loose Comparison</li>
<li>Confusing Addition &amp; Concatenation</li>
<li>Misunderstanding Floats</li>
<li>Breaking a JavaScript String</li>
<li>Misplacing Semicolon</li>
<li>Breaking a Return Statement</li>
<li>Accessing Arrays with Named Indexes</li>
<li>Ending an Array Definition with a Comma</li>
<li>Ending an Object Definition with a Comma</li>
<li>Expecting Block Level Scope</li>
<li>Undefined is Not Null</li>
</ul>
<p>With JavaScript, <strong>null</strong> is for objects, <strong>undefined</strong> is for variables, properties, and methods. To be null, an object has to be defined, otherwise it will be undefined.</p>
<p>Because of this, you must test <code>typeof()</code> first.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (typeof myObj !== &quot;undefined&quot; &amp;&amp; myObj !== null)</div></pre></td></tr></table></figure>
<h3 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h3><ul>
<li>Reduce Activity in Loops</li>
</ul>
<p>Each statement in a loop, including the for statement, is executed for each iteration of the loop. Search for statements or assignments that can be placed outside the loop.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var i;</div><div class="line">var l = arr.length;</div><div class="line">for (i = 0; i &lt; l; i++) &#123;</div></pre></td></tr></table></figure>
<ul>
<li>Reduce DOM Access</li>
</ul>
<p>Accessing the HTML DOM is very slow, compared to other JavaScript statements. If you expect to access a DOM element several times, access it once, and use it as a local variable.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var obj;</div><div class="line">obj = document.getElementById(&quot;demo&quot;);</div><div class="line">obj.innerHTML = &quot;Hello&quot;;</div></pre></td></tr></table></figure>
<ul>
<li>Reduce DOM Size</li>
</ul>
<p>Keep the number of elements in the HTML DOM small. This will always improve page loading, and speed up rendering (page display), especially on smaller devices.</p>
<ul>
<li>Avoid Unnecessary Variables</li>
<li>Delay JavaScript Loading</li>
</ul>
<p>Putting your scripts at the bottom of the page body, lets the browser load the page first.</p>
<p>While a script is downloading, the browser will not start any other downloads. In addition all parsing and rendering activity might be blocked.</p>
<p><strong>Note:</strong> The HTTP specification defines that browsers should not download more than two components in parallel.</p>
<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>JSON is a format for storing and transporting data. JSON is often used when data is sent from a server to a web page.</p>
<ul>
<li>JSON stands for JavaScript Object Notation</li>
<li>JSON is lightweight data interchange format</li>
<li>JSON is language independent</li>
<li>JSON is “self-describing” and easy to understand</li>
</ul>
<p>The JSON syntax is derived from JavaScript object notation syntax, but the JSON format is text only. Code for reading and generating JSON data can be written in any programming language.</p>
<p>JSON Syntax Rules</p>
<ul>
<li>Data is in name/value pairs</li>
<li>Data is separated by commas</li>
<li>Curly braces hold objects</li>
<li>Square brackets hold arrays</li>
</ul>
<p>JSON data is written as name/value pairs, just like JavaScript object properties. A name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;firstName&quot;:&quot;John&quot;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> JSON names require double quotes. JavaScript names do not.</p>
<p>JSON objects are written inside curly braces. Just like in JavaScript, objects can contain multiple name/value pairs.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;</div></pre></td></tr></table></figure>
<p>JSON arrays are written inside square brackets. Just like in JavaScript, an array can contain objects.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;employees&quot;:[</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;, &quot;lastName&quot;:&quot;Jones&quot;&#125;</div><div class="line">]</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之五]]></title>
      <url>http://rrkaige.com/2016/10/10/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%94/</url>
      <content type="html"><![CDATA[<p> 继续学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161010-myblog73.jpg" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="Booleans"><a href="#Booleans" class="headerlink" title="Booleans"></a>Booleans</h3><p>A JavaScript Boolean represents one of two values: <strong>true</strong> or <strong>false</strong>.</p>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>==</code></td>
<td>equal to</td>
<td><code>if (day == &quot;Monday&quot;)</code></td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td>greater than</td>
<td><code>if (salary &gt; 9000)</code></td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td>less than</td>
<td><code>if (age &lt; 18)</code></td>
</tr>
</tbody>
</table>
<ul>
<li>Everything With a “Real” Value is True</li>
<li>Everything Without a “Real” is False</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var x = 0;    //The Boolean value of 0 (zero) is false</div><div class="line">var x = -0;    //The Boolean value of -0 (minus zero) is false</div><div class="line">var x = &quot;&quot;;    //The Boolean value of &quot;&quot; (empty string) is false</div><div class="line">var x;    //The Boolean value of undefined is false</div><div class="line">var x = null;    //The Boolean value of null is false</div><div class="line">var x = false;    //The Boolean value of false is (you guessed it) false</div><div class="line">var x = 10 / &quot;H&quot;;    //The Boolean value of NaN is false</div></pre></td></tr></table></figure>
<h3 id="Comparison-and-Logical-Operators"><a href="#Comparison-and-Logical-Operators" class="headerlink" title="Comparison and Logical Operators"></a>Comparison and Logical Operators</h3><p>Comparison operators are used in logical statements to determine equality or difference between variables or values.</p>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>==</code></td>
<td>equal to</td>
</tr>
<tr>
<td><code>===</code></td>
<td>equal value and equal type</td>
</tr>
<tr>
<td><code>!=</code></td>
<td>not equal</td>
</tr>
<tr>
<td><code>!==</code></td>
<td>not equal value or not equal type</td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td>greater than</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td>less than</td>
</tr>
<tr>
<td><code>&gt;=</code></td>
<td>greater than or equal to</td>
</tr>
<tr>
<td><code>&lt;=</code></td>
<td>less than or equal to</td>
</tr>
</tbody>
</table>
<p>Logical operators are used to determine the logic between variables or values.</p>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&amp;&amp;</code></td>
<td>and</td>
</tr>
<tr>
<td>&#124;&#124;</td>
<td>or</td>
</tr>
<tr>
<td><code>!</code></td>
<td>not</td>
</tr>
</tbody>
</table>
<p>JavaScript also contains a conditional operator that assigns a value to a variable based on some condition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variablename = (condition) ? value1:value2</div></pre></td></tr></table></figure>
<p>Comparing data of different types may give unexpected results.</p>
<ul>
<li>When comparing a string with a number, JavaScript will convert the string to a number when doing the comparison. An empty string converts to 0. A non-numeric string converts to NaN which is always false.</li>
<li>When comparing two strings, “2” will be greater than “12”, because (alphabetically) 1 is less than 2.</li>
</ul>
<p>Bit operators work on 32-bit numbers. Any numeric operand in the operation is converted into a 32-bit number. The result is converted back to a JavaScript number.</p>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
<th>Example</th>
<th>Same as</th>
<th>Result</th>
<th>Decimal</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&amp;</code></td>
<td>AND</td>
<td><code>x = 5 &amp; 1</code></td>
<td><code>0101 &amp; 0001</code></td>
<td>0001</td>
<td>1</td>
</tr>
<tr>
<td>&#124;</td>
<td>OR</td>
<td>x = 5 &#124; 1</td>
<td>0101 &#124; 0001</td>
<td>0101</td>
<td>5</td>
</tr>
<tr>
<td><code>~</code></td>
<td>NOT</td>
<td><code>x = ~ 5</code></td>
<td><code>~0101</code></td>
<td>1010</td>
<td>10</td>
</tr>
<tr>
<td><code>^</code></td>
<td>XOR</td>
<td><code>x = 5 ^ 1</code></td>
<td><code>0101 ^ 0001</code></td>
<td>0100</td>
<td>4</td>
</tr>
<tr>
<td><code>&lt;&lt;</code></td>
<td>Left shift</td>
<td><code>x = 5 &lt;&lt; 1</code></td>
<td><code>0101 &lt;&lt; 1</code></td>
<td>1010</td>
<td>10</td>
</tr>
<tr>
<td><code>&gt;&gt;</code></td>
<td>Right shift</td>
<td><code>x = 5 &gt;&gt; 1</code></td>
<td><code>0101 &gt;&gt; 1</code></td>
<td>0010</td>
<td>2</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong> The table above use 4 bits unsigned examples. But JavaScript uses 32-bit signed numbers. Because of this, in JavaScript, ~ 5 will not return 10. It will return -6: <code>~00000000000000000000000000000101</code> will return <code>11111111111111111111111111111010</code></p>
<h3 id="If-Statement"><a href="#If-Statement" class="headerlink" title="If Statement"></a>If Statement</h3><ul>
<li>Use the <strong>if</strong> statement to specify a block of JavaScript code to be executed if a condition is true.</li>
<li>Use the <strong>else</strong> statement to specify a block of code to be executed if the condition is false.</li>
<li>Use the <strong>else if</strong> statement to specify a new condition if the first condition is false.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (condition1) &#123;</div><div class="line">    block of code to be executed if condition1 is true</div><div class="line">&#125; else if (condition2) &#123;</div><div class="line">    block of code to be executed if the condition1 is false and condition2 is true</div><div class="line">&#125; else &#123;</div><div class="line">    block of code to be executed if the condition1 is false and condition2 is false</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Switch-Statement"><a href="#Switch-Statement" class="headerlink" title="Switch Statement"></a>Switch Statement</h3><p>Use the <strong>switch</strong> statement to select one of many blocks of code to be executed.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">switch(expression) &#123;</div><div class="line">    case n:</div><div class="line">        code block</div><div class="line">        break;</div><div class="line">    case n:</div><div class="line">        code block</div><div class="line">        break;</div><div class="line">    default:</div><div class="line">        default code block</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>A <strong>break</strong> can save a lot of execution time because it “ignores” the execution of all the rest of the code in the switch block.</li>
<li>The <strong>default</strong> keyword specifies the code to run if there is no case match.</li>
</ul>
<p>Sometimes, in a switch block, you will want different cases to use the same code, or fall-through to a common default.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">switch (new Date().getDay()) &#123;</div><div class="line">    case 1:</div><div class="line">    case 2:</div><div class="line">    case 3:</div><div class="line">    default: </div><div class="line">        text = &quot;Looking forward to the Weekend&quot;;</div><div class="line">        break; </div><div class="line">    case 4:</div><div class="line">    case 5:</div><div class="line">       text = &quot;Soon it is Weekend&quot;;</div><div class="line">        break; </div><div class="line">    case 0:</div><div class="line">    case 6:</div><div class="line">       text = &quot;It is Weekend&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If default is not the last case in the switch block, remember to end it with a break.</p>
<h3 id="For-Loop"><a href="#For-Loop" class="headerlink" title="For Loop"></a>For Loop</h3><p>The <strong>for</strong> loop is often the tool you will use when you want to create a loop.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for (statement 1; statement 2; statement 3) &#123;</div><div class="line">    code block to be executed</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>If you omit statement 2, you must provide a break inside the loop. Otherwise the loop will never end. This will crash your browser.</p>
<h3 id="While-Loop"><a href="#While-Loop" class="headerlink" title="While Loop"></a>While Loop</h3><p>The <strong>while</strong> loop loops through a block of code as long as a specified condition is true.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">while (condition) &#123;</div><div class="line">    code block to be executed</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <strong>do/while</strong> loop is a variant of the while loop. This loop will execute the code block once, before checking if the condition is true, then it will repeat the loop as long as the condition is true.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">do &#123;</div><div class="line">    code block to be executed</div><div class="line">&#125;</div><div class="line">while (condition);</div></pre></td></tr></table></figure>
<h3 id="Break-and-Continue"><a href="#Break-and-Continue" class="headerlink" title="Break and Continue"></a>Break and Continue</h3><p>The <strong>break</strong> statement “jumps out” of a loop. The break statement breaks the loop and continues executing the code after the loop (if any).</p>
<p>The <strong>continue</strong> statement “jumps over” one iteration in the loop. The continue statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.</p>
<p>The break and the continue statements are the only JavaScript statements that can “jump out of” a code block.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">break labelname; </div><div class="line">continue labelname;</div></pre></td></tr></table></figure>
<ul>
<li>The continue statement (with or without a label reference) can only be used to <strong>skip one loop iteration</strong>.</li>
<li>The break statement, without a label reference, can only be used to <strong>jump out of a loop or a switch</strong>.</li>
<li>With a label reference, the break statement can be used to <strong>jump out of any code block</strong>.</li>
</ul>
<h3 id="Type-Conversion"><a href="#Type-Conversion" class="headerlink" title="Type Conversion"></a>Type Conversion</h3><p>In JavaScript there are 5 different data types that can contain values:</p>
<ul>
<li>string</li>
<li>number</li>
<li>boolean</li>
<li>object</li>
<li>function</li>
</ul>
<p>There are 3 types of objects:</p>
<ul>
<li>Object</li>
<li>Date</li>
<li>Array</li>
</ul>
<p>And 2 data types that cannot contain values:</p>
<ul>
<li>null</li>
<li>undefined</li>
</ul>
<p>You can use the <strong>typeof</strong> operator to find the data type of a JavaScript variable.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">typeof &quot;John&quot;                 // Returns &quot;string&quot; </div><div class="line">typeof 3.14                   // Returns &quot;number&quot;</div><div class="line">typeof NaN                    // Returns &quot;number&quot;</div><div class="line">typeof false                  // Returns &quot;boolean&quot;</div><div class="line">typeof [1,2,3,4]              // Returns &quot;object&quot;</div><div class="line">typeof &#123;name:&apos;John&apos;, age:34&#125;  // Returns &quot;object&quot;</div><div class="line">typeof new Date()             // Returns &quot;object&quot;</div><div class="line">typeof function () &#123;&#125;         // Returns &quot;function&quot;</div><div class="line">typeof myCar                  // Returns &quot;undefined&quot; *</div><div class="line">typeof null                   // Returns &quot;object&quot;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>You cannot use typeof to determine if a JavaScript object is an array (or a date).</li>
<li>The typeof operator is not a variable. It is an operator. Operators <code>(+ - * /)</code> do not have any data type. But, the typeof operator always <strong>returns a string</strong> containing the type of the operand.</li>
</ul>
<p>The <strong>constructor</strong> property returns the constructor function for all JavaScript variables.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&quot;John&quot;.constructor                 // Returns &quot;function String()  &#123; [native code] &#125;&quot;</div><div class="line">(3.14).constructor                 // Returns &quot;function Number()  &#123; [native code] &#125;&quot;</div><div class="line">false.constructor                  // Returns &quot;function Boolean() &#123; [native code] &#125;&quot;</div><div class="line">[1,2,3,4].constructor              // Returns &quot;function Array()   &#123; [native code] &#125;&quot;</div><div class="line">&#123;name:&apos;John&apos;, age:34&#125;.constructor  // Returns&quot; function Object()  &#123; [native code] &#125;&quot;</div><div class="line">new Date().constructor             // Returns &quot;function Date()    &#123; [native code] &#125;&quot;</div><div class="line">function () &#123;&#125;.constructor         // Returns &quot;function Function()&#123; [native code] &#125;&quot;</div></pre></td></tr></table></figure>
<p>You can check the constructor property to find out if an object is an Array (contains the word “Array”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function isArray(myArray) &#123;</div><div class="line">    return myArray.constructor.toString().indexOf(&quot;Array&quot;) &gt; -1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>You can check the constructor property to find out if an object is a Date (contains the word “Date”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function isDate(myDate) &#123;</div><div class="line">    return myDate.constructor.toString().indexOf(&quot;Date&quot;) &gt; -1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>JavaScript variables can be converted to a new variable and another data type:</p>
<ul>
<li>By the use of a JavaScript function</li>
<li><strong>Automatically</strong> by JavaScript itself</li>
</ul>
<h3 id="Regular-Expressions"><a href="#Regular-Expressions" class="headerlink" title="Regular Expressions"></a>Regular Expressions</h3><ul>
<li>A regular expression is a sequence of characters that forms a <strong>search pattern</strong>.</li>
<li>When you search for data in a text, you can use this search pattern to describe what you are searching for.</li>
<li>A regular expression can be a single character, or a more complicated pattern.</li>
<li>Regular expressions can be used to perform all types of <strong>text search</strong> and <strong>text replace</strong> operations.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/pattern/modifiers;</div></pre></td></tr></table></figure>
<p>In JavaScript, regular expressions are often used with the two <strong>string methods</strong>: <code>search()</code> and <code>replace()</code>.</p>
<ul>
<li>The <code>search()</code> method uses an expression to search for a match, and returns the position of the match.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var str = &quot;Visit W3Schools&quot;;</div><div class="line">var n = str.search(/w3schools/i);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>replace()</code> method returns a modified string where the pattern is replaced.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var	str = &quot;Visit Microsoft!&quot;;</div><div class="line">var res = str.replace(/microsoft/i, &quot;W3Schools&quot;);</div></pre></td></tr></table></figure>
<p><strong>Modifiers</strong> can be used to perform case-insensitive more global searches.</p>
<table>
<thead>
<tr>
<th>Modifier</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>Perform case-insensitive matching</td>
</tr>
<tr>
<td>g</td>
<td>Perform a global match (find all matches rather than stopping after the first match)</td>
</tr>
<tr>
<td>m</td>
<td>Perform multiline matching</td>
</tr>
</tbody>
</table>
<p><strong>Brackets</strong> are used to find a range of characters.</p>
<table>
<thead>
<tr>
<th>Expression</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[abc]</code></td>
<td>Find any of the characters between the brackets</td>
</tr>
<tr>
<td><code>[0-9]</code></td>
<td>Find any of the digits between the brackets</td>
</tr>
<tr>
<td>(x&#124;y)</td>
<td>Find any of the alternatives separated with &#124;</td>
</tr>
</tbody>
</table>
<p><strong>Metacharacters</strong> are characters with a special meaning.</p>
<table>
<thead>
<tr>
<th>Metacharacter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\d</code></td>
<td>Find a digit</td>
</tr>
<tr>
<td><code>\s</code></td>
<td>Find a whitespace character</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>Find a match at the beginning or at the end of a word</td>
</tr>
<tr>
<td><code>\uxxxx</code></td>
<td>Find the Unicode character specified by the hexadecimal number xxxx</td>
</tr>
</tbody>
</table>
<p><strong>Quantifiers</strong> define quantities.</p>
<table>
<thead>
<tr>
<th>Quantifier</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>n+</code></td>
<td>Matches any string that contains at least one n</td>
</tr>
<tr>
<td><code>n*</code></td>
<td>Matches any string that contains zero or more occurrences of n</td>
</tr>
<tr>
<td><code>n?</code></td>
<td>Matches any string that contains zero or one occurrences of n</td>
</tr>
</tbody>
</table>
<p>The <code>test()</code> method is a RegExp expression method. It searches a string for a pattern, and returns <strong>true</strong> or <strong>false</strong>, depending on the result.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var patt = /e/;</div><div class="line">patt.test(&quot;The best things in life are free!&quot;);    //It returns true</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/e/.test(&quot;The best things in life are free!&quot;);</div></pre></td></tr></table></figure>
<p>The <code>exec()</code> method is a RegExp expression method. It searches a string for a specified pattern, and returns <strong>the found text</strong>. If no match is found, it returns <strong>null</strong>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[九月桂花香]]></title>
      <url>http://rrkaige.com/2016/10/09/%E4%B9%9D%E6%9C%88%E6%A1%82%E8%8A%B1%E9%A6%99/</url>
      <content type="html"><![CDATA[<p> 国庆七天，凄风苦雨，一下子从盛夏进入寒秋。悄然间，桂花开了。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161009-myblog72.JPG" alt="Osmanthus"></p>
<a id="more"></a>
<p> 雨后阳光微暖，鼻尖一缕幽香。四顾不见花开，细嗅方知是她。</p>
<p> 桂花的香，不浓烈，但馥郁，静如处子，淡若佳人。近前时，闭上眼，深呼吸，从鼻腔，到心肺，四肢百骸，醍醐灌顶。若在树下，定会做个飞翔的梦。</p>
<p> 桂花的花，不是一朵朵，而是一簇簇，不傲立枝头，却藏在叶间。小小的花瓣，你拥我我靠你，济济一团，温暖灿烂。绿色掩映嫩黄，满树似有光芒。</p>
<p> 路过的人，总会惊叹。或者折上几枝，带回一室馨香。</p>
<p> 孤芳自赏令人敬佩，平易近人却更亲切。</p>
<p> 我爱桂花。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之四]]></title>
      <url>http://rrkaige.com/2016/10/08/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B/</url>
      <content type="html"><![CDATA[<p> 继续学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161008-myblog71.jpg" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="Dates"><a href="#Dates" class="headerlink" title="Dates"></a>Dates</h3><p>The Date object lets you work with dates (years, months, days, hours, minutes, seconds, and milliseconds).</p>
<p>A JavaScript date can be written as a string:</p>
<p><strong>Sat Oct 08 2016 16:02:23 GMT+0800 (中国标准时间)</strong></p>
<p>or as a number:</p>
<p><strong>1475913743928</strong></p>
<p>Dates written as numbers, specifies the number of milliseconds since January 1, 1970, 00:00:00.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = Date();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Date objects are created with the <code>new Date()</code> constructor.</p>
<ul>
<li>Using <code>new Date()</code>, creates a new date object with the <strong>current date and time</strong></li>
<li>Using <code>new Date(date string)</code>, creates a new date object from the <strong>specified date and time</strong></li>
<li>Using <code>new Date(number)</code>, creates a new date object as <strong>zero time plus the number</strong></li>
<li>Using <code>new Date(7 numbers)</code>, creates a new date object with the <strong>specified date and time</strong></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">new Date()</div><div class="line">new Date(milliseconds)</div><div class="line">new Date(dateString)</div><div class="line">new Date(year, month, day, hours, minutes, seconds, milliseconds)</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>JavaScript dates are calculated in milliseconds from 01 January, 1970 00:00:00 Universal Time (UTC). One day contains 86,400,000 millisecond.</li>
<li>JavaScript counts months from 0 to 11. January is 0. December is 11.</li>
</ul>
<p>When you display a date object in HTML, it is automatically converted to a string, with the <code>toString()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;script&gt;</div><div class="line">d = new Date();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = d.toString();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>The <code>toUTCString()</code> method converts a date to a UTC string (a date display standard).</p>
<p>The <code>toDateString()</code> method converts a date to a more readable format.</p>
<p><strong>Note:</strong> Date objects are static. The computer time is ticking, but date objects, once created, are not.</p>
<p>When setting a date, without specifying the time zone, JavaScript will use the browser’s time zone. When getting a date, without specifying the time zone, the result is converted to the browser’s time zone.</p>
<p>In other words: If a date/time is created in GMT (Greenwich Mean Time), the date/time will be converted to CDT (Central US Daylight Time) if a user browses from central US.</p>
<h3 id="Date-Formats"><a href="#Date-Formats" class="headerlink" title="Date Formats"></a>Date Formats</h3><p>There are generally 4 types of JavaScript date input formats.</p>
<table>
<thead>
<tr>
<th>Type</th>
<th>Example</th>
</tr>
</thead>
<tbody>
<tr>
<td>ISO Date</td>
<td>“2015-03-25” (The International Standard)</td>
</tr>
<tr>
<td>Short Date</td>
<td>“03/25/2015” or “2015/03/25”</td>
</tr>
<tr>
<td>Long Date</td>
<td>“Mar 25 2015” or “25 Mar 2015”</td>
</tr>
<tr>
<td>Full Date</td>
<td>“Wednesday March 25 2015”</td>
</tr>
</tbody>
</table>
<p>Independent of input format, JavaScript will (by default) output dates in full text string format.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Wed Mar 25 2015 08:00:00 GMT+0800 (中国标准时间)</div></pre></td></tr></table></figure>
<p>ISO 8601 is the international standard for the representation of dates and times. The ISO 8601 syntax (YYYY-MM-DD) is also the preferred JavaScript date format.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var d1 = new Date(&quot;2015-03-25&quot;);</div><div class="line">var d2 = new Date(&quot;2015-03&quot;);</div><div class="line">var d3 = new Date(&quot;2015&quot;);</div><div class="line">var d4 = new Date(&quot;2015-03-25T12:00:00&quot;);</div></pre></td></tr></table></figure>
<p>Short dates are most often written with an “MM/DD/YYYY” syntax like this.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var d5 = new Date(&quot;03/25/2015&quot;);</div><div class="line">var d6 = new Date(&quot;2015/03/25&quot;);</div></pre></td></tr></table></figure>
<p>Long dates are most often written with a “MMM DD YYYY” syntax like this.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var d7 = new Date(&quot;Mar 25 2015&quot;);</div><div class="line">var d8 = new Date(&quot;25 Mar 2015&quot;);</div><div class="line">var d9 = new Date(&quot;January 25 2015&quot;);</div><div class="line">var d10 = new Date(&quot;JANUARY, 25, 2015&quot;);</div></pre></td></tr></table></figure>
<p>JavaScript will accept date strings in “full JavaScript format”.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var d11 = new Date(&quot;Wed Mar 25 2015 09:56:24 GMT+0100 (W. Europe Standard Time)&quot;);</div></pre></td></tr></table></figure>
<h3 id="Date-Methods"><a href="#Date-Methods" class="headerlink" title="Date Methods"></a>Date Methods</h3><p>Get methods are used for getting a part of a date. Here are the most common (alphabetically).</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>getDate()</code></td>
<td>Get the day as a number (1-31)</td>
</tr>
<tr>
<td><code>getDay()</code></td>
<td>Get the weekday as a number (0-6)</td>
</tr>
<tr>
<td><code>getFullYear()</code></td>
<td>Get the four digit year (yyyy)</td>
</tr>
<tr>
<td><code>getHours()</code></td>
<td>Get the hour (0-23)</td>
</tr>
<tr>
<td><code>getMilliseconds()</code></td>
<td>Get the milliseconds (0-999)</td>
</tr>
<tr>
<td><code>getMinutes()</code></td>
<td>Get the minutes (0-59)</td>
</tr>
<tr>
<td><code>getMonth()</code></td>
<td>Get the month (0-11)</td>
</tr>
<tr>
<td><code>getSeconds()</code></td>
<td>Get the seconds (0-59)</td>
</tr>
<tr>
<td><code>getTime()</code></td>
<td>Get the time (milliseconds since January 1, 1970)</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var d = new Date();</div><div class="line">var days = [&quot;Sunday&quot;,&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;,&quot;Saturday&quot;];</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = days[d.getDay()];</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In JavaScript, the first day of the week (0) means “Sunday”, even if some countries in the world consider the first day of the week to be “Monday”.</p>
<p>Set methods are used for setting a part of a date. Here are the most common (alphabetically).</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>setDate()</code></td>
<td>Set the day as a number (1-31)</td>
</tr>
<tr>
<td><code>setFullYear()</code></td>
<td>Set the year (optionally month and day)</td>
</tr>
<tr>
<td><code>setHours()</code></td>
<td>Set the hour (0-23)</td>
</tr>
<tr>
<td><code>setMilliseconds()</code></td>
<td>Set the milliseconds (0-999)</td>
</tr>
<tr>
<td><code>setMinutes()</code></td>
<td>Set the minutes (0-59)</td>
</tr>
<tr>
<td><code>setMonth()</code></td>
<td>Set the month (0-11)</td>
</tr>
<tr>
<td><code>setSeconds()</code></td>
<td>Set the seconds (0-59)</td>
</tr>
<tr>
<td><code>setTime()</code></td>
<td>Set the time (milliseconds since January 1, 1970)</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var d = new Date();</div><div class="line">d.setDate(d.getDate() + 50);</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = d;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If adding days, shifts the month or year, the changes are handled automatically by the Date object.</p>
<p>If you have a valid date string, you can use the <code>Date.parse()</code> method to convert it to milliseconds.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">var msec = Date.parse(&quot;March 21, 2012&quot;);</div><div class="line">var d = new Date(msec);</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = d;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Dates can easily be compared.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var today, someday, text;</div><div class="line">today = new Date();</div><div class="line">someday = new Date();</div><div class="line">someday.setFullYear(2100, 0, 14);</div><div class="line"></div><div class="line">if (someday &gt; today) &#123;</div><div class="line">    text = &quot;Today is before January 14, 2100.&quot;;</div><div class="line">&#125; else &#123;</div><div class="line">    text = &quot;Today is after January 14, 2100.&quot;;</div><div class="line">&#125;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = text;</div></pre></td></tr></table></figure>
<h3 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h3><p>JavaScript arrays are used to store multiple values in a single variable. Using an array literal is the easiest way to create a JavaScript Array.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var array-name = [item1, item2, ...];</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];</div><div class="line">var cars = [</div><div class="line">    &quot;Saab&quot;,</div><div class="line">    &quot;Volvo&quot;,</div><div class="line">    &quot;BMW&quot;</div><div class="line">];</div><div class="line">var cars = new Array(&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>The two examples above do exactly the same. There is no need to use new Array().</li>
<li>For simplicity, readability and execution speed, use the first one (the array literal method).</li>
</ul>
<p>You refer to an array element by referring to the <strong>index number</strong>.</p>
<p>[0] is the first element in an array. [1] is the second. Array indexes start with 0.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = cars[0];</div></pre></td></tr></table></figure>
<p>With JavaScript, the full array can be accessed by referring to the array name.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = cars;</div></pre></td></tr></table></figure>
<p>JavaScript variables can be objects. Arrays are special kinds of objects. Because of this, you can have variables of different types in the same Array.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">myArray[0] = Date.now;</div><div class="line">myArray[1] = myFunction;</div><div class="line">myArray[2] = myCars;</div></pre></td></tr></table></figure>
<p>The <strong>length</strong> property of an array returns the length of an array (the number of array elements).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.length;                       // the length of fruits is 4</div></pre></td></tr></table></figure>
<p>The best way to loop through an array, is using a “for” loop.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var fruits, text, fLen, i;</div><div class="line"></div><div class="line">fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fLen = fruits.length;</div><div class="line">text = &quot;&lt;ul&gt;&quot;;</div><div class="line">for (i = 0; i &lt; fLen; i++) &#123;</div><div class="line">    text += &quot;&lt;li&gt;&quot; + fruits[i] + &quot;&lt;/li&gt;&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The easiest way to add a new element to an array is using the push method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.push(&quot;Lemon&quot;);                // adds a new element (Lemon) to fruits</div></pre></td></tr></table></figure>
<p>New element can also be added to an array using the length property.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits[fruits.length] = &quot;Lemon&quot;;     // adds a new element (Lemon) to fruits</div></pre></td></tr></table></figure>
<p>Many programming languages support arrays with named indexes. Arrays with named indexes are called associative arrays (or hashes).</p>
<p>JavaScript does <strong>not</strong> support arrays with named indexes. In JavaScript, <strong>arrays</strong> always use <strong>numbered indexes</strong>.</p>
<p>In JavaScript, <strong>arrays</strong> use <strong>numbered</strong> indexes, while <strong>objects</strong> use <strong>named</strong> indexes.</p>
<p><strong>Note:</strong> Arrays are a special kind of objects, with numbered indexes.</p>
<p>A common question is: How do I know if a variable is an array?</p>
<p>The problem is that the JavaScript operator <strong>typeof</strong> returns “object”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">typeof fruits;             // returns object</div></pre></td></tr></table></figure>
<p>The typeof operator returns object because a JavaScript array is an object.</p>
<p>To solve this problem ECMAScript 5 defines a new method <code>Array.isArray()</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Array.isArray(fruits);     // returns true</div></pre></td></tr></table></figure>
<p>The problem with this solution is that ECMAScript 5 is <strong>not supported in older browsers</strong>.</p>
<p>To solve this problem you can create your own <code>isArray()</code> function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function isArray(x) &#123;</div><div class="line">    return x.constructor.toString().indexOf(&quot;Array&quot;) &gt; -1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The function above always returns true if the argument is an array.</p>
<p>Or more precisely: it returns true if the object prototype contains the word “Array”.</p>
<p>The <strong>instanceof</strong> operator returns true if an object is created by a given constructor:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The instanceof operator returns true if an object is created by a given constructor:</div></pre></td></tr></table></figure>
<h3 id="Array-Methods"><a href="#Array-Methods" class="headerlink" title="Array Methods"></a>Array Methods</h3><p>The JavaScript method <code>toString()</code> converts an array to a string of (comma separated) array values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = fruits.toString();    //Banana,Orange,Apple,Mango</div></pre></td></tr></table></figure>
<p>The <code>join()</code> method also joins all array elements into a string. It behaves just like toString(), but in addition you can specify the separator.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;,&quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = fruits.join(&quot; * &quot;);    //Banana * Orange * Apple * Mango</div></pre></td></tr></table></figure>
<p>The <code>pop()</code> method removes the <strong>last</strong> element from an array.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.pop();              // Removes the last element (&quot;Mango&quot;) from fruits</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">var x = fruits.pop();      // the value of x is &quot;Mango&quot;</div></pre></td></tr></table></figure>
<p>The <code>push()</code> method adds a new element to an array (at the <strong>end</strong>).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.push(&quot;Kiwi&quot;);       //  Adds a new element (&quot;Kiwi&quot;) to fruits</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">var x = fruits.push(&quot;Kiwi&quot;);   //  the value of x is 5</div></pre></td></tr></table></figure>
<p><strong>Shifting</strong> is equivalent to popping, working on the <strong>first</strong> element instead of the last.</p>
<p>The <code>shift()</code> method removes the <strong>first</strong> array element and “shifts” all other elements to a lower index.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.shift();            // Removes the first element &quot;Banana&quot; from fruits</div></pre></td></tr></table></figure>
<p>The <code>unshift()</code> method adds a new element to an array (at the <strong>beginning</strong>), and “unshifts” older elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.unshift(&quot;Lemon&quot;);    // Adds a new element &quot;Lemon&quot; to fruits</div></pre></td></tr></table></figure>
<p>The <code>shift()</code> method returns the string that was “shifted out”. The <code>unshift()</code> method returns the new array length.</p>
<p>Since JavaScript arrays are objects, elements can be deleted by using the JavaScript operator <strong>delete</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">delete fruits[0];           // Changes the first element in fruits to undefined</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Using delete may leave <strong>undefined holes</strong> in the array. Use <code>pop()</code> or <code>shift()</code> instead.</p>
<p>The <code>splice()</code> method can be used to add new items to an array.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.splice(2, 0, &quot;Lemon&quot;, &quot;Kiwi&quot;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter (2) defines the position <strong>where</strong> new elements should be <strong>added</strong> (spliced in).</li>
<li>The second parameter (0) defines <strong>how many</strong> elements should be <strong>removed</strong>.</li>
<li>The rest of the parameters (“Lemon” , “Kiwi”) define the new elements to be <strong>added</strong>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.splice(0, 1);        // Removes the first element of fruits</div></pre></td></tr></table></figure>
<p>The <code>concat()</code> method creates a new array by concatenating two arrays.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr1 = [&quot;Cecilie&quot;, &quot;Lone&quot;];</div><div class="line">var arr2 = [&quot;Emil&quot;, &quot;Tobias&quot;,&quot;Linus&quot;];</div><div class="line">var arr3 = [&quot;Robin&quot;, &quot;Morgan&quot;];</div><div class="line">var myChildren = arr1.concat(arr2, arr3);     // Concatenates arr1 with arr2 and arr3</div></pre></td></tr></table></figure>
<p>The <code>slice()</code> method slices out a piece of an array into a new array.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Lemon&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">var citrus = fruits.slice(1, 3);</div></pre></td></tr></table></figure>
<p>The method then selects elements from the start argument, and up to (but <strong>not including</strong>) the end argument.</p>
<p><strong>Note:</strong> The <code>slice()</code> method creates a new array. It does not remove any elements from the source array.</p>
<p>The <code>valueOf()</code> method is the default behavior for an array. It converts an array to a primitive value.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = fruits.valueOf();</div></pre></td></tr></table></figure>
<h3 id="Sorting-Arrays"><a href="#Sorting-Arrays" class="headerlink" title="Sorting Arrays"></a>Sorting Arrays</h3><p>The <code>sort()</code> method sorts an array alphabetically.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.sort();            // Sorts the elements of fruits</div></pre></td></tr></table></figure>
<p>The <code>reverse()</code> method reverses the elements in an array. You can use it to sort an array in descending order.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</div><div class="line">fruits.sort();            // Sorts the elements of fruits </div><div class="line">fruits.reverse();         // Reverses the order of the elements</div></pre></td></tr></table></figure>
<p>By default, the sort() function sorts values as <strong>strings</strong>.</p>
<p>This works well for strings (“Apple” comes before “Banana”). However, if numbers are sorted as strings, “25” is bigger than “100”, because “2” is bigger than “1”. Because of this, the <code>sort()</code> method will produce incorrect result when sorting numbers.</p>
<p>You can fix this by providing a <strong>compare function</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var points = [40, 100, 1, 5, 25, 10];</div><div class="line">points.sort(function(a, b)&#123;return a - b&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>Sorting an Array in Random Order</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var points = [40, 100, 1, 5, 25, 10];</div><div class="line">points.sort(function(a, b)&#123;return 0.5 - Math.random()&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>Find the Highest (or Lowest) Value</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var points = [40, 100, 1, 5, 25, 10];</div><div class="line">points.sort(function(a, b)&#123;return b - a&#125;);    // now points[0] contains the highest value</div></pre></td></tr></table></figure>
<ul>
<li>Sorting Object Arrays</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var cars = [</div><div class="line">&#123;type:&quot;Volvo&quot;, year:2016&#125;,</div><div class="line">&#123;type:&quot;Saab&quot;, year:2001&#125;,</div><div class="line">&#123;type:&quot;BMW&quot;, year:2010&#125;];</div><div class="line">cars.sort(function(a, b)&#123;return a.year - b.year&#125;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一个老人]]></title>
      <url>http://rrkaige.com/2016/10/07/%E4%B8%80%E4%B8%AA%E8%80%81%E4%BA%BA/</url>
      <content type="html"><![CDATA[<p> 假期的食堂人影寥落，我端着餐盘，中间找位置坐下。环顾四周，没有熟悉的面孔，便专心对付眼前的午饭。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161007-myblog70.jpg" alt="Old Man"></p>
<a id="more"></a>
<p> 一个身影出现在眼角，顿了顿，坐在我左前方。是他，那位老人。昨天也在这碰见，看来是常客。学校食堂对外开放，菜色不错还便宜，附近小区很多老人都到这解决三餐。</p>
<p> 我开始细细打量。老人一头稀疏白发，略秃的头顶反射着灯光。藏青色外套是年代久远的款式，搭配灰色长裤，洗得泛白。一双明显过大的棕色登山鞋，鞋带系得一丝不苟。桌上放着“XX 辅导班”字样的蓝色袋子，提绳断过，用白线缝着。边上一把大雨伞，印着“XX 证券”。</p>
<p> 老人放好东西，开始吃饭。捉着筷子的右手，大拇指甲变形翘起，里面有乌青的瘀血。他先用筷子把饭理好，堆成小山，然后从四边开始，一小口一小口，细嚼慢咽。后面看去，脸上的皱纹时紧时松。他不怎么吃菜，餐盘里两份菜大半还在，饭就吃完了。</p>
<p> 正奇怪时，老人从蓝色袋子里摸出一个白色塑料饭盒，难道？果然，他把剩下的小半碗汤，和着一点点西红柿鸡蛋，青椒豆干倒进去，又用细绳绑好，套上塑料袋扎紧。歇了会，他收拾好东西，慢慢走了出去。</p>
<p> 我看他弓着背，大伞几乎挡住全身，步履蹒跚，消失在转角的风雨中。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[动手组装电脑]]></title>
      <url>http://rrkaige.com/2016/10/06/%E5%8A%A8%E6%89%8B%E7%BB%84%E8%A3%85%E7%94%B5%E8%84%91/</url>
      <content type="html"><![CDATA[<p> 去年（2015 年）9 月，种种原因，需要自行组装一台电脑。根据网上教程，上 TB 和 JD 单独选购，亲手组装，成功点亮。一年来，陆续添置硬件，运行良好。特此作总结。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161006-myblog69.jpg" alt="Assembly Kits Computer"></p>
<a id="more"></a>
<p> 配置硬件清单如下：</p>
<table>
<thead>
<tr>
<th> 名称 </th>
<th> 配置 </th>
<th> 价格 /¥</th>
</tr>
</thead>
<tbody>
<tr>
<td> 主板 </td>
<td>Gigabyte/ 技嘉 B85M-D3V</td>
<td>399.00</td>
</tr>
<tr>
<td> 处理器 </td>
<td>Intel/ 英特尔 I3-4160</td>
<td>695.00</td>
</tr>
<tr>
<td> 风扇 </td>
<td>Deepcool/ 九州风神 玄冰 400</td>
<td>99.00</td>
</tr>
<tr>
<td> 内存 </td>
<td>HyperX/ 骇客神条 HX318C10F-8 DDR3 1866 8G</td>
<td>209.00</td>
</tr>
<tr>
<td> 固态硬盘 </td>
<td>Samsung/ 三星 MZ-75E120B/CN 850EVO 120G</td>
<td>379.00</td>
</tr>
<tr>
<td> 机械硬盘 </td>
<td>Seagate/ 希捷 ST1000DM003 1T SATA3 7200 转 </td>
<td>309.00</td>
</tr>
<tr>
<td> 光驱 </td>
<td>Panasonic/ 松下 MF10 USB3.0</td>
<td>179.00</td>
</tr>
<tr>
<td> 电源 </td>
<td>Aigo/ 爱国者 黑暗骑士 550DK 400W</td>
<td>149.00</td>
</tr>
<tr>
<td> 机箱 </td>
<td>Aigo/ 爱国者 黑暗骑士 D8 绿色中塔式机箱 </td>
<td>119.00</td>
</tr>
<tr>
<td> 无线网卡 </td>
<td>TP-LINK TL-WN726N USB 免驱版 </td>
<td>49.00</td>
</tr>
<tr>
<td> 键鼠 </td>
<td>Logitech/ 罗技 MK520</td>
<td>269.00</td>
</tr>
<tr>
<td> 音箱 </td>
<td>JBL Pebbles mini</td>
<td>399.00</td>
</tr>
<tr>
<td> 集线器 </td>
<td>UNITEK/ 优越者 Y-3072BK USB3.0</td>
<td>99.00</td>
</tr>
</tbody>
</table>
<p> 由此，配置应算中等，共计花费约三千余元。</p>
<p> 显示器有现成的，显卡由于不玩游戏且 CPU 有集成显卡，所以未购置。风扇并未使用，CPU 自带的已足够。</p>
<p> 组装过程很顺利，也算对电脑内部有了明确认识。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[大鱼海棠]]></title>
      <url>http://rrkaige.com/2016/10/05/%E5%A4%A7%E9%B1%BC%E6%B5%B7%E6%A3%A0/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 北冥有鱼，其名为鲲，鲲之大，不知其几千里也。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161005-myblog68.jpg" alt="Big Fish Begonia"></p>
<a id="more"></a>
<p> 一部国产动画，十二年神坑。</p>
<p> 椿，湫，鲲，电影主角。没错，简单看就是个三角恋的故事。世界观很宏大，海之下的空间，生活着掌管人类世界万物运行规律的“其他人”。居然还有嫘祖、祝融和共工，上古神话传说现在是无所不在。成人礼，椿害死鲲，为救鲲付出一半寿命，引来大灾难，湫为救椿又付出全部寿命，成全了椿和鲲。他爱的她却爱着他，一个悲伤的故事。</p>
<p> 除去剧情，动画很美。土楼，海棠树，凤凰，天马，海龙，漫天遨游的大鱼，确是梦中的世界。不过，各种古怪的人和动物，难免想到宫崎骏的动画。</p>
<p> 翻出十二年前的 Flash 动画，依稀有着影子。2004 年，我才上六年级啊。</p>
<p> 记得自己做过的梦，伸开双手，提气，就能慢慢飞上天空，想去哪就去哪。</p>
<p> 看完后，印象最深的两句话：</p>
<blockquote>
<p> 你对我就像哥哥一样好。</p>
<p> 谢谢你一直陪在我身边，你是世界上对我最好的人。</p>
</blockquote>
<p> 不能再悲伤。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[同学新婚视频制作]]></title>
      <url>http://rrkaige.com/2016/10/04/%E5%90%8C%E5%AD%A6%E6%96%B0%E5%A9%9A%E8%A7%86%E9%A2%91%E5%88%B6%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>大学同学灿姐明天结婚，远在西安，不能成行。于是，折腾点事，聊表祝福。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161004-myblog67.jpg" alt="Happy Marriage"></p>
<a id="more"></a>
<p>婚礼暑假就已通知，大多数同学都去不了，当然也没有提份子钱的事。我最初打算让同学把份子钱捎去，毕竟灿姐作为文娱委员对我班长的工作多有支持，关系蛮好。结果，前天晚上洗澡时，我突然心血来潮，觉得应该趁此机会让老十班的同学加深下感情。虽然大家毕业后已天南海北，联系渐少，感情趋淡，但我觉得这是个机会。</p>
<p>就在洗澡的十分钟里，我有了两个想法。一个不花钱，大伙每人拍段祝福视频，我来操刀剪辑。一个花点钱，不去的同学每人随个 100 块，凑个集体红包。我心里觉得两个都可行，不过自个得辛苦点，因为婚礼就在明天。当晚跟露姐通了个气，她举双手赞成。</p>
<p>于是，昨天一大早，我另建临时群，把想法一说，大家都挺踊跃。当天就把份子钱收齐，我多掏 100，凑足 1800，听着吉利。祝福视频也陆续发送过来，看着不错。</p>
<p>今天，我重操爱剪辑，草图已在脑海中打好，实现却颇费一番功夫。一是操作有些生疏，而是这次要加入很多图片，之前没有用过，只能摸索着来。其中遇到几个问题，如下：</p>
<ul>
<li><strong>新建 </strong>。要新建<code>1280*720(720P)</code> 格式，导出时同样，<code>MP4</code>格式即可。</li>
<li><strong>图片处理 </strong>。Photoshop 太贵（居然是按月付费），而且并不常用，无意购买，也不想折腾破解版。之前用过<a href="http://xiuxiu.meitu.com/" target="_blank" rel="external"> 美图秀秀 </a>，这次尝试<a href="http://www.neoimaging.cn/" target="_blank" rel="external"> 光影魔术手</a>，发现这款国产软件功能很全，足够一般使用。</li>
<li><strong>添加图片 </strong>。爱剪辑主要用于视频拼接，但也可以<a href="http://www.ijianji.com/article/dianzixiangce.htm" target="_blank" rel="external"> 添加照片 </a>。有个方法推荐用<a href="http://www.powerrsoft.com/indexgb.htm" target="_blank" rel="external"> 数码大师 </a> 先把照片做成视频，结果发现要花钱注册才能使用。果断直接通过“加贴图”方式解决问题。</li>
<li>添加背景音乐。添加 Joyce Jonathan 的 <code>Ça Ira</code> 时，无法选中文件，后来发现问题出在文件名（不支持法语），更名后解决。</li>
<li><strong>导出画面黑屏</strong>。出现在几张图片处，在软件中预览时就有卡顿现象。开始以为是图片显示特效的原因，更改之后依旧，而且不是所有图片都黑屏。检查后猜测是照片过大造成，压缩后重新添加，解决问题。</li>
<li><strong>随时保存</strong>。可以“保存当前所有设置为工程文件”，便于后续修改。这个很重要，可以省却重复工作，上次做“懒人计步器”视频忘记这茬。</li>
</ul>
<p>就这样磕磕碰碰，花了一整天，总算完成作品。自个看着不错，也算是一番赤足心意。</p>
<ul>
<li>10 月 5 日补。视频在下面。听说现场效果不错，如此足矣。不过，好像又给自己挖了个坑。</li>
</ul>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTc0ODcxNTg1Mg==" frameborder="0" 'allowfullscreen'=""></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[大闸蟹 H5 页面制作]]></title>
      <url>http://rrkaige.com/2016/10/03/%E5%A4%A7%E9%97%B8%E8%9F%B9H5%E9%A1%B5%E9%9D%A2%E5%88%B6%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>微信中 H5 页面流行，表哥家养殖的大闸蟹正好上市，托我做一个。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161003-myblog66.jpg" alt="Hairy Crabs"></p>
<a id="more"></a>
<p>了解了下，发现做这个的应用挺多，<a href="http://www.ih5.cn" target="_blank" rel="external">iH5</a>，<a href="http://www.eqxiu.com/" target="_blank" rel="external">易企秀 </a>，<a href="www.rabbitpre.com"> 兔展 </a> 等等，有专业的，有傻瓜的，五花八门。最后，选了 iH5。要做，就做专业的。</p>
<p>好吧，其实学了会，发现操作并不是那么简单。加之忙于工作，就放下了。直到今天（10 月 28 日），才抽出时间完成。</p>
<p>构思，选图，剪辑，文字，音乐，特效，充满乐趣又枯燥无味。大部分图和文字感觉挺像做 PPT，不断加动画。难点在于翻页键和音乐，机智的我从其他模版直接复制粘贴，稍微修改就 OK。预览又修改，修改再预览，最终大功告成。</p>
<p>作品在 <a href="http://e0b6520b163d.ih5.cn/idea/LApvjVO" target="_blank" rel="external"> 这里</a>。</p>
<p>感觉相当不错啊。莫名佩服我自己！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[少些麻烦]]></title>
      <url>http://rrkaige.com/2016/10/02/%E5%B0%91%E4%BA%9B%E9%BA%BB%E7%83%A6/</url>
      <content type="html"><![CDATA[<p> 不要总是麻烦人。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161002-myblog65.jpg" alt="Eureka"></p>
<a id="more"></a>
<p> 父母当年结婚即“被分家”，欠下大笔债务。他们二十年来辛勤劳作，省吃俭用，才有如今的生活。小时候家具都是父亲做的。他学过竹匠，也会简单木匠手艺。竹篮，竹垫，竹筛，竹簸箕，后来的碗橱，书柜，板凳，至今仍在。他们很少麻烦人办事，实在需要也讲究礼尚往来。他们吃过苦，知道麻烦别人时双方的累。当然，他们对于别人的麻烦往往抹不开面子拒绝。很多时候，这都是争吵的根源。</p>
<p> 所以我很少麻烦人做事，不论学习还是生活。我很少开口请求，特别对于朋友同学。我一直认为，关系够铁，往往不必多说；关系不行，说多也是白搭；事情不大，还得自己多想办法；事情太大，麻烦只会让双方都为难。麻烦一下，看似没有物质付出，但交情的得失无法计量。</p>
<p> 大学时做智能车，我对负责的任务绝不含糊，对各项额外工作也热心帮忙。现在想来，当时的自己“很傻很天真”，眼界不够开阔，理想主义严重，是一颗真正的“螺丝钉”。</p>
<p> 担任班长十三年中，支部书记四年来，我同样如此。我总是谨记服务同学的念头，干着各种“跑腿”的活。争优答辩制作材料烦不胜烦，组织活动参加比赛事无巨细，有失也有得。因我只有建议权而无决定权，索性干脆做好本职工作。</p>
<p> 很多时候，我本着吃亏是福的念头，不吝帮忙。但总有人得寸进尺，觉得理所当然。他们不会想起曾经的援助，只会记得唯一的拒绝。勿以小恶弃人大美，勿以小怨忘人大恩。吃一堑长一智，此类人还是少惹为妙。</p>
<p> 我时常记得父母教诲，与人交往，不要“小家子气”，该花得花。但如何花得值得，花得漂亮，我仍需学习。</p>
<p> 我不愿强迫人做事，强扭的瓜不甜。同样，别人无法强迫我帮忙，我也有权利说不。大家生来平等，能帮就帮，没必要搞虚与委蛇的一套。道不同者，不相为谋。学会拒绝，少些麻烦。活得潇洒，活得开心就好。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我们诞生在中国]]></title>
      <url>http://rrkaige.com/2016/10/01/%E6%88%91%E4%BB%AC%E8%AF%9E%E7%94%9F%E5%9C%A8%E4%B8%AD%E5%9B%BD/</url>
      <content type="html"><![CDATA[<p> 听说这部自然电影很美，看完之后，果不其然。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161001-myblog64.jpg" alt="Born In China"></p>
<a id="more"></a>
<p> 草原，高山，密林，大湖，这些自然中的盛景。在延时摄影的镜头里，云卷云舒，雾聚雾散，美不胜收。俯视的同时，内心却在顶礼膜拜。</p>
<p> 丹顶鹤，寥寥几笔，夕阳下的独舞，飞过芦苇荡，越过高山，承载着生命的灵魂。</p>
<p> 雪豹母子，对待入侵者，通过抓地示威让对手知难而退，或许是避免两败俱伤，才有独特的争斗方式。捕食岩羊，剥夺生命是为了延续生命。入侵者的重返，不得不让出领地。为了抓捕牦牛被顶刺踩踏，最后在冰雪中死去。</p>
<p> 金丝猴一家和流浪猴群的争斗，以及时时窥伺的苍鹰。小猴子在树林里尽情折树枝，抢松果吃松子，雪地上欢快地蹦跶。从离家出走到重返家中，十足叛逆的小孩。</p>
<p> 一天吃 18 公斤竹子的大熊猫，舐犊情深。从小不点，到圆滚滚，最后是完成爬树成人礼离开的背影。</p>
<p> 一年一度藏羚羊大迁徙，当然只是母羊。卓乃湖边的初生，半小时站起几天就能奔跑。靠着气味踏上归途，千里回家，结果却是另觅新欢。</p>
<p> 当然，这只是一部自然电影，并非纯粹的纪录片。万千镜头经过剪辑，配上周迅俏皮可爱的嗓音，美哉。</p>
<p> 一幕幕，喜怒哀乐，如同人生。都是生命啊，初生，成长，逝去，轮回，生生不息，如此多彩。千言万语，唯有一叹。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[X-Ray Goggles 小工具]]></title>
      <url>http://rrkaige.com/2016/09/30/X-Ray-Goggles%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<p>发现一个小工具，<a href="https://goggles.mozilla.org/" target="_blank" rel="external">X-Ray Goggles</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160930-myblog63.png" alt="Thumb Toolkit X-Ray Goggles"></p>
<a id="more"></a>
<p>这是一个可以直接对网页进行编辑修改的工具，收藏为书签即可。用的时候，打开网页，点击 Goggles，开始在页面上寻找吧。点击区块，就会出现相应的 HTML 代码，直接更改其中内容从而显示。当然，这些只是改动本地的网页副本而已，对于原网页并无影响。寓教于乐，足以用于简单的 HTML 学习。</p>
<p>我为什么如此了解，因为我为本地化做了点 <a href="https://support.mozilla.org/zh-CN/products/webmaker/x-ray-goggles" target="_blank" rel="external"> 贡献</a>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Web 编辑器]]></title>
      <url>http://rrkaige.com/2016/09/29/Web%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<p> 学习 Web 前端一段时间，了解使用了一些简单的 HTML 编辑器，整理下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160929-myblog62.png" alt="HTML"></p>
<a id="more"></a>
<ul>
<li><a href="https://notepad-plus-plus.org/" target="_blank" rel="external"><strong>Notepad++</strong></a>，最简单的万能文本编辑器，写代码需要超强记忆力。</li>
<li><a href="http://www.sublimetext.com/" target="_blank" rel="external"><strong>Sublime Text</strong></a>，学 Markdown 时装的，用了发现不如有道云笔记的“所见即所得”，同样需要记住代码。</li>
<li><a href="http://www.dcloud.io/" target="_blank" rel="external"><strong>Hbuilder</strong></a>，国产软件，喜欢其智能提示补全功能，目前为止用来开发简单的个人导航网页 Navi，非常方便。</li>
<li><a href="http://brackets.io/" target="_blank" rel="external"><strong>Bracket</strong></a>，开源软件，有强大的快速编辑和浏览器实时显示功能。</li>
<li><a href="https://thimble.mozilla.org/" target="_blank" rel="external"><strong>Thimble</strong></a>，在线代码编辑器，功能与 Bracket 类似，适用于教学。</li>
</ul>
<p> 暂且这些，后续再补。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[整理一下]]></title>
      <url>http://rrkaige.com/2016/09/28/%E6%95%B4%E7%90%86%E4%B8%80%E4%B8%8B/</url>
      <content type="html"><![CDATA[<blockquote>
<p>世事一场大乱，人生几度整理。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160928-myblog61.jpg" alt="OCD"></p>
<a id="more"></a>
<p>似乎有整理强迫症，身边东西不放整齐就难受。笔尺文具，书本物件，在我眼里，总有它该呆的位置。乱七八糟的环境我是万万坐不住，眼烦心更烦。并非怪癖，只是理清之后方便找寻。莫到用时方恨乱，如此看来，整理和偷懒并不矛盾。</p>
<p>我的整理爱好自小养成，父母影响颇多。老一辈人，家里物件不多，更没昂贵奢华品，但绝对干净整洁，让人赏心悦目。杜绝脏乱差，至少顾及身边方寸之地。一屋不扫，何以扫天下。所以我从小到大的书本毫无褶皱污渍，至今仍整齐躺在书柜中。从小到大，由远及近，分门别类，按图索骥，这些想法似乎已经融入血液，成为本能。</p>
<p>十几年班长，信息的收集整理，活动的组织管理，实践与贯彻，炉火而纯青。繁重的事务分解成块，繁琐的事情理清步骤，大而化小，何愁不解。很多重复性工作，做好第一次整理，再来就无需从头开始。</p>
<p>信息时代，整理愈发重要。纷繁的电子文档，重要的备份文件，不妥善保存，丢失之后唯有悔之晚矣。手机电脑移动硬盘，定期就得归置。各种云存储工具之多，让人目不暇接，难免挑花了眼。创建个人博客，把之前的所得梳理一遍，刻入时光，矢志不忘。</p>
<p>写完这些，也算是一个简单的整理。</p>
<p>PS：重置文章分类，且作：<strong>尘世行者 </strong>，<strong> 书里时光 </strong>，<strong> 影里偷闲 </strong>，<strong> 零壹之间 </strong>，<strong> 技多压身</strong>，<strong>Web 征途</strong>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SUMO！]]></title>
      <url>http://rrkaige.com/2016/09/27/SUMO!/</url>
      <content type="html"><![CDATA[<p>SUMO，<a href="https://support.mozilla.org/en-US/get-involved" target="_blank" rel="external">SUpport MOzilla</a>！一直想做的事，从这开始。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160927-myblog60.png" alt="SUMO"></p>
<a id="more"></a>
<p> 学英语，更要用英语。没有外语环境，只能求助于互联网。之前想加入字幕组，一直没行动，因为我这英语能力——心有余而力不足。看 Algorithms 的视频时，也想贡献字幕来着，但，好像太专业。GitHub 上很多开源项目，也曾动了加入翻译的心思。想而未做，也就淡了心思。</p>
<p> 直到前天用了 Thunderbird，发现这是 Mozilla 的一个开源项目，而 SUMO 则是 Mozilla 的志愿团队。Mozilla 的开源项目很多，一点一滴都是来自于全世界各地志愿者的奉献。不同肤色，不同语言，不同文化，在这里很好的融合。</p>
<p> 所以，我该行动了。就从一个 localizer 开始，从 Thunderbird 帮助文档开始，从现在开始，争取坚持下去！</p>
<p>PS：<a href="https://support.mozilla.org/zh-CN/kb/%E5%9C%A8Mac%E4%B8%AD%E5%AE%89%E8%A3%85Thunderbird" target="_blank" rel="external"> 第一次成果 </a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之三]]></title>
      <url>http://rrkaige.com/2016/09/26/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/</url>
      <content type="html"><![CDATA[<p> 继续学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160926-myblog59.jpg" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h3><p>JavaScript strings are used for storing and manipulating text.</p>
<p>The length of a string is found in the built in property <strong>length</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var txt = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</div><div class="line">var sln = txt.length;</div></pre></td></tr></table></figure>
<p>The backslash escape character turns special characters into string characters.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = &apos;It\&apos;s alright&apos;;</div><div class="line">var y = &quot;We are the so-called \&quot;Vikings\&quot; from the north.&quot;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Code</th>
<th>Outputs</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\&#39;</code></td>
<td>single quote</td>
</tr>
<tr>
<td><code>\&quot;</code></td>
<td>double quote</td>
</tr>
<tr>
<td><code>\\</code></td>
<td>backslash</td>
</tr>
<tr>
<td><code>\n</code></td>
<td>new line</td>
</tr>
<tr>
<td><code>\r</code></td>
<td>carriage return</td>
</tr>
<tr>
<td><code>\t</code></td>
<td>tab</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>backspace</td>
</tr>
<tr>
<td><code>\f</code></td>
<td>form feed</td>
</tr>
</tbody>
</table>
<p>If a JavaScript statement does not fit on one line, the best place to break it is after an operator.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">&quot;Hello Dolly.&quot;;</div></pre></td></tr></table></figure>
<p>You can also break up a code line within a text string with a single backslash.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello \</div><div class="line">Dolly!&quot;;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>The \ method is not a ECMAScript (JavaScript) standard.</li>
<li>Some browsers do not allow spaces behind the \ character.</li>
</ul>
<p>The safest (but a little slower) way to break a long string is to use string addition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello&quot; + </div><div class="line">&quot;Dolly!&quot;;</div></pre></td></tr></table></figure>
<h3 id="String-Methods"><a href="#String-Methods" class="headerlink" title="String Methods"></a>String Methods</h3><p>The <code>indexOf()</code> method returns the index of (the position of) the <strong>first</strong> occurrence of a specified text in a string. The <code>lastIndexOf()</code> method returns the index of the <strong>last</strong> occurrence of a specified text in a string. Both the <code>indexOf()</code>, and the <code>lastIndexOf()</code> methods return <strong>-1</strong> if the text is not found.</p>
<p>The <code>search()</code> method searches a string for a specified value and returns the position of the match.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var str = &quot;Please locate where &apos;locate&apos; occurs!&quot;;</div><div class="line">var pos1 = str.indexOf(&quot;locate&quot;);</div><div class="line">var pos2 = str.lastIndexOf(&quot;locate&quot;);</div><div class="line">var pos3 = str.search(&quot;locate&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The two methods, <code>indexOf()</code> and <code>search()</code>, are equal. But the <code>search()</code> method can take much more powerful search values.</p>
<p><code>slice(start, end)</code> extracts a part of a string and returns the extracted part in a new string.</p>
<p><code>substring(start, end)</code> is similar to <code>slice()</code>. The difference is that <code>substring()</code> cannot accept negative indexes.</p>
<p><code>substr(start, end)</code> is similar to <code>slice()</code>. The difference is that the second parameter specifies the <strong>length</strong> of the extracted part.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var str = &quot;Apple, Banana, Kiwi&quot;;</div><div class="line">var res1 = str.slice(7,13);    //Banana</div><div class="line">var res2 = str.slice(-12,-6);    //Banana</div><div class="line">var res3 = str.slice(7);    //Banana, Kiwi</div><div class="line">var res4 = str.slice(-12);    //Banana, Kiwi</div><div class="line">var res5 = str.substring(7,13);    //Banana</div><div class="line">var res6 = str.substr(7,6);    //Banana</div></pre></td></tr></table></figure>
<p>The <code>replace()</code> method replaces a specified value with another value in a string. By default, the <code>replace()</code> function replaces only the first match. To replace all matches, use a regular expression with a g flag (for global match).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">str = &quot;Please visit Microsoft!&quot;;</div><div class="line">var n1 = str.replace(&quot;Microsoft&quot;,&quot;W3Schools&quot;);</div><div class="line">var n2 = str.replace(/Microsoft/g,&quot;W3Schools&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The <code>replace()</code> method does not change the string it is called on. It returns a new string.</p>
<p>A string is converted to upper case with <code>toUpperCase()</code>. A string is converted to lower case with <code>toLowerCase()</code>.</p>
<p><code>concat()</code> joins two or more strings. The <code>concat()</code> method can be used instead of the plus operator.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var text = &quot;Hello&quot; + &quot; &quot; + &quot;World!&quot;;</div><div class="line">var text = &quot;Hello&quot;.concat(&quot; &quot;,&quot;World!&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> All string methods return a new string. They don’t modify the original string. Formally said: Strings are <strong>immutable</strong>: Strings cannot be changed, only replaced.</p>
<p>The <code>charAt()</code> method returns the character at a specified index (position) in a string. The <code>charCodeAt()</code> method returns the unicode of the character at a specified index in a string.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var str = &quot;HELLO WORLD&quot;;</div><div class="line">str.charAt(0);            // returns H</div><div class="line">str.charCodeAt(0);         //	returns 72</div></pre></td></tr></table></figure>
<p>A string can be converted to an array with the <code>split()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var str = &quot;a,b,c,d,e,f&quot;;</div><div class="line">var arr = str.split(&quot;,&quot;);</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = arr[0];</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>If the separator is omitted, the returned array will contain the whole string in index [0].</li>
<li>If the separator is “”, the returned array will be an array of single characters.</li>
</ul>
<h3 id="Numbers"><a href="#Numbers" class="headerlink" title="Numbers"></a>Numbers</h3><p>JavaScript has only one type of number. Numbers can be written with, or without, decimals.</p>
<p>JavaScript numbers are always stored as double precision floating point numbers, following the international IEEE 754 standard. </p>
<p>This format stores numbers in <strong>64 bits</strong>, where the number (the fraction) is stored in bits 0 to 51, the exponent in bits 52 to 62, and the sign in bit 63:</p>
<table>
<thead>
<tr>
<th>Value (aka Fraction/Mantissa)</th>
<th>Exponent</th>
<th>Sign</th>
</tr>
</thead>
<tbody>
<tr>
<td>52 bits (0 - 51)</td>
<td>11 bits (52 - 62)</td>
<td>1 bit (63)</td>
</tr>
</tbody>
</table>
<p>Integers (numbers without a period or exponent notation) are considered accurate up to <strong>15 digits</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = 999999999999999;   // x will be 999999999999999</div><div class="line">var y = 9999999999999999;  // y will be 10000000000000000</div></pre></td></tr></table></figure>
<p>The maximum number of decimals is 17, but floating point arithmetic is not always 100% accurate. To solve the problem above, it helps to multiply and divide.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x1 = 0.2 + 0.1;         // x1 will be 0.30000000000000004</div><div class="line">var x2 = (0.2 * 10 + 0.1 * 10) / 10;       // x2 will be 0.3</div></pre></td></tr></table></figure>
<p>By default, Javascript displays numbers as base 10 decimals. But you can use the toString() method to output numbers as base 16 (hex), base 8 (octal), or base 2 (binary).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var myNumber = 128;</div><div class="line">myNumber.toString(16);     // returns 80</div><div class="line">myNumber.toString(8);      // returns 200</div><div class="line">myNumber.toString(2);      // returns 10000000</div></pre></td></tr></table></figure>
<p><strong>Infinity</strong> (or <strong>-Infinity</strong>) is the value JavaScript will return if you calculate a number outside the largest possible number.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x =  2 / 0;          // x will be Infinity</div><div class="line">var y = -2 / 0;          // y will be -Infinity</div><div class="line">typeof Infinity;        // returns &quot;number&quot;</div></pre></td></tr></table></figure>
<p>NaN is a JavaScript reserved word indicating that a number is not a legal number.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x1 = 100 / &quot;Apple&quot;;  // x1 will be NaN (Not a Number)</div><div class="line">var x2 = 100 / &quot;10&quot;;     // x2 will be 10</div><div class="line">isNaN(x1);               // returns true because x1 is Not a Number</div><div class="line">typeof NaN;             // returns &quot;number&quot;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = NaN;</div><div class="line">var y = 5;</div><div class="line">var z = x + y;         // z will be NaN</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = NaN;</div><div class="line">var y = &quot;5&quot;;</div><div class="line">var z = x + y;         // z will be NaN5</div></pre></td></tr></table></figure>
<p>Normally JavaScript numbers are primitive values created from literals: <code>var x = 123</code></p>
<p>But numbers can also be defined as objects with the keyword new: <code>var y = new Number(123)</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = 123;    // typeof x returns number</div><div class="line">var y = new Number(123);    // typeof y returns object</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = 500;</div><div class="line">var y = new Number(500);    // (x == y) is true because x and y have equal values</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = 500;</div><div class="line">var y = new Number(500);    // (x === y) is false because x and y have different types</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = new Number(500);</div><div class="line">var y = new Number(500);    // (x == y) is false because objects cannot be compared</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>Do not create Number objects. It slows down execution speed.</li>
<li>The new keyword complicates the code. This can produce some unexpected results.</li>
<li>JavaScript objects cannot be compared.</li>
</ul>
<h3 id="Number-Methods"><a href="#Number-Methods" class="headerlink" title="Number Methods"></a>Number Methods</h3><p>With JavaScript, methods and properties are also available to primitive values, because JavaScript treats primitive values as objects when executing methods and properties.</p>
<p><code>toString()</code> returns a number as a string. All number methods can be used on any type of numbers (<strong>literals</strong>, <strong>variables</strong>, or <strong>expressions</strong>).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x = 123;</div><div class="line">x.toString();            // returns 123 from variable x</div><div class="line">(123).toString();        // returns 123 from literal 123</div><div class="line">(100 + 23).toString();   // returns 123 from expression 100 + 23</div></pre></td></tr></table></figure>
<p><code>toExponential()</code> returns a string, with a number <strong>rounded</strong> and written using exponential notation. A parameter defines the number of characters behind the decimal poin.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = 9.656;</div><div class="line">x.toExponential(2);     // returns 9.66e+0</div><div class="line">x.toExponential(4);     // returns 9.6560e+0</div></pre></td></tr></table></figure>
<p><code>toFixed()</code> returns a string, with the number written with a specified number of decimals.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x = 9.656;</div><div class="line">x.toFixed(0);           // returns 10</div><div class="line">x.toFixed(2);           // returns 9.66</div><div class="line">x.toFixed(4);           // returns 9.6560</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> toFixed(2) is perfect for working with money.</p>
<p><code>toPrecision()</code> returns a string, with a number written with a specified length.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x = 9.656;</div><div class="line">x.toPrecision();        // returns 9.656</div><div class="line">x.toPrecision(2);       // returns 9.7</div><div class="line">x.toPrecision(4);       // returns 9.656</div></pre></td></tr></table></figure>
<p><code>valueOf()</code> returns a number as a number. It is used internally in JavaScript to convert Number objects to primitive values. There is no reason to use it in your code.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x = 123;</div><div class="line">x.valueOf();            // returns 123 from variable x</div><div class="line">(123).valueOf();        // returns 123 from literal 123</div><div class="line">(100 + 23).valueOf();   // returns 123 from expression 100 + 23</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> All JavaScript data types have a valueOf() and a toString() method.</p>
<p>JavaScript <strong>global methods</strong> can be used on all JavaScript data types. These are the most relevant methods, when working with numbers:</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Number()</code></td>
<td>Returns a number, converted from its argument.</td>
</tr>
<tr>
<td><code>parseFloat()</code></td>
<td>Parses its argument and returns a floating point number</td>
</tr>
<tr>
<td><code>parseInt()</code></td>
<td>Parses its argument and returns an integer</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">x = true;</div><div class="line">Number(x);        // returns 1</div><div class="line">x = false;     </div><div class="line">Number(x);        // returns 0</div><div class="line">x = new Date();</div><div class="line">Number(x);        // returns 1404568027739</div><div class="line">x = &quot;10&quot;</div><div class="line">Number(x);        // returns 10</div><div class="line">x = &quot;10 20&quot;</div><div class="line">Number(x);        // returns NaN</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Used on Date(), the Number() method returns the number of milliseconds since 1.1.1970.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">parseFloat(&quot;10&quot;);        // returns 10</div><div class="line">parseFloat(&quot;10.33&quot;);     // returns 10.33</div><div class="line">parseFloat(&quot;10 20 30&quot;);  // returns 10</div><div class="line">parseFloat(&quot;10 years&quot;);  // returns 10</div><div class="line">parseFloat(&quot;years 10&quot;);  // returns NaN</div><div class="line"></div><div class="line">parseInt(&quot;10&quot;);         // returns 10</div><div class="line">parseInt(&quot;10.33&quot;);      // returns 10</div><div class="line">parseInt(&quot;10 20 30&quot;);   // returns 10</div><div class="line">parseInt(&quot;10 years&quot;);   // returns 10</div><div class="line">parseInt(&quot;years 10&quot;);   // returns NaN</div></pre></td></tr></table></figure>
<p><strong>Number properties</strong> belongs to the JavaScript’s number object wrapper called <strong>Number</strong>. These properties can only be accessed as <code>Number.MAX_VALUE</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var x = Number.MAX_VALUE;    // x will be 1.7976931348623157e+308</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>MAX_VALUE</td>
<td>Returns the largest number possible in JavaScript</td>
</tr>
<tr>
<td>MIN_VALUE</td>
<td>Returns the smallest number possible in JavaScript</td>
</tr>
<tr>
<td>NEGATIVE_INFINITY</td>
<td>Represents negative infinity (returned on overflow)</td>
</tr>
<tr>
<td>NaN</td>
<td>Represents a “Not-a-Number” value</td>
</tr>
<tr>
<td>POSITIVE_INFINITY</td>
<td>Represents infinity (returned on overflow)</td>
</tr>
</tbody>
</table>
<h3 id="Math-Object"><a href="#Math-Object" class="headerlink" title="Math Object"></a>Math Object</h3><p>Unlike other global objects, the Math object has no constructor. Methods and properties are static. All methods and properties (constants) can be used <strong>without creating a Math object first</strong>.</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>abs(x)</code></td>
<td>Returns the absolute value of x</td>
</tr>
<tr>
<td><code>acos(x)</code></td>
<td>Returns the arccosine of x, in radians</td>
</tr>
<tr>
<td><code>asin(x)</code></td>
<td>Returns the arcsine of x, in radians</td>
</tr>
<tr>
<td><code>atan(x)</code></td>
<td>Returns the arctangent of x as a numeric value between -PI/2 and PI/2 radians</td>
</tr>
<tr>
<td><code>atan2(y,x)</code></td>
<td>Returns the arctangent of the quotient of its arguments</td>
</tr>
<tr>
<td><code>sin(x)</code></td>
<td>Returns the sine of x (x is in radians)</td>
</tr>
<tr>
<td><code>cos(x)</code></td>
<td>Returns the cosine of x (x is in radians)</td>
</tr>
<tr>
<td><code>tan(x)</code></td>
<td>Returns the tangent of an angle</td>
</tr>
<tr>
<td><code>round(x)</code></td>
<td>Returns the value of x rounded to its nearest integer</td>
</tr>
<tr>
<td><code>ceil(x)</code></td>
<td>Returns the value of x rounded up to its nearest integer</td>
</tr>
<tr>
<td><code>floor(x)</code></td>
<td>Returns the value of x rounded down to its nearest integer</td>
</tr>
<tr>
<td><code>max(x,y,z,...,n)</code></td>
<td>Returns the number with the highest value</td>
</tr>
<tr>
<td><code>min(x,y,z,...,n)</code></td>
<td>Returns the number with the lowest value</td>
</tr>
<tr>
<td><code>pow(x,y)</code></td>
<td>Returns the value of x to the power of y</td>
</tr>
<tr>
<td><code>exp(x)</code></td>
<td>Returns the value of Ex</td>
</tr>
<tr>
<td><code>sqrt(x)</code></td>
<td>Returns the square root of x</td>
</tr>
<tr>
<td><code>log(x)</code></td>
<td>Returns the natural logarithm (base E) of x</td>
</tr>
<tr>
<td><code>random()</code></td>
<td>Returns a random number between 0 and 1</td>
</tr>
</tbody>
</table>
<p>JavaScript provides 8 mathematical constants that can be accessed with the Math object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Math.E        // returns Euler&apos;s number</div><div class="line">Math.PI       // returns PI</div><div class="line">Math.SQRT2    // returns the square root of 2</div><div class="line">Math.SQRT1_2  // returns the square root of 1/2</div><div class="line">Math.LN2      // returns the natural logarithm of 2</div><div class="line">Math.LN10     // returns the natural logarithm of 10</div><div class="line">Math.LOG2E    // returns base 2 logarithm of E</div><div class="line">Math.LOG10E   // returns base 10 logarithm of E</div></pre></td></tr></table></figure>
<h3 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h3><p><code>Math.random()</code> returns a random number between <strong>0 (inclusive)</strong>,  and <strong>1 (exclusive)</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Math.random();              // returns a random number lower than 1</div></pre></td></tr></table></figure>
<p><code>Math.random()</code> used with <code>Math.floor()</code> can be used to return random integers.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Math.floor(Math.random() * 11);      // returns a number between 0 and 10</div><div class="line">Math.floor(Math.random() * 101);     // returns a number between 0 and 100</div><div class="line">Math.floor(Math.random() * 10) + 1;  // returns a number between 1 and 10</div><div class="line">Math.floor(Math.random() * 100) + 1; // returns a number between 1 and 100</div></pre></td></tr></table></figure>
<p>This JavaScript function always returns a random number between <strong>min (included)</strong> and <strong>max (excluded)</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function getRndInteger(min, max) &#123;</div><div class="line">    return Math.floor(Math.random() * (max - min) ) + min;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>This JavaScript function always returns a random number between min and max (<strong>both included</strong>).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function getRndInteger(min, max) &#123;</div><div class="line">    return Math.floor(Math.random() * (max - min + 1) ) + min;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Thunderbird 的使用]]></title>
      <url>http://rrkaige.com/2016/09/25/Thunderbird%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p><a href="https://www.mozilla.org/zh-CN/thunderbird/" target="_blank" rel="external">Thunderbird</a>，开源软件，一款电子邮件应用程序，功能强大。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160925-myblog58.png" alt="Thunderbird"></p>
<a id="more"></a>
<h3 id="账户配置"><a href="# 账户配置" class="headerlink" title="账户配置"></a>账户配置 </h3><p> 安装好后，<a href="https://support.mozilla.org/zh-CN/kb/%E8%87%AA%E5%8A%A8%E8%B4%A6%E6%88%B7%E9%85%8D%E7%BD%AE" target="_blank" rel="external">添加邮箱账户</a>。</p>
<ul>
<li>Gmail 输入账号密码就可以直接自动配置；</li>
<li>网易邮箱需要在 <code>POP3/SMTP/IMAP 设置</code> 中开启<code>IMAP/SMTP 服务</code>，单独设置密码；</li>
<li>QQ 邮箱也需要在设置中开启<code>IMAP/SMTP 服务</code>，获得授权码作为密码。</li>
</ul>
<h3 id="更改语言"><a href="# 更改语言" class="headerlink" title="更改语言"></a>更改语言 </h3><p> 英文版汉化，和 <a href="https://support.mozilla.org/zh-CN/kb/%E5%A6%82%E4%BD%95%E5%9C%A8Thunderbird%E4%B8%AD%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E5%AD%97%E5%85%B8" target="_blank" rel="external"> 添加语言字典 </a> 不同。</p>
<ul>
<li>在附加组件中安装中文语言包，<code>Thunderbird-&gt;Tools-&gt;Options-&gt;Composition-&gt;Spelling-&gt;Download More Dictionaries</code>；</li>
<li>打开 <code>Thunderbird-&gt;Tools-&gt;Options-&gt;Advanced-&gt;General-&gt;Config Editor</code>，将<code>general.useragent.locale</code> 设置为<code>zh-CN</code>；</li>
<li>重启 Thunderbird。</li>
</ul>
<p>如需改回英文界面，将 <code>general.useragent.locale</code> 设置为<code>en-US</code>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之二]]></title>
      <url>http://rrkaige.com/2016/09/24/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p> 继续学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160924-myblog57.png" alt="JavaScript CSS HTML"></p>
<a id="more"></a>
<h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>JavaScript variables are containers for storing data values.</p>
<p>All JavaScript variables must be identified with <strong>unique names</strong>. These unique names are called <strong>identifiers</strong>.</p>
<p>Identifiers can be short names (like x and y) or more descriptive names (age, sum, totalVolume). The general rules for constructing names for variables (unique identifiers) are:</p>
<ul>
<li>Names can contain letters, digits, underscores, and dollar signs.</li>
<li>Names must begin with a letter</li>
<li>Names can also begin with $ and _ (but we will not use it in this tutorial)</li>
<li>Names are case sensitive (y and Y are different variables)</li>
<li>Reserved words (like JavaScript keywords) cannot be used as names</li>
</ul>
<p><strong>Note:</strong></p>
<ul>
<li>JavaScript identifiers are <strong>case-sensitive</strong>.</li>
<li>It’s a good programming practice to declare all variables at the beginning of a script.</li>
<li>A variable declared without a value will have the value <strong>undefined</strong>.</li>
<li>If you put a number in quotes, the rest of the numbers will be treated as strings, and concatenated.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var person = &quot;John Doe&quot;,</div><div class="line">price = 200;</div><div class="line"></div><div class="line">var carName;    //undefined</div><div class="line"></div><div class="line">var x = &quot;5&quot; + 2 + 3;    //523</div></pre></td></tr></table></figure>
<h3 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h3><table>
<thead>
<tr>
<th>Arithmetic Operator</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>Addition</td>
</tr>
<tr>
<td>-</td>
<td>Subtraction</td>
</tr>
<tr>
<td>*</td>
<td>Multiplication</td>
</tr>
<tr>
<td>/</td>
<td>Division</td>
</tr>
<tr>
<td>%</td>
<td>Modulus</td>
</tr>
<tr>
<td>++</td>
<td>Increment</td>
</tr>
<tr>
<td>–</td>
<td>Decrement</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Assignment Operator</th>
<th>Example</th>
<th>Same As</th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td>x = y</td>
<td>x = y</td>
</tr>
<tr>
<td>+=</td>
<td>x += y</td>
<td>x = x + y</td>
</tr>
<tr>
<td>-=</td>
<td>x -= y</td>
<td>x = x - y</td>
</tr>
<tr>
<td>*=</td>
<td>x *= y</td>
<td>x = x * y</td>
</tr>
<tr>
<td>/=</td>
<td>x /= y</td>
<td>x = x / y</td>
</tr>
<tr>
<td>%=</td>
<td>x %= y</td>
<td>x = x % y</td>
</tr>
</tbody>
</table>
<p>The <code>+</code> operator can also be used to add (concatenate) strings. When used on strings, the <code>+</code> operator is called the concatenation operator.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">txt1 = &quot;John&quot;;</div><div class="line">txt2 = &quot;Doe&quot;;</div><div class="line">txt3 = txt1 + &quot; &quot; + txt2;</div><div class="line"></div><div class="line">txt1 = &quot;What a very &quot;;</div><div class="line">txt1 += &quot;nice day&quot;;</div><div class="line"></div><div class="line">x = 5 + 5;</div><div class="line">y = &quot;5&quot; + 5;</div><div class="line">z = &quot;Hello&quot; + 5;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If you add a number and a string, the result will be a string!</p>
<h3 id="Data-Types"><a href="#Data-Types" class="headerlink" title="Data Types"></a>Data Types</h3><p>JavaScript variables can hold many data types: <strong>numbers</strong>, <strong>strings</strong>, <strong>arrays</strong>, <strong>objects</strong> and more.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var length = 16;                               // Number</div><div class="line">var lastName = &quot;Johnson&quot;;                      // String</div><div class="line">var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];           // Array</div><div class="line">var x = &#123;firstName:&quot;John&quot;, lastName:&quot;Doe&quot;&#125;;    // Object</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = 16 + 4 + &quot;Volvo&quot;;    //20Volvo</div><div class="line">var x = &quot;Volvo&quot; + 16 + 4;    //Volvo164</div></pre></td></tr></table></figure>
<p>JavaScript has <strong>dynamic types</strong>. This means that the same variable can be used as different types.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x;               // Now x is undefined</div><div class="line">var x = 5;           // Now x is a Number</div><div class="line">var x = &quot;John&quot;;      // Now x is a String</div></pre></td></tr></table></figure>
<p>You can use quotes inside a string, as long as they don’t match the quotes surrounding the string.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var answer = &quot;It&apos;s alright&quot;;             // Single quote inside double quotes</div><div class="line">var answer = &quot;He is called &apos;Johnny&apos;&quot;;    // Single quotes inside double quotes</div><div class="line">var answer = &apos;He is called &quot;Johnny&quot;&apos;;    // Double quotes inside single quotes</div></pre></td></tr></table></figure>
<p>Extra large or extra small numbers can be written with scientific (exponential) notation.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var y = 123e5;      // 12300000</div><div class="line">var z = 123e-5;     // 0.00123</div></pre></td></tr></table></figure>
<p>Booleans can only have two values: <strong>true</strong> or <strong>false</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = true;</div><div class="line">var y = false;</div></pre></td></tr></table></figure>
<p>JavaScript arrays are written with square brackets. Array items are separated by commas. Array indexes are zero-based, which means the first item is [0], second is [1], and so on.</p>
<p>JavaScript objects are written with curly braces. Object properties are written as <code>name:value</code> pairs, separated by commas.</p>
<p>You can use the JavaScript <strong>typeof</strong> operator to find the type of a JavaScript variable.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">typeof &quot;John&quot;                // Returns &quot;string&quot; </div><div class="line">typeof 3.14                  // Returns &quot;number&quot;</div><div class="line">typeof false                 // Returns &quot;boolean&quot;</div><div class="line">typeof [1,2,3,4]             // Returns &quot;object&quot; (not &quot;array&quot;, see note below)</div><div class="line">typeof &#123;name:&apos;John&apos;, age:34&#125; // Returns &quot;object&quot;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The typeof operator returns “object” for arrays because in JavaScript arrays are objects.</p>
<p>In JavaScript, a variable without a value, has the value <strong>undefined</strong>. The typeof is also <strong>undefined</strong>.</p>
<p>Any variable can be emptied, by setting the value to <strong>undefined</strong>. The type will also be <strong>undefined</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var person;                  // Value is undefined, type is undefined</div><div class="line">person = undefined;          // Value is undefined, type is undefined</div></pre></td></tr></table></figure>
<p>An empty value has nothing to do with undefined. An empty string variable has <strong>both a value and a type</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var car = &quot;&quot;;                // The value is &quot;&quot;, the typeof is &quot;string&quot;</div></pre></td></tr></table></figure>
<p>In JavaScript null is “nothing”. It is supposed to be something that doesn’t exist. Unfortunately, in JavaScript, the data type of null is an <strong>object</strong>.</p>
<p><strong>Note:</strong> You can consider it a bug in JavaScript that typeof null is an object. It should be null.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var person = null;           // Value is null, but type is still an object</div></pre></td></tr></table></figure>
<p>Difference Between Undefined and Null</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">typeof undefined             // undefined</div><div class="line">typeof null                  // object</div><div class="line">null === undefined           // false</div><div class="line">null == undefined            // true</div></pre></td></tr></table></figure>
<h3 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h3><p>A JavaScript function is defined with the <strong>function</strong> keyword, followed by a <strong>name</strong>, followed by parentheses <strong>()</strong>. The code to be executed, by the function, is placed inside curly brackets: <strong>{}</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function name(parameter1, parameter2, parameter3) &#123;</div><div class="line">    code to be executed</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Function <strong>parameters</strong> are the <strong>names</strong> listed in the function definition.</li>
<li>Function <strong>arguments</strong> are the real <strong>values</strong> received by the function when it is invoked.</li>
</ul>
<p>The code inside the function will execute when “something” <strong>invokes</strong> (calls) the function:</p>
<ul>
<li>When an event occurs (when a user clicks a button)</li>
<li>When it is invoked (called) from JavaScript code</li>
<li>Automatically (self invoked)</li>
</ul>
<p>When JavaScript reaches a <strong>return statement</strong>, the function will stop executing. Functions often compute a <strong>return value</strong>. The return value is “returned” back to the “caller”.</p>
<h3 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h3><p>The values are written as <code>name:value</code> pairs (name and value separated by a colon). The <code>name:values</code> pairs (in JavaScript objects) are called <strong>properties</strong>.</p>
<p>Methods are <strong>actions</strong> that can be performed on objects. Methods are stored in properties as <strong>function definitions</strong>.</p>
<p><strong>Note:</strong> JavaScript objects are containers for named values called properties or methods.</p>
<p>You can access object properties in two ways.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">objectName.propertyName</div><div class="line">objectName[&quot;propertyName&quot;]</div></pre></td></tr></table></figure>
<p>You access an object method with the following syntax.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">objectName.methodName()</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> A method is actually a function definition stored as a property value.</p>
<p>When a JavaScript variable is declared with the keyword “<strong>new</strong>“, the variable is created as an <strong>object</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = new String();        // Declares x as a String object</div><div class="line">var y = new Number();        // Declares y as a Number object</div><div class="line">var z = new Boolean();       //	Declares z as a Boolean object</div></pre></td></tr></table></figure>
<p>Avoid String, Number, and Boolean objects. They complicate your code and slow down execution speed.</p>
<h3 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h3><p>In JavaScript, scope is the <strong>set of variables, objects, and functions you have access to</strong>.</p>
<p>JavaScript has function scope: The scope changes inside functions.</p>
<p>Variables declared within a JavaScript function, become <strong>LOCAL</strong> to the function. Local variables have <strong>local scope</strong>: They can only be accessed within the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// code here can not use carName</div><div class="line"></div><div class="line">function myFunction() &#123;</div><div class="line">    var carName = &quot;Volvo&quot;;</div><div class="line"></div><div class="line">    // code here can use carName</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>Since local variables are only recognized inside their functions, variables with the same name can be used in different functions.</li>
<li>Local variables are created when a function starts, and deleted when the function is completed.</li>
</ul>
<p>A variable declared outside a function, becomes <strong>GLOBAL</strong>. A global variable has <strong>global scope</strong>: All scripts and functions on a web page can access it.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var carName = &quot; Volvo&quot;;</div><div class="line"></div><div class="line">// code here can use carName</div><div class="line"></div><div class="line">function myFunction() &#123;</div><div class="line"></div><div class="line">    // code here can use carName </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Function arguments (parameters) work as local variables inside functions.</p>
<p>If you assign a value to a variable that has not been declared, it will automatically become a <strong>GLOBAL</strong> variable.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">myFunction();</div><div class="line"></div><div class="line">// code here can use carName </div><div class="line"></div><div class="line">function myFunction() &#123;</div><div class="line">    carName = &quot;Volvo&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Do NOT create global variables unless you intend to.</p>
<p>With JavaScript, the global scope is the complete JavaScript environment. In HTML, the global scope is the <strong>window</strong> object. All global variables belong to the window object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var carName = &quot;Volvo&quot;;</div><div class="line"></div><div class="line">// code here can use window.carName</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>Your global variables (or functions) can overwrite window variables (or functions).</li>
<li>Any function, including the window object, can overwrite your global variables and functions.</li>
</ul>
<p>The lifetime of a JavaScript variable starts when it is declared. Local variables are deleted when the function is completed. Global variables are deleted when you close the page.</p>
<h3 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h3><p>An HTML event can be something the browser does, or something a user does. Here are some examples of HTML events:</p>
<ul>
<li>An HTML web page has finished loading</li>
<li>An HTML input field was changed</li>
<li>An HTML button was clicked</li>
</ul>
<p>HTML allows event handler attributes, <strong>with JavaScript code</strong>, to be added to HTML elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;some-HTML-element some-event=&apos;some JavaScript&apos;&gt;</div><div class="line">&lt;some-HTML-element some-event=&quot;some JavaScript&quot;&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&apos;document.getElementById(&quot;demo&quot;).innerHTML=Date()&apos;&gt;The time is?&lt;/button&gt;</div><div class="line">&lt;button onclick=&quot;this.innerHTML=Date()&quot;&gt;The time is?&lt;/button&gt;</div></pre></td></tr></table></figure>
<p>JavaScript code is often several lines long. It is more common to see event attributes calling functions.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&quot;displayDate()&quot;&gt;The time is?&lt;/button&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>onchange</td>
<td>An HTML element has been changed</td>
</tr>
<tr>
<td>onclick</td>
<td>The user clicks an HTML element</td>
</tr>
<tr>
<td>onmouseover</td>
<td>The user moves the mouse over an HTML element</td>
</tr>
<tr>
<td>onmouseout</td>
<td>The user moves the mouse away from an HTML element</td>
</tr>
<tr>
<td>onkeydown</td>
<td>The user pushes a keyboard key</td>
</tr>
<tr>
<td>onload</td>
<td>The browser has finished loading the page</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Inside Out，头脑特工队]]></title>
      <url>http://rrkaige.com/2016/09/23/Inside-Out%EF%BC%8C%E5%A4%B4%E8%84%91%E7%89%B9%E5%B7%A5%E9%98%9F/</url>
      <content type="html"><![CDATA[<p>Pixar 和 Disney 的想象力，似乎永远超出想象。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160923-myblog56.jpg" alt="Inside Out"></p>
<a id="more"></a>
<p>Riley，十一岁小姑娘，举家迁居旧金山的不适；Joy，Sadness，Anger，Disgust，Fear，五种不同情绪，由谁主导的纷争。Joy 和 Sadness 迷失，在 Bing Bang 帮助下返回，相互合作，让 Riley 重拾原本快乐回忆。一个简单老套的故事，却让人大呼过瘾。</p>
<p> 越是简单，越见真功夫。简单的内涵，套上新颖的外衣，摇身一变，大不相同。所谓新瓶装旧酒，不外如是。如此想来，几乎所有作品，褪去华丽包装，剩下的多是早已耳熟能详的观点。主流价值观，看不见摸不着却又无所不在，影响着所有的文艺创作。好莱坞，传递出的正是美国梦的价值。</p>
<p> 电影好看，背后是几十年的积累。叫好卖座，也就不言而喻了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Algorithms4 学习笔记之二]]></title>
      <url>http://rrkaige.com/2016/09/20/Algorithms4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p>并查集（union-find）算法整理，参考是 Sedgewick &amp; Wayne 的 <a href="http://algs4.cs.princeton.edu/15uf/" target="_blank" rel="external">Algorithms, 4th Edition</a>，白色咖啡<a href="http://blog.csdn.net/caipeichao2/article/details/27850041" target="_blank" rel="external"> 博客 </a>，<a href="https://github.com/kevin-wayne/algs4" target="_blank" rel="external">GitHub</a> 上有代码。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160920-myblog53.jpg" alt="Algorithm"></p>
<a id="more"></a>
<h3 id="union-find"><a href="#union-find" class="headerlink" title="union-find"></a>union-find</h3><p>union-find 的实现</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">public class UF &#123;</div><div class="line">    private int[] id;    // 分量 id</div><div class="line">    private int count;    // 分量数量</div><div class="line">    public UF(int N) &#123;    // 初始化分量数组</div><div class="line">        count = N;</div><div class="line">        id = new int[N];</div><div class="line">        for(int i = 0; i &lt; N; i++) &#123;</div><div class="line">            id[i] = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    public int count() &#123;</div><div class="line">        return count;</div><div class="line">    &#125;</div><div class="line">    public boolean connected(int p, int q) &#123;</div><div class="line">        return find(p) == find(q);</div><div class="line">    &#125;</div><div class="line">    public int find(int p)</div><div class="line">    public union(int p, int q)</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        int N = StdIn.readInt();    // 读取触点数量</div><div class="line">        UF uf = new UF(N);    // 初始化 N 个分量</div><div class="line">        while(!StdIn.isEmpty()) &#123;</div><div class="line">            int p = StdIn.readInt();</div><div class="line">            int q = StdIn.readInt();    // 读取整数对</div><div class="line">            if(uf.connected(p, q)) &#123;    // 如果已联通则忽略</div><div class="line">                continue;</div><div class="line">            &#125;</div><div class="line">            uf.union(p, q);    // 归并分量</div><div class="line">            StdOut.println(p + &quot; &quot; + q);    // 打印连接</div><div class="line">        &#125;</div><div class="line">        StdOut.println(uf.count() + &quot;components&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Number of <strong>array accesses</strong>(for read and write)</p>
<table>
<thead>
<tr>
<th>algorithm</th>
<th>initialize</th>
<th>union</th>
<th>find</th>
</tr>
</thead>
<tbody>
<tr>
<td>quick-find</td>
<td>N</td>
<td>N</td>
<td>1</td>
</tr>
<tr>
<td>quick-union</td>
<td>N</td>
<td>N</td>
<td>N</td>
</tr>
<tr>
<td>weighted QU</td>
<td>N</td>
<td>lgN</td>
<td>lgN</td>
</tr>
</tbody>
</table>
<h3 id="quick-find"><a href="#quick-find" class="headerlink" title="quick-find"></a>quick-find</h3><p>快速查找</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">public int find(int p) &#123;</div><div class="line">    return id[p];</div><div class="line">&#125;</div><div class="line">public void union(int p, int q) &#123;    //p 和 q 归并到相同分量中</div><div class="line">    int pID = find(p);</div><div class="line">    int qID = find(q);</div><div class="line">    if(pID == qID) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    for(int i = 0; i &lt; id.length; i++) &#123;    // 将 P 的分量重命名为 q 的名称</div><div class="line">        if(id[i] == pID) &#123;</div><div class="line">            id[i] = qID;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    count--;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>查找操作的复杂度是 1，开销很小。</p>
<p>合并一次的复杂度是 N，如果需要合并 N 次，那么整个程序的复杂度就是 N^2。这样的复杂度不适合应用于规模较大的地方。</p>
<h3 id="quick-union"><a href="#quick-union" class="headerlink" title="quick-union"></a>quick-union</h3><p>快速合并</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public int find(int p) &#123;    // 找出分量名称</div><div class="line">    while(p != id[p]) &#123;</div><div class="line">        p = id[p];</div><div class="line">    &#125;</div><div class="line">    return p;</div><div class="line">&#125;</div><div class="line">public void union(int p, int q) &#123;    // 将 p 和 q 的根节点统一</div><div class="line">    int pRoot = find[p];</div><div class="line">    int qRoot = find[q];</div><div class="line">    if(pRoot == qRoot) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    id[pRoot] = qRoot;</div><div class="line">    count--;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>虽然性能方面提升了很多，但是仍然不够，因为最坏的情况下，查找操作的复杂度将达到 N。</p>
<h3 id="weighted-QU"><a href="#weighted-QU" class="headerlink" title="weighted QU"></a>weighted QU</h3><p>加权快速合并</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">public class WeightedQuickUnionUF &#123;</div><div class="line">    private int[] id;</div><div class="line">    private int[] sz;    // 各个根节点对应的分量的大小</div><div class="line">    private int count;</div><div class="line">    public WeightedQuickUnionUF(int N) &#123;</div><div class="line">        count = N;</div><div class="line">        id = new int[N];</div><div class="line">        for(int i = 0; i &lt; N; i++) &#123;</div><div class="line">            id[i] = i;</div><div class="line">        &#125;</div><div class="line">        sz = new int[N];</div><div class="line">        for(int i = 0; i &lt; N; i++) &#123;</div><div class="line">            sz[i] = 1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    public int count() &#123;</div><div class="line">        return count;</div><div class="line">    &#125;</div><div class="line">    public boolean connected(int p, int q) &#123;</div><div class="line">        return find(p) == find(q);</div><div class="line">    &#125;</div><div class="line">    public int find(int p) &#123;</div><div class="line">        while(p != id[p]) &#123;</div><div class="line">            p = id[p];</div><div class="line">        &#125;</div><div class="line">        return p;</div><div class="line">    &#125;</div><div class="line">    public void union(int p, int q) &#123;</div><div class="line">        int i = find(p);</div><div class="line">        int j = find(q);</div><div class="line">        if(i == j) &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        if(size[i] &lt; size[j]) &#123;    // 将小树根节点连接到大树根节点</div><div class="line">            id[i] = j;</div><div class="line">            sz[j] += sz[i];</div><div class="line">        &#125; else &#123;</div><div class="line">            id[j] = i;</div><div class="line">            sz[i] += sz[j];</div><div class="line">        &#125;</div><div class="line">        count--;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>查询操作最坏情况的复杂度为<code>lgN</code>，合并操作最坏的复杂度为<code>lgN</code>。</p>
<h3 id="weighted-QU-path-compression"><a href="#weighted-QU-path-compression" class="headerlink" title="weighted QU + path compression"></a>weighted QU + path compression</h3><p>带路径压缩的加权快速合并</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public int find(int p) &#123;</div><div class="line">    while(p != id[p]) &#123;</div><div class="line">        id[p] = id[id[p]];    // 路径压缩</div><div class="line">        p = id[p];</div><div class="line">    &#125;</div><div class="line">    return p;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用路径压缩之后查询操作的复杂度是 <code>lg*N</code>。<code>lg*</code> 是另外一种函数，表示的是 <code>lgN</code> 几次才能达到 1。比如<code>lg*16</code>，需要三次<code>lg</code>，<code>lg16=4</code>，<code>lg4=2</code>，<code>lg2=1</code>，所以<code>lg*16=3</code>。</p>
<p>理论上来说查询操作的复杂度不是 1，但是实际应用中，这种算法的复杂度就是 1。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 学习笔记之一]]></title>
      <url>http://rrkaige.com/2016/09/19/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p> 开始学习 JavaScript，教程来自 <a href="http://www.w3schools.com/js/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160919-myblog52.jpg" alt="JavaScript"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>JavaScript and Java are completely different languages, both in concept and design.</p>
<p>JavaScript was invented by Brendan Eich in 1995, and became an ECMA standard in 1997.</p>
<p><strong>ECMA-262</strong> is the official name. <strong>ECMAScript 6</strong> (released in June 2015) is the latest JavaScript version.</p>
<p>JavaScript can be placed in the <code>&lt;body&gt;</code> and the <code>&lt;head&gt;</code> sections of an HTML page.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = &quot;Paragraph changed.&quot;;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt; </div><div class="line">&lt;script&gt;</div><div class="line">function myFunction() &#123;</div><div class="line">   document.getElementById(&quot;demo&quot;).innerHTML = &quot;Paragraph changed.&quot;;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>Keeping all code in one place, is always a good habit.</li>
<li>It is a good idea to place scripts at the bottom of the <code>&lt;body&gt;</code> element. This can improve page load, because script compilation can slow down the display.</li>
</ul>
<p>Scripts can also be placed in <strong>external files</strong>. You can place an external script reference in <code>&lt;head&gt;</code> or <code>&lt;body&gt;</code> as you like.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function myFunction() &#123;</div><div class="line">   document.getElementById(&quot;demo&quot;).innerHTML = &quot;Paragraph changed.&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;script src=&quot;myScript.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> External scripts cannot contain <code>&lt;script&gt;</code> tags.</p>
<p>Placing JavaScripts in external files has some advantages:</p>
<ul>
<li>It separates HTML and code</li>
<li>It makes HTML and JavaScript easier to read and maintain</li>
<li>Cached JavaScript files can speed up page loads</li>
</ul>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>JavaScript does <strong>NOT</strong> have any built-in print or display functions. It can “display” data in different ways:</p>
<ul>
<li>Writing into an alert box, using <code>window.alert()</code>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">window.alert(5 + 6);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Writing into the HTML output using <code>document.write()</code>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">document.write(5 + 6);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Using <code>document.write()</code> after an HTML document is fully loaded, will <strong>delete all existing HTML</strong>. The document.write() method should only be used for <strong>testing</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;button onclick=&quot;document.write(5 + 6)&quot;&gt;Try it&lt;/button&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Writing into an HTML element, using <code>innerHTML</code>.</li>
</ul>
<p>The <strong>id</strong> attribute defines the HTML element. The <strong>innerHTML</strong> property defines the HTML content.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = 5 + 6;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> To “display data” in HTML, (in most cases) you will set the value of an <code>innerHTML</code> property.</p>
<ul>
<li>Writing into the browser console, using <code>console.log()</code>.</li>
</ul>
<p>Activate the browser console with <code>F12</code>, and select “Console” in the menu.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">console.log(5 + 6);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>A <strong>computer program</strong> is a list of “instructions” to be “executed” by the computer. In a programming language, these program instructions are called <strong>statements</strong>.</p>
<p>JavaScript is a <strong>programming language</strong>. JavaScript statements are separated by <strong>semicolons</strong>. JavaScript statements are composed of: <strong>Values</strong>, <strong>Operators</strong>, <strong>Expressions</strong>, <strong>Keyword</strong>s, and <strong>Comments</strong>.</p>
<p>In HTML, JavaScript programs can be executed by the web browser.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x = 5;</div><div class="line">var y = 6;</div><div class="line">var z = x + y;</div></pre></td></tr></table></figure>
<p>The JavaScript syntax defines two types of values: Fixed values and variable values.</p>
<ul>
<li>Fixed values are called <strong>literals</strong>. <strong>Numbers</strong> are written with or without decimals, <strong>Strings</strong> are text, written within double or single quotes.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">10.50</div><div class="line">1001</div><div class="line">&quot;John Doe&quot;</div><div class="line">&apos;John Doe&apos;</div></pre></td></tr></table></figure>
<ul>
<li>Variable values are called <strong>variables</strong>. variables are used to store data values. JavaScript uses the <code>var</code> keyword to <strong>declare</strong> variables. An <code>equal sign</code> is used to <strong>assign</strong> values to variables.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x;</div><div class="line">x = 6;</div></pre></td></tr></table></figure>
<p>JavaScript uses an <strong>assignment operator</strong> (<code>=</code> ) to assign values to variables, and uses <strong>arithmetic operators</strong> (<code>+ - *  /</code> ) to compute values.</p>
<p>Code after double slashes <code>//</code> or between <code>/* */</code> is treated as a <strong>comment</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = 5;   // I will be executed</div><div class="line">// var x = 6;   I will NOT be executed</div></pre></td></tr></table></figure>
<p>In JavaScript, the first character must be a letter, an underscore (<code>_</code>), or a dollar sign (<code>$</code>). Subsequent characters may be letters, digits, underscores, or dollar signs.</p>
<p><strong>Note:</strong> Numbers are not allowed as the first character. This way JavaScript can easily distinguish identifiers from numbers.</p>
<p>All JavaScript identifiers are <strong>case sensitive</strong>. </p>
<p>Historically, programmers have used three ways of joining multiple words into one variable name:</p>
<ul>
<li>Hyphens: <code>first-name</code>, <code>last-name</code>, <code>master-card</code>, <code>inter-city</code>.</li>
<li>Underscore: <code>first_name</code>, <code>last_name</code>, <code>master_card</code>, <code>inter_city</code>.</li>
<li>Camel Case: <code>FirstName</code>, <code>LastName</code>, <code>MasterCard</code>, <code>InterCity</code>.</li>
</ul>
<p>In programming languages, especially in JavaScript, camel case often starts with a lowercase letter: <code>firstName</code>, <code>lastName</code>, <code>masterCard</code>, <code>interCity</code>.</p>
<p><strong>Note:</strong> Hyphens are not allowed in JavaScript. It is reserved for subtractions.</p>
<p>JavaScript uses the <strong>Unicode</strong> character set. Unicode covers (almost) all the characters, punctuations, and symbols in the world.</p>
<h3 id="Statements"><a href="#Statements" class="headerlink" title="Statements"></a>Statements</h3><p>JavaScript programs (and JavaScript statements) are often called JavaScript code.</p>
<p>For best readability, programmers often like to avoid code lines longer than <strong>80 characters</strong>. If a JavaScript statement does not fit on one line, the best place to break it, is after an <strong>operator</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">&quot;Hello Dolly.&quot;;</div></pre></td></tr></table></figure>
<p>JavaScript statements can be grouped together in code blocks, inside curly brackets <code>{...}</code>. The purpose of code blocks is to define statements to be executed together. In this tutorial we use <strong>4 spaces</strong> of indentation for code blocks.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function myFunction() &#123;</div><div class="line">    document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello Dolly.&quot;;</div><div class="line">    document.getElementById(&quot;myDIV&quot;).innerHTML = &quot;How are you?&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Keyword</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>break</td>
<td>Terminates a switch or a loop</td>
</tr>
<tr>
<td>continue</td>
<td>Jumps out of a loop and starts at the top</td>
</tr>
<tr>
<td>debugger</td>
<td>Stops the execution of JavaScript, and calls (if available) the debugging function</td>
</tr>
<tr>
<td>do … while</td>
<td>Executes a block of statements, and repeats the block, while a condition is true</td>
</tr>
<tr>
<td>for</td>
<td>Marks a block of statements to be executed, as long as a condition is true</td>
</tr>
<tr>
<td>function</td>
<td>Declares a function</td>
</tr>
<tr>
<td>if … else</td>
<td>Marks a block of statements to be executed, depending on a condition</td>
</tr>
<tr>
<td>return</td>
<td>Exits a function</td>
</tr>
<tr>
<td>switch</td>
<td>Marks a block of statements to be executed, depending on different cases</td>
</tr>
<tr>
<td>try … catch</td>
<td>Implements error handling to a block of statements</td>
</tr>
<tr>
<td>var</td>
<td>Declares a variable</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[百鸟朝凤，一曲绝唱]]></title>
      <url>http://rrkaige.com/2016/09/18/%E7%99%BE%E9%B8%9F%E6%9C%9D%E5%87%A4%EF%BC%8C%E4%B8%80%E6%9B%B2%E7%BB%9D%E5%94%B1/</url>
      <content type="html"><![CDATA[<p> 忙里偷闲，看完《百鸟朝凤》，一曲绝唱。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160918-myblog51.jpg" alt="Song of the Phoenix"></p>
<a id="more"></a>
<p> 四个月前，《百鸟朝凤》上映时，写下的文字。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=25917898&auto=1&height=66"></iframe>

<blockquote>
<p> 这几天关于电影《百鸟朝凤》的话题持续在网络上流转发酵，导演吴天明的绝唱之作，制作人方励的惊天一跪，还有众明星发声鼎力支持，一下子把《百鸟朝凤》推上了舆论的风口浪尖，倒真有了几分“百鸟朝凤”的味道。</p>
<p> 然而在此之前，印象中的《百鸟朝凤》还只是一首欢快的唢呐曲。</p>
<p> 十年多前我上初中，小书桌上放着家里老式的熊猫双卡录音机，那是父母结婚的“四大件”之一。每天晚上，做作业的间隙，我习惯从边上的纸盒抽出一盒磁带放进录音机，接下来就是自得其乐的时光。我至今清楚记得那些各式各样的磁带，有九十年代港台明星的流行歌曲，有京剧越剧黄梅戏的经典曲目，有班得瑞的轻音乐，有洛桑学艺的相声，当然还有古筝二胡唢呐演奏的乐曲。其中唢呐精选中第一首就是《百鸟朝凤》，放进磁带，按下开关，静静等待。一声悠长辽远的鸣叫之后，似乎是鸟儿王国的召集令，在喜庆欢快的背景乐中，各色鸟儿聚集了，纷纷登场一展歌喉，或短促，或婉转，或震颤，或激昂，或悠远，或清亮，于是闭上眼，整个人开始沉浸在鸟的世界，深深不能自拔。多少个深夜，那盏亮着台灯的小书桌前，我就是在这些音乐的陪伴下度过。</p>
<p> 岁月流转，而今《百鸟朝凤》再现，我爱的还是那支欢快的曲子。</p>
</blockquote>
<p> 今天，再看这部电影，或者称之为艺术片更为恰当。看内容，纯粹的乡间百态，手艺传承；看演技，眼神，肢体，汗水，泪水，无一丝矫揉造作。我只觉眼眶湿润，心如堵塞。</p>
<p> 打我懂事起，乡间红白事已是洋乐队。我想，许久之前，应该也有老唢呐匠吧。可惜，断了传承。剩下的，也只能流落街头。或有幸运的，登堂入室，成为稀有的高贵。只是，远离乡间，唢呐还是那只唢呐么。</p>
<p> 影片最后，焦三爷坐在太师椅上，一脸欣慰却又悲哀，再好的弟子终敌不过时代的潮流。他只能站起来，转过身，甩着手大步离开。无奈？失落？寂寞？洒脱？</p>
<p> 失去，才会珍惜；绝唱，才弥足珍贵。矛盾？且休去想。一切，终成历史。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[莫名其妙小错误]]></title>
      <url>http://rrkaige.com/2016/09/18/%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E5%B0%8F%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<p>这两天，个人博客出了个小错误，一番折腾。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160918-myblog50.jpg" alt="Debug"></p>
<a id="more"></a>
<p>问题：页面左侧栏，目录链接无用，点击时没反应。</p>
<p>解决：</p>
<ul>
<li>进入本地调试模式，问题依旧，应该是配置文件设置错误。</li>
<li>检查配置文件，包括 <code> 站点配置文件 </code> 和<code>主题配置文件</code>，模糊记得上次更改过几个变量值，具体却想不起来。变量太多，有些功能并不了解，无法逐个更改尝试，一时没辙。</li>
<li>进入 GitHub，查看 <code>index.html</code> 历史记录，发现其中更改如下，导致目录链接失效。但不知配置文件中对应变量。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-          &lt;a href=&quot;/&quot; rel=&quot;section&quot;&gt;</div><div class="line">+          &lt;a href=&quot;&quot; rel=&quot;section&quot;&gt;</div><div class="line"></div><div class="line">-          &lt;a href=&quot;/categories&quot; rel=&quot;section&quot;&gt;</div><div class="line">+          &lt;a href=&quot;&quot; rel=&quot;section&quot;&gt;</div></pre></td></tr></table></figure>
<ul>
<li>想到一个笨办法：与正确配置文件比对。</li>
<li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>，对比主题配置文件<code>_config.yml</code>，并无不同。</li>
<li><a href="https://github.com/hexojs/hexo" target="_blank" rel="external">Hexo</a>，源码中没有站点配置文件，于是本地再次新建站点。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init &lt;folder&gt;</div></pre></td></tr></table></figure>
<ul>
<li>对比站点配置文件<code>_config.yml</code>，终于发现一处差别。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Writing</div><div class="line">relative_link: false    // 源码</div><div class="line"></div><div class="line">relative_link: true    // 自己</div></pre></td></tr></table></figure>
<ul>
<li><code>relative_link</code>，并不理解具体功能，但改正后，页面回复正常。</li>
</ul>
<p>结束：办法虽笨，但也解决了问题。PS：没事不能乱尝试。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之八]]></title>
      <url>http://rrkaige.com/2016/09/17/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%85%AB/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160917-myblog49.jpg" alt="CSS And HTML"></p>
<a id="more"></a>
<h3 id="Responsive-Web-Design-The-Viewport"><a href="#Responsive-Web-Design-The-Viewport" class="headerlink" title="Responsive Web Design - The Viewport"></a>Responsive Web Design - The Viewport</h3><p>HTML5 introduced a method to let web designers take control over the viewport, through the <code>&lt;meta&gt;</code> tag. You should include the following <code>&lt;meta&gt;</code> viewport element in all your web pages:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div></pre></td></tr></table></figure>
<ul>
<li>A <code>&lt;meta&gt;</code> viewport element gives the browser instructions on how to control the page’s dimensions and scaling.</li>
<li>The <code>width=device-width</code> part sets the width of the page to follow the screen-width of the device (which will vary depending on the device).</li>
<li>The <code>initial-scale=1.0</code> part sets the initial zoom level when the page is first loaded by the browser.</li>
</ul>
<p>Some additional rules to follow:</p>
<ul>
<li><strong>Do NOT use large fixed width elements</strong> - For example, if an image is displayed at a width wider than the viewport it can cause the viewport to scroll horizontally. Remember to adjust this content to fit within the width of the viewport.</li>
<li><strong>Do NOT let the content rely on a particular viewport width to render well</strong> - Since screen dimensions and width in CSS pixels vary widely between devices, content should not rely on a particular viewport width to render well.</li>
<li><strong>Use CSS media queries to apply different styling for small and large screens</strong> - Setting large absolute CSS widths for page elements, will cause the element to be too wide for the viewport on a smaller device. Instead, consider using relative width values, such as width: 100%. Also, be careful of using large absolute positioning values. It may cause the element to fall outside the viewport on small devices.</li>
</ul>
<h3 id="Responsive-Web-Design-Grid-View"><a href="#Responsive-Web-Design-Grid-View" class="headerlink" title="Responsive Web Design - Grid-View"></a>Responsive Web Design - Grid-View</h3><p>A responsive grid-view often has 12 columns, and has a total width of 100%, and will shrink and expand as you resize the browser window.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">* &#123;</div><div class="line">    box-sizing: border-box;</div><div class="line">&#125;</div><div class="line">.row::after &#123;</div><div class="line">    content: &quot;&quot;;</div><div class="line">    clear: both;</div><div class="line">    display: block;</div><div class="line">&#125;</div><div class="line">[class*=&quot;col-&quot;] &#123;</div><div class="line">    float: left;</div><div class="line">    padding: 15px;</div><div class="line">&#125;</div><div class="line">.col-1 &#123;width: 8.33%;&#125;</div><div class="line">.col-2 &#123;width: 16.66%;&#125;</div><div class="line">.col-3 &#123;width: 25%;&#125;</div><div class="line">.col-4 &#123;width: 33.33%;&#125;</div><div class="line">.col-5 &#123;width: 41.66%;&#125;</div><div class="line">.col-6 &#123;width: 50%;&#125;</div><div class="line">.col-7 &#123;width: 58.33%;&#125;</div><div class="line">.col-8 &#123;width: 66.66%;&#125;</div><div class="line">.col-9 &#123;width: 75%;&#125;</div><div class="line">.col-10 &#123;width: 83.33%;&#125;</div><div class="line">.col-11 &#123;width: 91.66%;&#125;</div><div class="line">.col-12 &#123;width: 100%;&#125;</div></pre></td></tr></table></figure>
<p>Media query is a CSS technique introduced in CSS3. It uses the <code>@media</code> rule to include a block of CSS properties only if a certain condition is true.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">/* For desktop: */</div><div class="line">.col-1 &#123;width: 8.33%;&#125;</div><div class="line">.col-2 &#123;width: 16.66%;&#125;</div><div class="line">.col-3 &#123;width: 25%;&#125;</div><div class="line">.col-4 &#123;width: 33.33%;&#125;</div><div class="line">.col-5 &#123;width: 41.66%;&#125;</div><div class="line">.col-6 &#123;width: 50%;&#125;</div><div class="line">.col-7 &#123;width: 58.33%;&#125;</div><div class="line">.col-8 &#123;width: 66.66%;&#125;</div><div class="line">.col-9 &#123;width: 75%;&#125;</div><div class="line">.col-10 &#123;width: 83.33%;&#125;</div><div class="line">.col-11 &#123;width: 91.66%;&#125;</div><div class="line">.col-12 &#123;width: 100%;&#125;</div><div class="line"></div><div class="line">@media only screen and (max-width: 768px) &#123;</div><div class="line">    /* For mobile phones: */</div><div class="line">    [class*=&quot;col-&quot;] &#123;</div><div class="line">        width: 100%;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Mobile First</strong> means designing for mobile before designing for desktop or any other device (This will make the page display faster on smaller devices).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">/* For mobile phones: */</div><div class="line">[class*=&quot;col-&quot;] &#123;</div><div class="line">    width: 100%;</div><div class="line">&#125;</div><div class="line">@media only screen and (min-width: 600px) &#123;</div><div class="line">    /* For tablets: */</div><div class="line">    .col-m-1 &#123;width: 8.33%;&#125;</div><div class="line">    .col-m-2 &#123;width: 16.66%;&#125;</div><div class="line">    .col-m-3 &#123;width: 25%;&#125;</div><div class="line">    .col-m-4 &#123;width: 33.33%;&#125;</div><div class="line">    .col-m-5 &#123;width: 41.66%;&#125;</div><div class="line">    .col-m-6 &#123;width: 50%;&#125;</div><div class="line">    .col-m-7 &#123;width: 58.33%;&#125;</div><div class="line">    .col-m-8 &#123;width: 66.66%;&#125;</div><div class="line">    .col-m-9 &#123;width: 75%;&#125;</div><div class="line">    .col-m-10 &#123;width: 83.33%;&#125;</div><div class="line">    .col-m-11 &#123;width: 91.66%;&#125;</div><div class="line">    .col-m-12 &#123;width: 100%;&#125;</div><div class="line">&#125;</div><div class="line">@media only screen and (min-width: 768px) &#123;</div><div class="line">    /* For desktop: */</div><div class="line">    .col-1 &#123;width: 8.33%;&#125;</div><div class="line">    .col-2 &#123;width: 16.66%;&#125;</div><div class="line">    .col-3 &#123;width: 25%;&#125;</div><div class="line">    .col-4 &#123;width: 33.33%;&#125;</div><div class="line">    .col-5 &#123;width: 41.66%;&#125;</div><div class="line">    .col-6 &#123;width: 50%;&#125;</div><div class="line">    .col-7 &#123;width: 58.33%;&#125;</div><div class="line">    .col-8 &#123;width: 66.66%;&#125;</div><div class="line">    .col-9 &#123;width: 75%;&#125;</div><div class="line">    .col-10 &#123;width: 83.33%;&#125;</div><div class="line">    .col-11 &#123;width: 91.66%;&#125;</div><div class="line">    .col-12 &#123;width: 100%;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Responsive-Web-Design-Images"><a href="#Responsive-Web-Design-Images" class="headerlink" title="Responsive Web Design - Images"></a>Responsive Web Design - Images</h3><p>If the <code>width</code> property is set to 100%, the image will be responsive and scale up and down.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    width: 100%;</div><div class="line">    height: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>If the <code>max-width</code> property is set to 100%, the image will scale down if it has to, but never scale up to be larger than its original size.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    max-width: 100%;</div><div class="line">    height: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>To reduce the load, or for any other reasons, you can use media queries to display different images on different devices. You can use the media query <code>min-device-width</code>, instead of <code>min-width</code>, which checks the device width, instead of the browser width. Then the image will not change when you resize the browser window.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/* For width smaller than 400px: */</div><div class="line">body &#123;</div><div class="line">    background-image: url(&apos;img_smallflower.jpg&apos;); </div><div class="line">&#125;</div><div class="line"></div><div class="line">/* For width 400px and larger: */</div><div class="line">@media only screen and (min-width: 400px) &#123;</div><div class="line">    body &#123; </div><div class="line">        background-image: url(&apos;img_flowers.jpg&apos;); </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Responsive-Web-Design-Frameworks"><a href="#Responsive-Web-Design-Frameworks" class="headerlink" title="Responsive Web Design - Frameworks"></a>Responsive Web Design - Frameworks</h3><p>A great way to create a responsive design is to use a responsive style sheet, like <a href="http://www.w3schools.com/w3css/" target="_blank" rel="external">W3.CSS</a>. W3.CSS makes it easy to develop sites that look nice at any size; desktop, laptop, tablet, or phone.</p>
<p>Another popular framework is <a href="http://www.w3schools.com/bootstrap/" target="_blank" rel="external">Bootstrap</a>, it uses HTML, CSS and jQuery to make responsive web pages.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之七]]></title>
      <url>http://rrkaige.com/2016/09/16/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%83/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160916-myblog48.jpg" alt="CSS"></p>
<a id="more"></a>
<h3 id="CSS-Images"><a href="#CSS-Images" class="headerlink" title="CSS Images"></a>CSS Images</h3><ul>
<li>Use the <code>border-radius</code> property to create rounded images:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    border-radius: 8px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Use the border property to create thumbnail images.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">a &#123;</div><div class="line">    display: inline-block;</div><div class="line">    border: 1px solid #ddd;</div><div class="line">    border-radius: 4px;</div><div class="line">    padding: 5px;</div><div class="line">    transition: 0.3s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">a:hover &#123;</div><div class="line">    box-shadow: 0 0 2px 1px rgba</div><div class="line">    (0, 140, 186, 0.5);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&lt;a href=&quot;paris.jpg&quot;&gt;</div><div class="line">  &lt;img src=&quot;paris.jpg&quot; alt=&quot;Paris&quot;&gt;</div><div class="line">&lt;/a&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Responsive images will automatically adjust to fit the size of the screen.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    max-width: 100%;</div><div class="line">    height: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>To center an image within the page, use <code>margin: auto;</code> and make it into a block element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    display: block;</div><div class="line">    margin: auto;</div><div class="line">    width: 50%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The CSS <code>filter</code> property adds visual effects (like blur and saturation) to an element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    -webkit-filter: grayscale(100%); /* Chrome, Safari, Opera */</div><div class="line">    filter: grayscale(100%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Buttons"><a href="#CSS-Buttons" class="headerlink" title="CSS Buttons"></a>CSS Buttons</h3><ul>
<li>Use the <code>box-shadow</code> property to add shadows to a button.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.button1 &#123;</div><div class="line">    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);</div><div class="line">&#125;</div><div class="line"></div><div class="line">.button2:hover &#123;</div><div class="line">    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Use the <code>opacity</code> property to add transparency to a button (creates a “disabled” look).</li>
</ul>
<p><strong>Tip:</strong> You can also add the <code>cursor</code> property with a value of “not-allowed”, which will display a “no parking sign” when you mouse over the button.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.disabled &#123;</div><div class="line">    opacity: 0.6;</div><div class="line">    cursor: not-allowed;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Remove margins and add <code>float:left</code> to each button to create a button group.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.button &#123;</div><div class="line">    float: left;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Use the <code>border</code> property to create a bordered button group.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.button &#123;</div><div class="line">    float: left;</div><div class="line">    border: 1px solid green</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Pagination-Examples"><a href="#CSS-Pagination-Examples" class="headerlink" title="CSS Pagination Examples"></a>CSS Pagination Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">.newspaper &#123;</div><div class="line">    -webkit-column-count: 3; /* Chrome, Safari, Opera */</div><div class="line">    -moz-column-count: 3; /* Firefox */</div><div class="line">    column-count: 3;</div><div class="line">    -webkit-column-gap: 40px; /* Chrome, Safari, Opera */</div><div class="line">    -moz-column-gap: 40px; /* Firefox */</div><div class="line">    column-gap: 40px;</div><div class="line">    -webkit-column-rule: 1px solid lightblue; /* Chrome, Safari, Opera */</div><div class="line">    -moz-column-rule: 1px solid lightblue; /* Firefox */</div><div class="line">    column-rule: 1px solid lightblue;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h2 &#123;</div><div class="line">    -webkit-column-span: all; /* Chrome, Safari, Opera */</div><div class="line">    column-span: all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>column-count</td>
<td>Specifies the number of columns an element should be divided into</td>
</tr>
<tr>
<td>column-fill</td>
<td>Specifies how to fill columns</td>
</tr>
<tr>
<td>column-gap</td>
<td>Specifies the gap between the columns</td>
</tr>
<tr>
<td>column-rule</td>
<td>A shorthand property for setting all the column-rule-* properties</td>
</tr>
<tr>
<td>column-rule-color</td>
<td>Specifies the color of the rule between columns</td>
</tr>
<tr>
<td>column-rule-style</td>
<td>Specifies the style of the rule between columns</td>
</tr>
<tr>
<td>column-rule-width</td>
<td>Specifies the width of the rule between columns</td>
</tr>
<tr>
<td>column-span</td>
<td>Specifies how many columns an element should span across</td>
</tr>
<tr>
<td>column-width</td>
<td>Specifies a suggested, optimal width for the columns</td>
</tr>
<tr>
<td>columns</td>
<td>A shorthand property for setting column-width and column-count</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-User-Interface"><a href="#CSS3-User-Interface" class="headerlink" title="CSS3 User Interface"></a>CSS3 User Interface</h3><ul>
<li>The <code>resize</code> property specifies whether or not an element should be resizable by the user.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    resize: horizontal;</div><div class="line">    overflow: auto;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div &#123;</div><div class="line">    resize: vertical;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div &#123;</div><div class="line">    resize: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The <code>outline-offset</code> property adds space between an outline and the edge or border of an element.</li>
</ul>
<p>Outlines differ from borders in three ways: An outline is a line drawn around elements, outside the border edge; An outline <strong>does not take up space</strong>; An outline may be non-rectangular.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    border: 1px solid black;</div><div class="line">    outline: 1px solid red;</div><div class="line">    outline-offset: 15px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS3-Box-Sizing"><a href="#CSS3-Box-Sizing" class="headerlink" title="CSS3 Box Sizing"></a>CSS3 Box Sizing</h3><p>By default, the width and height of an element is calculated like this:</p>
<p><code>width + padding + border = actual width of an element</code><br><code>height + padding + border = actual height of an element</code></p>
<p>This means: When you set the width/height of an element, the element often appear bigger than you have set (because the element’s border and padding are added to the element’s specified width/height).</p>
<p>The CSS3 <code>box-sizing</code> property allows us to include the padding and border in an element’s total width and height.</p>
<p>If you set <code>box-sizing: border-box;</code> on an element padding and border are included in the width and height.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">.div1 &#123;</div><div class="line">    width: 300px;</div><div class="line">    height: 100px;</div><div class="line">    border: 1px solid blue;</div><div class="line">    box-sizing: border-box;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.div2 &#123;</div><div class="line">    width: 300px;</div><div class="line">    height: 100px;</div><div class="line">    padding: 50px;</div><div class="line">    border: 1px solid red;</div><div class="line">    box-sizing: border-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The code below ensures that all elements are sized in this more intuitive way.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">    box-sizing: border-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>box-sizing</td>
<td>Allows you to include the padding and border in an element’s total width and height</td>
</tr>
<tr>
<td>nav-down</td>
<td>Specifies where to navigate when using the arrow-down navigation key</td>
</tr>
<tr>
<td>nav-index</td>
<td>Specifies the tabbing order for an element</td>
</tr>
<tr>
<td>nav-left</td>
<td>Specifies where to navigate when using the arrow-left navigation key</td>
</tr>
<tr>
<td>nav-right</td>
<td>Specifies where to navigate when using the arrow-right navigation key</td>
</tr>
<tr>
<td>nav-up</td>
<td>Specifies where to navigate when using the arrow-up navigation key</td>
</tr>
<tr>
<td>outline-offset</td>
<td>Adds space between an outline and the edge or border of an element</td>
</tr>
<tr>
<td>resize</td>
<td>Specifies whether or not an element is resizable by the user</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Flexible-Box"><a href="#CSS3-Flexible-Box" class="headerlink" title="CSS3 Flexible Box"></a>CSS3 Flexible Box</h3><p>Flexbox consists of flex <strong>containers</strong> and flex <strong>items</strong>.</p>
<p>A flex container is declared by setting the <code>display</code> property of an element to either <code>flex</code> (rendered as a block) or <code>inline-flex</code> (rendered as inline).</p>
<p>Inside a flex container there is one or more flex items.</p>
<p><strong>Note:</strong> Everything outside a flex container and inside a flex item is rendered as usual. Flexbox defines <strong>how flex items are laid out inside a flex container</strong>.</p>
<p>Flex items are positioned inside a flex container along a flex line. By default there is only one flex line per flex container.</p>
<p>The <code>flex-direction</code> property specifies the direction of the flexible items inside the flex container. The default value of flex-direction is row (left-to-right, top-to-bottom). The other values are as follows:</p>
<ul>
<li><code>row-reverse</code> - If the writing-mode (direction) is left to right, the flex items will be laid out right to left</li>
<li><code>column</code> - If the writing system is horizontal, the flex items will be laid out vertically</li>
<li><code>column-reverse</code> - Same as column, but reversed</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.flex-container &#123;</div><div class="line">    display: -webkit-flex;</div><div class="line">    display: flex;</div><div class="line">    -webkit-flex-direction: row-reverse;</div><div class="line">    flex-direction: row-reverse;</div><div class="line">    width: 400px;</div><div class="line">    height: 250px;</div><div class="line">    background-color: lightgrey;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>justify-content</code> property horizontally aligns the flexible container’s items when the items do not use all available space on the main-axis. The possible values are as follows:</p>
<ul>
<li><code>flex-start</code> - Default value. Items are positioned at the beginning of the container</li>
<li><code>flex-end</code> - Items are positioned at the end of the container</li>
<li><code>center</code> - Items are positioned at the center of the container</li>
<li><code>space-between</code> - Items are positioned with space between the lines</li>
<li><code>space-around</code> - Items are positioned with space before, between, and after the lines</li>
</ul>
<p>The <code>align-items</code> property vertically aligns the flexible container’s items when the items do not use all available space on the cross-axis. The possible values are as follows:</p>
<ul>
<li><code>stretch</code> - Default value. Items are stretched to fit the container</li>
<li><code>flex-start</code> - Items are positioned at the top of the container</li>
<li><code>flex-end</code> - Items are positioned at the bottom of the container</li>
<li><code>center</code> - Items are positioned at the center of the container (vertically)</li>
<li><code>baseline</code> - Items are positioned at the baseline of the container</li>
</ul>
<p>The <code>flex-wrap</code> property specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line. The possible values are as follows:</p>
<ul>
<li><code>nowrap</code> - Default value. The flexible items will not wrap</li>
<li><code>wrap</code> - The flexible items will wrap if necessary</li>
<li><code>wrap-reverse</code> - The flexible items will wrap, if necessary, in reverse order</li>
</ul>
<p>The <code>align-content</code> property modifies the behavior of the <code>flex-wrap</code> property. It is similar to <code>align-items</code>, but instead of aligning flex items, it aligns flex lines. The possible values are as follows:</p>
<ul>
<li><code>stretch</code> - Default value. Lines stretch to take up the remaining space</li>
<li><code>flex-start</code> - Lines are packed toward the start of the flex container</li>
<li><code>flex-end</code> - Lines are packed toward the end of the flex container</li>
<li><code>center</code> - Lines are packed toward the center of the flex container</li>
<li><code>space-between</code> - Lines are evenly distributed in the flex container</li>
<li><code>space-around</code> - Lines are evenly distributed in the flex container, with half-size spaces on either end</li>
</ul>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>display</td>
<td>Specifies the type of box used for an HTML element</td>
</tr>
<tr>
<td>flex-direction</td>
<td>Specifies the direction of the flexible items inside a flex container</td>
</tr>
<tr>
<td>justify-content</td>
<td>Horizontally aligns the flex items when the items do not use all available space on the main-axis</td>
</tr>
<tr>
<td>align-items</td>
<td>Vertically aligns the flex items when the items do not use all available space on the cross-axis</td>
</tr>
<tr>
<td>flex-wrap</td>
<td>Specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line</td>
</tr>
<tr>
<td>align-content</td>
<td>Modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines</td>
</tr>
<tr>
<td>flex-flow</td>
<td>A shorthand property for flex-direction and flex-wrap</td>
</tr>
<tr>
<td>order</td>
<td>Specifies the order of a flexible item relative to the rest of the flex items inside the same container</td>
</tr>
<tr>
<td>align-self</td>
<td>Used on flex items. Overrides the container’s align-items property</td>
</tr>
<tr>
<td>flex</td>
<td>Specifies the length of a flex item, relative to the rest of the flex items inside the same container</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Media-Queries"><a href="#CSS3-Media-Queries" class="headerlink" title="CSS3 Media Queries"></a>CSS3 Media Queries</h3><p>Media queries in CSS3 extend the CSS2 media types idea: Instead of looking for a <strong>type</strong> of device, they look at the <strong>capability</strong> of the device.</p>
<p>Media queries can be used to check many things, such as:</p>
<ul>
<li>width and height of the viewport</li>
<li>width and height of the device</li>
<li>orientation (is the tablet/phone in landscape or portrait mode?)</li>
<li>resolution</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@media not|only mediatype and (expressions) &#123;</div><div class="line">    CSS-Code;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@media screen and (min-width: 480px) &#123;</div><div class="line">    #leftsidebar &#123;width: 200px; float: left;&#125;</div><div class="line">    #main &#123;margin-left:216px;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[中秋夜雨]]></title>
      <url>http://rrkaige.com/2016/09/15/%E4%B8%AD%E7%A7%8B%E5%A4%9C%E9%9B%A8/</url>
      <content type="html"><![CDATA[<p> 中秋无月，夜雨正稠。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160915-myblog47.jpg" alt="Moon Girl Cat Sea Stuff"></p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=33933271&auto=1&height=66"></iframe>

<p> 一整天的大雨，昨夜始，今未消。天色阴沉，凉风袭人，树叶沙沙。遥望紫金山，云雾如青烟，倏忽起，倏忽落，缭绕不绝。我擎着小伞，雨打湿裤腿，着凉拖的脚略冷。</p>
<p> 不见军训的孩子，该都去过节了吧。实验室意外冷清，看热气在杯口升腾，一如窗外远山。</p>
<p> 中午犹豫再三，冒雨去后街的面馆尝鲜。昨天听说，之前的老字号重新开张，换了东家，主打也改快餐为面食。口味还行，但总觉少了什么。六年风雨，一如今朝，多少店铺起落，不变依然那街。</p>
<p> 给父母家人电话，遥祝平安。回复三五好友中秋快乐。不忘吃个月饼。</p>
<p> 没有月亮的一晚。普通的一天。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Algorithms4 学习笔记之一]]></title>
      <url>http://rrkaige.com/2016/09/15/Algorithms4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>断断续续学习算法，始终不得要领。准备把基础、排序和查找再过一遍。教材是 Sedgewick &amp; Wayne 的 <a href="http://algs4.cs.princeton.edu/" target="_blank" rel="external">Algorithms, 4th Edition</a>，在 Coursera 上有教程，<a href="https://github.com/kevin-wayne/algs4" target="_blank" rel="external">GitHub</a> 上有代码。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160915-myblog46.png" alt="Algorithms"></p>
<a id="more"></a>
<h3 id="运行程序"><a href="# 运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><ul>
<li>根据 <a href="http://algs4.cs.princeton.edu/windows/" target="_blank" rel="external"> 教程 1</a>，建立环境，<a href="http://algs4.cs.princeton.edu/code/" target="_blank" rel="external">教程 2</a>，命令行运行程序</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">C:\Users\RENK&gt;cd algs4\algs4-data    // 进入数据文件夹</div><div class="line">// 运行程序（基于文件输入 + 标准输入）</div><div class="line">C:\Users\RENK\algs4\algs4-data&gt;java-algs4 edu.princeton.cs.algs4.BinarySearch tinyW.txt &lt; tinyT.txt</div><div class="line">// 输出重定向</div><div class="line">C:\Users\RENK\algs4\algs4-data&gt;java-algs4 edu.princeton.cs.algs4.RandomSeq 1000 100.0 200.0 &gt; data.txt</div><div class="line">// 输入重定向</div><div class="line">C:\Users\RENK\algs4\algs4-data&gt;java-algs4 edu.princeton.cs.algs4.Average &lt; data.txt</div><div class="line">// 管道</div><div class="line">C:\Users\RENK\algs4\algs4-data&gt;java-algs4 edu.princeton.cs.algs4.RandomSeq 1000 100.0 200.0 | java-algs4 edu.princeton.cs.algs4.Average</div></pre></td></tr></table></figure>
<ul>
<li>使用 <a href="https://maven.apache.org/" target="_blank" rel="external">Maven</a>，根据<a href="https://github.com/kevin-wayne/algs4/blob/master/README-MAVEN.txt" target="_blank" rel="external"> 教程</a>，导入 Eclipse，即可查看程序</li>
</ul>
<h3 id="bag"><a href="#bag" class="headerlink" title="bag"></a>bag</h3><ul>
<li>链表实现</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class Bag&lt;Item&gt; &#123;</div><div class="line">    private Node first;</div><div class="line">    private int N;</div><div class="line">    private class Node &#123;</div><div class="line">        Item item;</div><div class="line">        Node next;</div><div class="line">    &#125;</div><div class="line">    public bollean isEmpty() &#123;</div><div class="line">        return first == null;</div><div class="line">    &#125;</div><div class="line">    public int size() &#123;</div><div class="line">        return N;</div><div class="line">    &#125;</div><div class="line">    public void add(Item item) &#123;</div><div class="line">        Node oldfirst = first;</div><div class="line">        first = new Node();</div><div class="line">        first.item = item;</div><div class="line">        first.next = oldfirst;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="queue-FIFO"><a href="#queue-FIFO" class="headerlink" title="queue(FIFO)"></a>queue(FIFO)</h3><ul>
<li>链表实现</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">public class Queue&lt;Item&gt; &#123;</div><div class="line">    private Node first;    // 最早添加的节点链接</div><div class="line">    private Node last;    // 最近添加的节点链接</div><div class="line">    private int N;    // 队列中的元素数量</div><div class="line">    private class Node &#123;    // 节点嵌套类</div><div class="line">        Item item;</div><div class="line">        Node next;</div><div class="line">    &#125;</div><div class="line">    public boolean isEmpty() &#123;</div><div class="line">        return first == null;</div><div class="line">    &#125;</div><div class="line">    public int size() &#123;</div><div class="line">        return N;</div><div class="line">    &#125;</div><div class="line">    public void enqueue(Item item) &#123;    // 向表尾添加元素</div><div class="line">        Node oldlast = last;</div><div class="line">        last = new Node();</div><div class="line">        last.item = item;</div><div class="line">        last.next = null;</div><div class="line">        if(isEmpty()) &#123;</div><div class="line">            first = last;</div><div class="line">        &#125; else &#123;</div><div class="line">            oldlast.next = last;</div><div class="line">        &#125;</div><div class="line">        N++;</div><div class="line">    &#125;</div><div class="line">    public Item dequeue() &#123;    // 从表头删除元素</div><div class="line">        Item item = first.item;</div><div class="line">        first = first.next;</div><div class="line">        if(isEmpty()) &#123;</div><div class="line">            last = null;</div><div class="line">        &#125;</div><div class="line">        N--;</div><div class="line">        return item;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="stack-LIFO"><a href="#stack-LIFO" class="headerlink" title="stack(LIFO)"></a>stack(LIFO)</h3><ul>
<li>数组实现</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">public class ResizingArrayStack&lt;Item&gt; &#123;</div><div class="line">    private Item[] a = (Item[]) new Object[1];</div><div class="line">    private int N = 0;</div><div class="line">    public boolean isEmpty() &#123;</div><div class="line">        return N == 0;</div><div class="line">    &#125;</div><div class="line">    public int size() &#123;</div><div class="line">        return N;</div><div class="line">    &#125;</div><div class="line">    private void resize(int max) &#123;    // 将栈移动到一个大小为 max 的新数组</div><div class="line">        Item[] temp = (Item[]) new Object[max];</div><div class="line">        for(int i = 0; i &lt; max; i++) &#123;</div><div class="line">            temp[i] = a[i];</div><div class="line">        &#125;</div><div class="line">        a = temp;</div><div class="line">    &#125;</div><div class="line">    public void push(Item item) &#123;    // 将元素添加到栈顶</div><div class="line">        if(N == a.length) &#123;</div><div class="line">            resize(a.length * 2);</div><div class="line">        &#125;</div><div class="line">        a[N++] = item;</div><div class="line">    &#125;</div><div class="line">    public Item pop() &#123;    // 从栈顶删除元素</div><div class="line">        Item item = a[--N];</div><div class="line">        a[N] = null;    // 避免对象游离</div><div class="line">        if(N &gt; 0 &amp;&amp; N == a.length / 4) &#123;</div><div class="line">            resize(a.length / 2);</div><div class="line">        &#125;</div><div class="line">        return item;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>链表实现</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">public class Stack&lt;Item&gt; &#123;</div><div class="line">    private Node first;    // 栈顶</div><div class="line">    private int N;    // 元素数量</div><div class="line">    private class Node &#123;    // 节点嵌套类</div><div class="line">        Item item;</div><div class="line">        Node next;</div><div class="line">    &#125;</div><div class="line">    public bollean isEmpty() &#123;</div><div class="line">        return first == null;</div><div class="line">    &#125;</div><div class="line">    public int size() &#123;</div><div class="line">        return N;</div><div class="line">    &#125;</div><div class="line">    public void push(Item item) &#123;    // 将元素添加到栈顶</div><div class="line">        Node oldfirst = first;</div><div class="line">        first = new Node();</div><div class="line">        first.item = item;</div><div class="line">        first.next = oldfirst;</div><div class="line">        N++;</div><div class="line">    &#125;</div><div class="line">    public Item pop() &#123;    // 从栈顶删除元素</div><div class="line">        Item item = first.item;</div><div class="line">        first = first.next;</div><div class="line">        N--;</div><div class="line">        return item;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之六]]></title>
      <url>http://rrkaige.com/2016/09/14/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%85%AD/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160914-myblog45.jpg" alt="CSS3"></p>
<a id="more"></a>
<h3 id="CSS3-Shadow-Effects"><a href="#CSS3-Shadow-Effects" class="headerlink" title="CSS3 Shadow Effects"></a>CSS3 Shadow Effects</h3><p>The CSS3 <code>text-shadow</code> property applies shadow to text.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">h1 &#123;</div><div class="line">    text-shadow: 2px 2px 5px red;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h1 &#123;</div><div class="line">    text-shadow: 0 0 3px #FF0000, 0 0 5px #0000FF;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The CSS3 <code>box-shadow</code> property applies shadow to elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    box-shadow: 10px 10px 5px grey;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#boxshadow &#123;</div><div class="line">    position: relative;</div><div class="line">    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);</div><div class="line">    padding: 10px;</div><div class="line">    background: white;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#boxshadow img &#123;</div><div class="line">    width: 100%;</div><div class="line">    border: 1px solid #8a4419;</div><div class="line">    border-style: inset;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#boxshadow::after &#123;</div><div class="line">    content: &apos;&apos;;</div><div class="line">    position: absolute;</div><div class="line">    z-index: -1; /* hide shadow behind image */</div><div class="line">    box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3); </div><div class="line">    width: 70%; </div><div class="line">    left: 15%; /* one half of the remaining 30% */</div><div class="line">    height: 100px;</div><div class="line">    bottom: 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>box-shadow</td>
<td>Adds one or more shadows to an element</td>
</tr>
<tr>
<td>text-shadow</td>
<td>Adds one or more shadows to a text</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Text"><a href="#CSS3-Text" class="headerlink" title="CSS3 Text"></a>CSS3 Text</h3><p>The CSS3 <code>text-overflow</code> property specifies how overflowed content that is not displayed should be signaled to the user.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">p.test1 &#123;</div><div class="line">    white-space: nowrap; </div><div class="line">    width: 200px; </div><div class="line">    border: 1px solid #000000;</div><div class="line">    overflow: hidden;</div><div class="line">    text-overflow: clip; </div><div class="line">&#125;</div><div class="line"></div><div class="line">p.test2 &#123;</div><div class="line">    white-space: nowrap; </div><div class="line">    width: 200px; </div><div class="line">    border: 1px solid #000000;</div><div class="line">    overflow: hidden;</div><div class="line">    text-overflow: ellipsis; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">div.test:hover &#123;</div><div class="line">    text-overflow: inherit;</div><div class="line">    overflow: visible;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The CSS3 <code>word-wrap</code> property allows long words to be able to be broken and wrap onto the next line. </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    word-wrap: break-word;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The CSS3 <code>word-break</code> property specifies line breaking rules.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">p.test1 &#123;</div><div class="line">    word-break: keep-all;</div><div class="line">&#125;</div><div class="line"></div><div class="line">p.test2 &#123;</div><div class="line">    word-break: break-all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>text-align-last</td>
<td>Specifies how to align the last line of a text</td>
</tr>
<tr>
<td>text-emphasis</td>
<td>A shorthand for setting text-emphasis-style and text-emphasis-color in one declaration</td>
</tr>
<tr>
<td>text-justify</td>
<td>Specifies how justified text should be aligned and spaced</td>
</tr>
<tr>
<td>text-overflow</td>
<td>Specifies how overflowed content that is not displayed should be signaled to the user</td>
</tr>
<tr>
<td>word-break</td>
<td>Specifies line breaking rules for non-CJK scripts</td>
</tr>
<tr>
<td>word-wrap</td>
<td>Allows long words to be able to be broken and wrap onto the next line</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Web-Fonts"><a href="#CSS3-Web-Fonts" class="headerlink" title="CSS3 Web Fonts"></a>CSS3 Web Fonts</h3><p>In the CSS3 <code>@font-face</code> rule you must first define a name for the font (e.g. myFirstFont), and then point to the font file.</p>
<p><strong>Tip:</strong> Always use lowercase letters for the font URL. Uppercase letters can give unexpected results in IE.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@font-face &#123;</div><div class="line">    font-family: myFirstFont;</div><div class="line">    src: url(sansation_light.woff);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@font-face &#123;</div><div class="line">    font-family: myFirstFont;</div><div class="line">    src: url(sansation_bold.woff);</div><div class="line">    font-weight: bold;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div &#123;</div><div class="line">    font-family: myFirstFont;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS3-2D-Transforms"><a href="#CSS3-2D-Transforms" class="headerlink" title="CSS3 2D Transforms"></a>CSS3 2D Transforms</h3><p>The <code>translate()</code> method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">div1 &#123;</div><div class="line">    -ms-transform: translate(50px, 100px); /* IE 9 */</div><div class="line">    -webkit-transform: translate(50px, 100px); /* Safari */</div><div class="line">    transform: translate(50px, 100px);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>rotate()</code> method rotates an element clockwise or counter-clockwise according to a given degree. Using negative values will rotate the element counter-clockwise.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div2 &#123;</div><div class="line">    transform: rotate(20deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>scale()</code> method increases or decreases the size of an element (according to the parameters given for the width and height).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div3 &#123;</div><div class="line">    transform: scale(2, 3);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>skewX()</code> method skews an element along the X-axis by the given angle.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div4 &#123;</div><div class="line">    transform: skewX(20deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>skewY()</code> method skews an element along the Y-axis by the given angle.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div5 &#123;</div><div class="line">    transform: skewY(20deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>skew()</code> method skews an element along the X and Y-axis by the given angles.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div6 &#123;</div><div class="line">    transform: skew(20deg, 10deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>matrix()</code> method combines all the 2D transform methods into one. The matrix() method take six parameters: <code>matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div7 &#123;</div><div class="line">    transform: matrix(1, -0.3, 0, 1, 0, 0);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS3-3D-Transforms"><a href="#CSS3-3D-Transforms" class="headerlink" title="CSS3 3D Transforms"></a>CSS3 3D Transforms</h3><p>The <code>rotateX()</code> method rotates an element around its X-axis at a given degree.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">div1 &#123;</div><div class="line">    -webkit-transform: rotateX(150deg); /* Safari */</div><div class="line">    transform: rotateX(150deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>rotateY()</code> method rotates an element around its Y-axis at a given degree.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">div2 &#123;</div><div class="line">    -webkit-transform: rotateY(130deg); /* Safari */</div><div class="line">    transform: rotateY(130deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>rotateZ()</code> method rotates an element around its Z-axis at a given degree.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">div3 &#123;</div><div class="line">    -webkit-transform: rotateZ(90deg); /* Safari */</div><div class="line">    transform: rotateZ(90deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>transform</td>
<td>Applies a 2D or 3D transformation to an element</td>
</tr>
<tr>
<td>transform-origin</td>
<td>Allows you to change the position on transformed elements</td>
</tr>
<tr>
<td>transform-style</td>
<td>Specifies how nested elements are rendered in 3D space</td>
</tr>
<tr>
<td>perspective</td>
<td>Specifies the perspective on how 3D elements are viewed</td>
</tr>
<tr>
<td>perspective-origin</td>
<td>Specifies the bottom position of 3D elements</td>
</tr>
<tr>
<td>backface-visibility</td>
<td>Defines whether or not an element should be visible when not facing the screen</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Transitions"><a href="#CSS3-Transitions" class="headerlink" title="CSS3 Transitions"></a>CSS3 Transitions</h3><p>CSS3 transitions allows you to change property values smoothly (from one value to another), over a given duration.</p>
<p>To create a transition effect, you must specify two things:</p>
<ul>
<li>the CSS property you want to add an effect to</li>
<li>the duration of the effect</li>
</ul>
<p><strong>Note:</strong> If the duration part is not specified, the transition will have no effect, because the default value is 0.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">div1 &#123;</div><div class="line">    width: 100px;</div><div class="line">    height: 100px;</div><div class="line">    background: red;</div><div class="line">    -webkit-transition: width 2s, height 4s; /* For Safari 3.1 to 6.0 */</div><div class="line">    transition: width 2s, height 4s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div1:hover &#123;</div><div class="line">    width: 300px;</div><div class="line">    height: 300px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>transition-timing-function</code> property specifies the speed curve of the transition effect. The transition-timing-function property can have the following values:</p>
<ul>
<li><strong>ease</strong> - specifies a transition effect with a slow start, then fast, then end slowly (this is default)</li>
<li><strong>linear</strong> - specifies a transition effect with the same speed from start to end</li>
<li><strong>ease-in</strong> - specifies a transition effect with a slow start</li>
<li><strong>ease-out</strong> - specifies a transition effect with a slow end</li>
<li><strong>ease-in-out</strong> - specifies a transition effect with a slow start and end</li>
<li><strong>cubic-bezier(n,n,n,n)</strong> - lets you define your own values in a cubic-bezier function</li>
</ul>
<p>The <code>transition-delay</code> property specifies a delay (in seconds) for the transition effect.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">div2 &#123;</div><div class="line">    transition-delay: 1s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div3 &#123;</div><div class="line">    transition: width 2s linear 1s;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Transition + Transformation</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">div4 &#123;</div><div class="line">    width: 100px;</div><div class="line">    height: 100px;</div><div class="line">    background: red;</div><div class="line">    transition: width 2s, height 2s, transform 2s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div4:hover &#123;</div><div class="line">    width: 300px;</div><div class="line">    height: 300px;</div><div class="line">    transform: rotate(180deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>transition</td>
<td>A shorthand property for setting the four transition properties into a single property</td>
</tr>
<tr>
<td>transition-delay</td>
<td>Specifies a delay (in seconds) for the transition effect</td>
</tr>
<tr>
<td>transition-duration</td>
<td>Specifies how many seconds or milliseconds a transition effect takes to complete</td>
</tr>
<tr>
<td>transition-property</td>
<td>Specifies the name of the CSS property the transition effect is for</td>
</tr>
<tr>
<td>transition-timing-function</td>
<td>Specifies the speed curve of the transition effect</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Animations"><a href="#CSS3-Animations" class="headerlink" title="CSS3 Animations"></a>CSS3 Animations</h3><p>An animation lets an element gradually change from one style to another. You can change as many CSS properties you want, as many times you want. To use CSS3 animation, you must first specify some keyframes for the animation. Keyframes hold what styles the element will have at certain times.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/* The animation code */</div><div class="line">@keyframes example &#123;</div><div class="line">    from &#123;background-color: red;&#125;</div><div class="line">    to &#123;background-color: yellow;&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* The element to apply the animation to */</div><div class="line">div &#123;</div><div class="line">    width: 100px;</div><div class="line">    height: 100px;</div><div class="line">    background-color: red;</div><div class="line">    animation-name: example;</div><div class="line">    animation-duration: 4s;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If the animation-duration property is not specified, the animation will have no effect, because the default value is 0. </p>
<p>It is also possible to use percent. By using <strong>percent</strong>, you can add as many style changes as you like.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/* The animation code */</div><div class="line">@keyframes example &#123;</div><div class="line">    0%   &#123;background-color: red; left:0px; top:0px;&#125;</div><div class="line">    25%  &#123;background-color: yellow; left:200px; top:0px;&#125;</div><div class="line">    50%  &#123;background-color: blue; left:200px; top:200px;&#125;</div><div class="line">    75%  &#123;background-color: green; left:0px; top:200px;&#125;</div><div class="line">    100% &#123;background-color: red; left:0px; top:0px;&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* The element to apply the animation to */</div><div class="line">div &#123;</div><div class="line">    width: 100px;</div><div class="line">    height: 100px;</div><div class="line">    position: relative;</div><div class="line">    background-color: red;</div><div class="line">    animation-name: example;</div><div class="line">    animation-duration: 4s;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>animation-timing-function</code> property specifies the speed curve of the animation.</p>
<p>The <code>animation-delay</code> property specifies a delay for the start of an animation.</p>
<p>The <code>animation-iteration-count</code> property specifies the number of times an animation should run.</p>
<p>The <code>animation-direction</code> property is used to let an animation run in <code>reverse</code> direction or <code>alternate</code> cycles.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    width: 100px;</div><div class="line">    height: 100px;</div><div class="line">    position: relative;</div><div class="line">    background-color: red;</div><div class="line">    animation-name: example;</div><div class="line">    animation-duration: 4s;</div><div class="line">    animation-timing-function: linear;</div><div class="line">    animation-delay: 2s;</div><div class="line">    animation-iteration-count: infinite;</div><div class="line">    animation-direction: alternate;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div &#123;</div><div class="line">    animation: example 4s linear 2s infinite alternate;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>@keyframes</td>
<td>Specifies the animation code</td>
</tr>
<tr>
<td>animation</td>
<td>A shorthand property for setting all the animation properties</td>
</tr>
<tr>
<td>animation-delay</td>
<td>Specifies a delay for the start of an animation</td>
</tr>
<tr>
<td>animation-direction</td>
<td>Specifies whether an animation should play in reverse direction or alternate cycles</td>
</tr>
<tr>
<td>animation-duration</td>
<td>Specifies how many seconds or milliseconds an animation takes to complete one cycle</td>
</tr>
<tr>
<td>animation-fill-mode</td>
<td>Specifies a style for the element when the animation is not playing (when it is finished, or when it has a delay)</td>
</tr>
<tr>
<td>animation-iteration-count</td>
<td>Specifies the number of times an animation should be played</td>
</tr>
<tr>
<td>animation-name</td>
<td>Specifies the name of the @keyframes animation</td>
</tr>
<tr>
<td>animation-play-state</td>
<td>Specifies whether the animation is running or paused</td>
</tr>
<tr>
<td>animation-timing-function</td>
<td>Specifies the speed curve of the animation</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之五]]></title>
      <url>http://rrkaige.com/2016/09/13/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%94/</url>
      <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160913-myblog44.png" alt="CSS"></p>
<a id="more"></a>
<h3 id="CSS3-Rounded-Corners"><a href="#CSS3-Rounded-Corners" class="headerlink" title="CSS3 Rounded Corners"></a>CSS3 Rounded Corners</h3><p>With CSS3, you can give any element “rounded corners”, by using the <code>border-radius</code> property.</p>
<p><strong>Tip:</strong> The <code>border-radius</code> property is actually a shorthand property for the <code>border-top-left-radius</code>, <code>border-top-right-radius</code>, <code>border-bottom-right-radius</code> and <code>border-bottom-left-radius</code> properties.</p>
<p>If you specify only one value for the border-radius property, this radius will be applied to all 4 corners. However, you can specify each corner separately if you wish. Here are the rules:</p>
<ul>
<li><strong>Four values:</strong> first value applies to top-left, second value applies to top-right, third value applies to bottom-right, and fourth value applies to bottom-left corner</li>
<li><strong>Three values:</strong> first value applies to top-left, second value applies to top-right and bottom-left, and third value applies to bottom-right</li>
<li><strong>Two values:</strong> first value applies to top-left and bottom-right corner, and the second value applies to top-right and bottom-left corner</li>
<li><strong>One value:</strong> all four corners are rounded equally</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#rcorners1 &#123;</div><div class="line">    border-radius: 25px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#rcorners2 &#123;</div><div class="line">    border-radius: 15px 50px 30px 5px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#rcorners3 &#123;</div><div class="line">    border-radius: 15px 50px 30px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#rcorners4 &#123;</div><div class="line">    border-radius: 15px 50px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#rcorners5 &#123;</div><div class="line">    border-radius: 50px/15px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#rcorners6 &#123;</div><div class="line">    border-radius: 50%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>border-radius</td>
<td>A shorthand property for setting all the four border-radius properties</td>
</tr>
<tr>
<td>border-top-left-radius</td>
<td>Defines the shape of the border of the top-left corner</td>
</tr>
<tr>
<td>border-top-right-radius</td>
<td>Defines the shape of the border of the top-right corner</td>
</tr>
<tr>
<td>border-bottom-right-radius</td>
<td>Defines the shape of the border of the bottom-right corner</td>
</tr>
<tr>
<td>border-bottom-left-radius</td>
<td>Defines the shape of the border of the bottom-left corner</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Border-Images"><a href="#CSS3-Border-Images" class="headerlink" title="CSS3 Border Images"></a>CSS3 Border Images</h3><p>The CSS3 <code>border-image</code> property allows you to specify an image to be used instead of the normal border around an element.</p>
<p>The property has three parts:</p>
<ol>
<li>The image to use as the border</li>
<li>Where to slice the image</li>
<li>Define whether the middle sections should be repeated or stretched</li>
</ol>
<p>The <code>border-image</code> property takes the image and slices it into nine sections, like a tic-tac-toe board. It then places the corners at the corners, and the middle sections are repeated or stretched as you specify.</p>
<p><strong>Note:</strong> For <code>border-image</code> to work, the element also needs the <code>border</code> property set!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#borderimg1 &#123;</div><div class="line">    border: 10px solid transparent;</div><div class="line">    padding: 15px;</div><div class="line">    -webkit-border-image: url(border.png) 30 round; /* Safari 3.1-5 */</div><div class="line">    -o-border-image: url(border.png) 30 round; /* Opera 11-12.1 */</div><div class="line">    border-image: url(border.png) 30 round;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#borderimg2 &#123;</div><div class="line">    border: 10px solid transparent;</div><div class="line">    padding: 15px;</div><div class="line">    -webkit-border-image: url(border.png) 30 stretch; /* Safari 3.1-5 */</div><div class="line">    -o-border-image: url(border.png) 30 stretch; /* Opera 11-12.1 */</div><div class="line">    border-image: url(border.png) 30 stretch;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#borderimg3 &#123;</div><div class="line">    border: 10px solid transparent;</div><div class="line">    padding: 15px;</div><div class="line">    -webkit-border-image: url(border.png) 30% round; /* Safari 3.1-5 */</div><div class="line">    -o-border-image: url(border.png) 30% round; /* Opera 11-12.1 */</div><div class="line">    border-image: url(border.png) 30% round;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> The <code>border-image</code> property is actually a shorthand property for the <code>border-image-source</code>, <code>border-image-slice</code>, <code>border-image-width</code>, <code>border-image-outset</code> and <code>border-image-repeat</code> properties.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>border-image</td>
<td>A shorthand property for setting all the border-image properties</td>
</tr>
<tr>
<td>border-image-source</td>
<td>Specifies the path to the image to be used as a border</td>
</tr>
<tr>
<td>border-image-slice</td>
<td>Specifies how to slice the border image</td>
</tr>
<tr>
<td>border-image-width</td>
<td>Specifies the widths of the border image</td>
</tr>
<tr>
<td>border-image-outset</td>
<td>Specifies the amount by which the border image area extends beyond the border box</td>
</tr>
<tr>
<td>border-image-repeat</td>
<td>Specifies whether the border image should be repeated, rounded or stretched</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Backgrounds"><a href="#CSS3-Backgrounds" class="headerlink" title="CSS3 Backgrounds"></a>CSS3 Backgrounds</h3><p>CSS3 allows you to add multiple background images for an element, through the <code>background-image</code> property. The different background images are separated by commas, and the images are stacked on top of each other, where the first image is closest to the viewer.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#example1 &#123;</div><div class="line">    background-image: url(img_flwr.gif), url(paper.gif);</div><div class="line">    background-position: right bottom, left top;</div><div class="line">    background-repeat: no-repeat, repeat;</div><div class="line">    background-size: 50px, auto;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#example2 &#123;</div><div class="line">    background: url(img_flwr.gif) right bottom no-repeat, url(paper.gif) left top repeat;</div><div class="line">    background-size: 50px, html &#123;</div><div class="line">    background: url(img_flower.jpg) no-repeat center fixed; </div><div class="line">    background-size: cover;</div><div class="line">&#125;auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The CSS3 <code>background-size</code> property allows you to specify the size of background images. Before CSS3, the size of a background image was the actual size of the image. CSS3 allows us to re-use background images in different contexts. The size can be specified in lengths, percentages, or by using one of the two keywords: contain or cover.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#div1 &#123;</div><div class="line">    background: url(img_flower.jpg);</div><div class="line">    background-size: 100px 80px;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The two other possible values for <code>background-size</code> are <code>contain</code> and <code>cover</code>.</p>
<ul>
<li><p>The <code>contain</code> keyword scales the background image to be as large as possible (but both its width and its height must fit inside the content area). As such, depending on the proportions of the background image and the background positioning area, there may be some areas of the background which are not covered by the background image.</p>
</li>
<li><p>The <code>cover</code> keyword scales the background image so that the content area is completely covered by the background image (both its width and height are equal to or exceed the content area). As such, some parts of the background image may not be visible in the background positioning area.</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#div2 &#123;</div><div class="line">    background: url(img_flower.jpg);</div><div class="line">    background-size: contain;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">&#125;</div><div class="line">#div3 &#123;</div><div class="line">    background: url(img_flower.jpg);</div><div class="line">    background-size: cover;</div><div class="line">    background-repeat: no-repeat;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">html &#123;</div><div class="line">    background: url(img_flower.jpg) no-repeat center fixed; </div><div class="line">    background-size: cover;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The CSS3 <code>background-origin</code> property specifies where the background image is positioned. The property takes three different values:</p>
<ul>
<li><strong>border-box</strong> - the background image starts from the upper left corner of the border</li>
<li><strong>padding-box</strong> - (default) the background image starts from the upper left corner of the padding edge</li>
<li><strong>content-box</strong> - the background image starts from the upper left corner of the content</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#example1 &#123;</div><div class="line">    border: 10px solid black;</div><div class="line">    padding: 35px;</div><div class="line">    background: url(img_flwr.gif);</div><div class="line">    background-repeat: no-repeat;</div><div class="line">    background-origin: content-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The CSS3 <code>background-clip</code> property specifies the painting area of the background. The property takes three different values:</p>
<ul>
<li><strong>border-box</strong> - (default) the background is painted to the outside edge of the border</li>
<li><strong>padding-box</strong> - the background is painted to the outside edge of the padding</li>
<li><strong>content-box</strong> - the background is painted within the content box</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#example2 &#123;</div><div class="line">    border: 10px dotted black;</div><div class="line">    padding: 35px;</div><div class="line">    background: yellow;</div><div class="line">    background-clip: content-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>background</td>
<td>A shorthand property for setting all the background properties in one declaration</td>
</tr>
<tr>
<td>background-clip</td>
<td>Specifies the painting area of the background</td>
</tr>
<tr>
<td>background-image</td>
<td>Specifies one or more background images for an element</td>
</tr>
<tr>
<td>background-origin</td>
<td>Specifies where the background image(s) is/are positioned</td>
</tr>
<tr>
<td>background-size</td>
<td>Specifies the size of the background image(s)</td>
</tr>
</tbody>
</table>
<h3 id="CSS3-Colors"><a href="#CSS3-Colors" class="headerlink" title="CSS3 Colors"></a>CSS3 Colors</h3><p>CSS supports color names, hexadecimal and RGB colors. In addition, CSS3 also introduces:</p>
<ul>
<li>RGBA colors</li>
<li>HSL colors</li>
<li>HSLA colors</li>
<li>opacity</li>
</ul>
<p>RGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity for a color.</p>
<p>An RGBA color value is specified with: <code>rgba(red, green, blue, alpha)</code>. The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#p1 &#123;background-color: rgba(255, 0, 0, 0.3);&#125;  /* red with opacity */</div></pre></td></tr></table></figure>
<p>HSL stands for Hue, Saturation and Lightness. An HSL color value is specified with: <code>hsl(hue, saturation, lightness)</code>.</p>
<ul>
<li>Hue is a degree on the color wheel (from 0 to 360): 0 (or 360) is red, 120 is green, 240 is blue.</li>
<li>Saturation is a percentage value: 100% is the full color.</li>
<li>Lightness is also a percentage; 0% is dark (black) and 100% is white.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#p2 &#123;background-color: hsl(120, 100%, 50%);&#125;  /* green */</div></pre></td></tr></table></figure>
<p>HSLA color values are an extension of HSL color values with an alpha channel - which specifies the opacity for a color.</p>
<p>An HSLA color value is specified with: <code>hsla(hue, saturation, lightness, alpha)</code>, where the alpha parameter defines the opacity. The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#p3 &#123;background-color: hsla(120, 100%, 50%, 0.3);&#125;  /* green with opacity */</div></pre></td></tr></table></figure>
<p>The CSS3 <code>opacity</code> property sets the opacity for a specified RGB value. Its value must be a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#p4 &#123;background-color:rgb(255,0,0);opacity:0.6;&#125;  /* red with opacity */</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> the text above will also be opaque.</p>
<h3 id="CSS3-Gradients"><a href="#CSS3-Gradients" class="headerlink" title="CSS3 Gradients"></a>CSS3 Gradients</h3><p>CSS3 gradients let you display smooth transitions between two or more specified colors. CSS3 defines two types of gradients:</p>
<h4 id="Linear-Gradients-goes-down-up-left-right-diagonally"><a href="#Linear-Gradients-goes-down-up-left-right-diagonally" class="headerlink" title="Linear Gradients (goes down/up/left/right/diagonally)"></a>Linear Gradients (goes down/up/left/right/diagonally)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">background: linear-gradient(direction, color-stop1, color-stop2, ...);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">#grad1 &#123;</div><div class="line">    background: red; /* For browsers that do not support gradients */</div><div class="line">    background: -webkit-linear-gradient(red, yellow); /* For Safari 5.1 to 6.0 */</div><div class="line">    background: -o-linear-gradient(red, yellow); /* For Opera 11.1 to 12.0 */</div><div class="line">    background: -moz-linear-gradient(red, yellow); /* For Firefox 3.6 to 15 */</div><div class="line">    background: linear-gradient(red, yellow); /* Standard syntax */</div><div class="line">&#125;</div><div class="line"></div><div class="line">#grad2 &#123;</div><div class="line">  background: linear-gradient(to right, red , yellow); /* Standard syntax */</div><div class="line">&#125;</div><div class="line"></div><div class="line">#grad3 &#123;</div><div class="line">  background: linear-gradient(to bottom right, red, yellow); /* Standard syntax */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">background: linear-gradient(angle, color-stop1, color-stop2);</div></pre></td></tr></table></figure>
<p>The <code>angle</code> is specified as an angle between a horizontal line and the gradient line.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#grad4 &#123;</div><div class="line">  background: linear-gradient(-90deg, red, yellow); /* Standard syntax */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#grad5 &#123;</div><div class="line">  background: linear-gradient(red, yellow, green); /* Standard syntax */</div><div class="line">&#125;</div><div class="line"></div><div class="line">#grad6 &#123;</div><div class="line">  /* Standard syntax */</div><div class="line">  background: linear-gradient(to right, red,orange,yellow,green,blue,indigo,violet); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#grad7 &#123;</div><div class="line">  background: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1)); /*Standard*/</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#grad8 &#123;</div><div class="line">  /* Standard syntax */</div><div class="line">  background: repeating-linear-gradient(red, yellow 10%, green 20%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Radial-Gradients-defined-by-their-center"><a href="#Radial-Gradients-defined-by-their-center" class="headerlink" title="Radial Gradients (defined by their center)"></a>Radial Gradients (defined by their center)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">background: radial-gradient(shape size at position, start-color, ..., last-color);</div></pre></td></tr></table></figure>
<p>By default, shape is <strong>ellipse</strong>, size is <strong>farthest-corner</strong>, and position is <strong>center</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#grad1 &#123;</div><div class="line">  background: red; /* For browsers that do not support gradients */</div><div class="line">  background: -webkit-radial-gradient(red, yellow, green); /* Safari 5.1 to 6.0 */</div><div class="line">  background: -o-radial-gradient(red, yellow, green); /* For Opera 11.6 to 12.0 */</div><div class="line">  background: -moz-radial-gradient(red, yellow, green); /* For Firefox 3.6 to 15 */</div><div class="line">  background: radial-gradient(red, yellow, green); /* Standard syntax */</div><div class="line">&#125;</div><div class="line"></div><div class="line">#grad2 &#123;</div><div class="line">  background: radial-gradient(red 5%, yellow 15%, green 60%); /* Standard syntax */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The shape parameter defines the shape. It can take the value <strong>circle</strong> or <strong>ellipse</strong>. The default value is ellipse.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#grad3 &#123;</div><div class="line">  background: radial-gradient(circle, red, yellow, green); /* Standard syntax */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The size parameter defines the size of the gradient. It can take four values: <strong>closest-side</strong>, <strong>farthest-side</strong>, <strong>closest-corner</strong>, <strong>farthest-corner</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#grad4 &#123;</div><div class="line">  /* Standard syntax */</div><div class="line">  background: radial-gradient(closest-side at 60% 55%, red, yellow, black);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#grad5 &#123;</div><div class="line">  /* Standard syntax */</div><div class="line">  background: repeating-radial-gradient(red, yellow 10%, green 15%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[走吧]]></title>
      <url>http://rrkaige.com/2016/09/12/%E8%B5%B0%E5%90%A7/</url>
      <content type="html"><![CDATA[<p>一下午时间给了德国自干五，老雷。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160912-myblog43.jpg" alt="Christoph Rehage"></p>
<a id="more"></a>
<p>先看到他的视频，关于时事政治，讽刺意味十足。巧的是，很多说到 Mao，那几场大动乱，恰合我之前看的书。仁者见仁智者见智，且随它去。</p>
<p>后进入他的 <a href="http://christophrehage.cn/" target="_blank" rel="external"> 个人博客</a>，发现很多趣事。他曾在 2007 年到 2008 年花费一年时间从北京徒步到乌鲁木齐，行程 4000 多公里！他背着装备，挎着相机，沿途记录下无数瞬间。他还拉着小板车，行进在大西北，结交很多朋友。难以想象，从光头到满脸络腮，他仅仅是想去走走。2010 年，2012 年，他又分别继续，直至中哈边境。</p>
<p>我仔仔细细看完他的文字，感觉热血沸腾，或许我骨子里就有着不羁。每个人骨子里都有着自由的渴望吧，恨不能转身就走，看遍天涯海角。当然，我现在已经冷静下来。敲下这些话时，我拒绝了自己。走吧？也只能让梦想随风而去。</p>
<p>然后，我想起大学毕业时，那次武功山徒步。我觉得，需要找时间好好回忆。</p>
<p>我又给自己挖了个坑。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之四]]></title>
      <url>http://rrkaige.com/2016/09/08/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B/</url>
      <content type="html"><![CDATA[<p> 继续昨天学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160908-myblog42.jpg" alt="Learn CSS"></p>
<a id="more"></a>
<h3 id="CSS-Combinators"><a href="#CSS-Combinators" class="headerlink" title="CSS Combinators"></a>CSS Combinators</h3><p>A combinator is something that explains the relationship between the selectors. There are four different combinators in CSS3:</p>
<ul>
<li>descendant selector (space) matches all elements that are descendants of a specified element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div p &#123;</div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>child selector (&gt;) selects all elements that are the immediate children of a specified element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &gt; p &#123;</div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>adjacent sibling selector (+) selector selects all elements that are the adjacent siblings of a specified element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div + p &#123;</div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>general sibling selector (~) selects all elements that are siblings of a specified element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div ~ p &#123;</div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Pseudo-classes"><a href="#CSS-Pseudo-classes" class="headerlink" title="CSS Pseudo-classes"></a>CSS Pseudo-classes</h3><p>A pseudo-class is used to define a special state of an element. For example, it can be used to:</p>
<ul>
<li>Style an element when a user mouses over it</li>
<li>Style visited and unvisited links differently</li>
<li>Style an element when it gets focus</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">selector:pseudo-class &#123;</div><div class="line">    property:value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Pseudo-elements"><a href="#CSS-Pseudo-elements" class="headerlink" title="CSS Pseudo-elements"></a>CSS Pseudo-elements</h3><p>A CSS pseudo-element is used to style specified parts of an element. For example, it can be used to:</p>
<ul>
<li>Style the first letter, or line, of an element</li>
<li>Insert content before, or after, the content of an element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">selector::pseudo-element &#123;</div><div class="line">    property:value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Notes:</strong></p>
<ul>
<li>Notice the <strong>double colon notation</strong> - <code>::first-line</code> versus <code>:first-line</code></li>
<li>The double colon replaced the single-colon notation for pseudo-elements in CSS3. This was an attempt from W3C to distinguish between <strong>pseudo-classes</strong> and <strong>pseudo-elements</strong>.</li>
<li>The single-colon syntax was used for both pseudo-classes and pseudo-elements in CSS2 and CSS1.</li>
<li>For backward compatibility, the single-colon syntax is acceptable for CSS2 and CSS1 pseudo-elements.</li>
</ul>
<table>
<thead>
<tr>
<th>Selector</th>
<th>Example</th>
<th>Example description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>::after</code></td>
<td><code>p::after</code></td>
<td>Insert something after the content of each <code>&lt;p&gt;</code> element</td>
</tr>
<tr>
<td><code>::before</code></td>
<td><code>p::before</code></td>
<td>Insert something before the content of each <code>&lt;p&gt;</code> element</td>
</tr>
<tr>
<td><code>::first-letter</code></td>
<td><code>p::first-letter</code></td>
<td>Selects the first letter of each <code>&lt;p&gt;</code> element</td>
</tr>
<tr>
<td><code>::first-line</code></td>
<td><code>p::first-line</code></td>
<td>Selects the first line of each <code>&lt;p&gt;</code> element</td>
</tr>
<tr>
<td><code>::selection</code></td>
<td><code>p::selection</code></td>
<td>Selects the portion of an element that is selected by a user</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Opacity-Transparency"><a href="#CSS-Opacity-Transparency" class="headerlink" title="CSS Opacity / Transparency"></a>CSS Opacity / Transparency</h3><p>The <code>opacity</code> property specifies the opacity/transparency of an element. It can take a value from 0.0 - 1.0. The lower value, the more transparent.</p>
<p><strong>Note:</strong> IE8 and earlier use <code>filter:alpha(opacity=x)</code>. The x can take a value from 0 - 100. A lower value makes the element more transparent.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    opacity: 0.5;</div><div class="line">    filter: alpha(opacity=50); /* For IE8 and earlier */</div><div class="line">&#125;</div><div class="line"></div><div class="line">img:hover &#123;</div><div class="line">    opacity: 1.0;</div><div class="line">    filter: alpha(opacity=100); /* For IE8 and earlier */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>An RGBA color value is specified with: rgba(red, green, blue, <em>alpha</em>). The <em>alpha</em> parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    background: rgba(76, 175, 80, 0.3) /* Green background with 30% opacity */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Attribute-Selectors"><a href="#CSS-Attribute-Selectors" class="headerlink" title="CSS Attribute Selectors"></a>CSS Attribute Selectors</h3><ol>
<li>The <code>[attribute]</code> selector is used to select elements with <strong>a specified attribute</strong>.</li>
</ol>
<p>The following example selects all <code>&lt;a&gt;</code> elements with a target attribute:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a[target] &#123;</div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>The <code>[attribute=&quot;value&quot;]</code> selector is used to select elements with a <strong>specified attribute and value</strong>.</li>
</ol>
<p>The following example selects all <code>&lt;a&gt;</code> elements with a target=”_blank” attribute:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a[target=&quot;_blank&quot;] &#123; </div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>The <code>[attribute~=&quot;value&quot;]</code> selector is used to select elements with an attribute value <strong>containing</strong> a specified word.</li>
</ol>
<p>The following example selects all elements with a title attribute that contains a space-separated list of words, one of which is “flower”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[title~=&quot;flower&quot;] &#123;</div><div class="line">    border: 5px solid yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The example above will match elements with title=”flower”, title=”summer flower”, and title=”flower new”, but not title=”my-flower” or title=”flowers”.</p>
<ol>
<li>The <code>[attribute|=&quot;value&quot;]</code> selector is used to select elements with the specified attribute <strong>starting with</strong> the specified value.</li>
</ol>
<p>The following example selects all elements with a class attribute value that begins with “top”:</p>
<p><strong>Note:</strong> The value has to be a whole word, either alone, like class=”top”, or followed by a hyphen(-), like class=”top-text”!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[class|=&quot;top&quot;] &#123;</div><div class="line">    background: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>The <code>[attribute^=&quot;value&quot;]</code> selector is used to select elements whose attribute value <strong>begins with</strong> a specified value.</li>
</ol>
<p>The following example selects all elements with a class attribute value that begins with “top”:</p>
<p><strong>Note:</strong> The value does not have to be a whole word!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[class^=&quot;top&quot;] &#123;</div><div class="line">    background: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>The <code>[attribute$=&quot;value&quot;]</code> selector is used to select elements whose attribute value <strong>ends with</strong> a specified value.</li>
</ol>
<p>The following example selects all elements with a class attribute value that ends with “test”:</p>
<p><strong>Note:</strong> The value does not have to be a whole word!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[class$=&quot;test&quot;] &#123;</div><div class="line">    background: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>The <code>[attribute*=&quot;value&quot;]</code> selector is used to select elements whose attribute value <strong>contains</strong> a specified value.</li>
</ol>
<p>The following example selects all elements with a class attribute value that contains “te”:</p>
<p><strong>Note:</strong> The value does not have to be a whole word!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[class*=&quot;te&quot;] &#123;</div><div class="line">    background: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Counters"><a href="#CSS-Counters" class="headerlink" title="CSS Counters"></a>CSS Counters</h3><p>CSS counters are like “variables”. The variable values can be incremented by CSS rules (which will track how many times they are used).</p>
<p>To work with CSS counters we will use the following properties:</p>
<ul>
<li><code>counter-reset</code> - Creates or resets a counter</li>
<li><code>counter-increment</code> - Increments a counter value</li>
<li><code>content</code> - Inserts generated content</li>
<li><code>counter()</code> or <code>counters()</code> function - Adds the value of a counter to an element</li>
</ul>
<p>To use a CSS counter, it must first be created with <code>counter-reset</code>.</p>
<p>The following example creates one counter for the page (section) and one counter for each <code>&lt;h1&gt;</code> element (subsection). The “section” counter will be counted for each <code>&lt;h1&gt;</code> element with “<code>Section &lt;value of the section counter&gt;.</code>“, and the “subsection” counter will be counted for each <code>&lt;h2&gt;</code> element with “<code>&lt;value of the section counter&gt;.&lt;value of the subsection counter&gt;</code>“:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">    counter-reset: section;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h1 &#123;</div><div class="line">    counter-reset: subsection;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h1::before &#123;</div><div class="line">    counter-increment: section;</div><div class="line">    content: &quot;Section &quot; counter(section) &quot;. &quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h2::before &#123;</div><div class="line">    counter-increment: subsection;</div><div class="line">    content: counter(section) &quot;.&quot; counter(subsection) &quot; &quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>A counter can also be useful to make outlined lists because a new instance of a counter is automatically created in child elements. Here we use the <code>counters()</code> function to insert a string between different levels of nested counters:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ol &#123;</div><div class="line">    counter-reset: section;</div><div class="line">    list-style-type: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line">li::before &#123;</div><div class="line">    counter-increment: section;</div><div class="line">    content: counters(section,&quot;.&quot;) &quot; &quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>content</td>
<td>Used with the ::before and ::after pseudo-elements, to insert generated content</td>
</tr>
<tr>
<td>counter-increment</td>
<td>Increments one or more counter values</td>
</tr>
<tr>
<td>counter-reset</td>
<td>Creates or resets one or more counters</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[收拾]]></title>
      <url>http://rrkaige.com/2016/09/07/%E6%94%B6%E6%8B%BE/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 谁控制过去，谁就控制未来；谁控制现在，谁就控制过去。</p>
</blockquote>
<p> 我的信仰从未如此动摇，虽然我也说不清自己的信仰。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160907-myblog41.jpg" alt="Sweet Vertigo"></p>
<a id="more"></a>
<p> 花了三四天，看完《Mao: The Unknown Story》，无以言表。按理说，这是一株“毒草”，一些内容简直颠覆所有认知。翻墙之后，很多东西已不是秘密。那些墙外的，客观的主观的，抨击的讨伐的，如波涛汹涌的大海一浪接一浪。但我不曾动摇。原因很多，而我也不是应声虫。不过，这本书对我的冲击之大，尤甚以往。</p>
<p> 我完全陷在书里，现在想来，其写作手法非常老练，不知不觉就进入那个世界。Mao 的一生是“运动”的一生，他果决隐忍而近乎冷血，对家人对同志对人民都毫无感情。他从无数斗争中崛起，根据地反围剿国共合作抗日战争解放战争，却都扮演着反面角色，为权柄不择手段。他押注重工业军工业，持续压榨人民口粮，几十年人民生活水平毫无提高甚至倒退。他打肿脸充胖子，四处撒钱多方开战，妄图领导世界修理地球。他享受特权生活，美食别墅跳舞游泳，专列专机专人服务。当然，还有无数运动，肃反整风大清洗，改造反右大革命，红卫兵造反派横行霸道，无数人死去，无数家庭破灭。他用个人崇拜和恐怖运动，掌握舆论控制思想，进行全民洗脑。“我死后，哪管洪水滔天”，而今，他的像仍然高挂在天安门城楼上。</p>
<p> 多么颠覆性的话语！我现在已分不清事实，或许永远也不知道真相。作者的身份当然会导致一定偏向，采访的对象也会有情感的亲疏，档案的记录更值得三分考量。假作真时真亦假，所有人的判断均无绝对的客观公正。那些几百万上千万数十亿的数字，我半信半疑。当然我还记得祖辈提起过那段黑暗的日子。青壮年差点饿死，初生的孩子养不起想着溺死，十几岁的小孩去挑土筑圩，营养不良导致一辈子骨瘦如柴。但人是健忘的，我们这一代，生在红旗下，长在春风里，无知又无畏。</p>
<p> 成王败寇，历史是胜利者书写的。一将功成万骨枯，王侯将相丰功伟业，背后是无数劳动者的鲜血，普通大众才是渺小而伟大的。不过想想，那些事实又与我何干。日子照过，时间流逝，所有痛苦都会被碾得粉碎，扫进历史的垃圾堆。</p>
<p> 收拾下心情，该咋咋地。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之三]]></title>
      <url>http://rrkaige.com/2016/09/06/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/</url>
      <content type="html"><![CDATA[<p> 继续昨天学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160906-myblog40.jpg" alt="HTML and CSS"></p>
<a id="more"></a>
<h3 id="CSS-Layout-The-display-Property"><a href="#CSS-Layout-The-display-Property" class="headerlink" title="CSS Layout - The display Property"></a>CSS Layout - The display Property</h3><p>The <code>display</code> property specifies if/how an element is displayed. Every HTML element has a default display value depending on what type of element it is. The default display value for most elements is <code>block</code> or <code>inline</code>.</p>
<ul>
<li>A <strong>block-level</strong> element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).</li>
<li>An <strong>inline</strong> element does not start on a new line and only takes up as much width as necessary.</li>
</ul>
<p><strong>Note:</strong> Setting the display property of an element only changes <strong>how the element is displayed</strong>, NOT what kind of element it is. So, an inline element with <code>display: block;</code> is not allowed to have other block elements inside it.</p>
<p>Hiding an element can be done by setting the <code>display</code> property to <code>none</code>. The element will be hidden, and the page will be displayed as if the element is not there:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">h1.hidden &#123;</div><div class="line">    display: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>visibility:hidden;</code> also hides an element. However, the element will still take up the same space as before. The element will be hidden, but still affect the layout:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">h1.hidden &#123;</div><div class="line">    visibility: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>display</td>
<td>Specifies how an element should be displayed</td>
</tr>
<tr>
<td>visibility</td>
<td>Specifies whether or not an element should be visible</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Layout-width-and-max-width"><a href="#CSS-Layout-width-and-max-width" class="headerlink" title="CSS Layout - width and max-width"></a>CSS Layout - width and max-width</h3><p>Setting the <code>width</code> of a block-level element will prevent it from stretching out to the edges of its container. </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">div.ex1 &#123;</div><div class="line">    width: 500px;</div><div class="line">    margin: auto;</div><div class="line">    border: 3px solid #73AD21;</div><div class="line">&#125;</div><div class="line"></div><div class="line">div.ex2 &#123;</div><div class="line">    max-width: 500px;</div><div class="line">    margin: auto;</div><div class="line">    border: 3px solid #73AD21;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The problem with the <code>&lt;div&gt;</code> above occurs when the browser window is smaller than the width of the element. The browser then adds a horizontal scrollbar to the page.</p>
<p>Using <code>max-width</code> instead, in this situation, will improve the browser’s handling of small windows. </p>
<h3 id="CSS-Layout-The-position-Property"><a href="#CSS-Layout-The-position-Property" class="headerlink" title="CSS Layout - The position Property"></a>CSS Layout - The position Property</h3><p>The <code>position</code> property specifies the type of positioning method used for an element. There are four different position values:</p>
<ul>
<li><code>static</code>- (by default) is not positioned in any special way.</li>
<li><code>relative</code> is positioned relative to its normal position.</li>
<li><code>fixed</code> is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.</li>
<li><code>absolute</code> is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).</li>
</ul>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>bottom</td>
<td>Sets the bottom margin edge for a positioned box</td>
</tr>
<tr>
<td>clip</td>
<td>Clips an absolutely positioned element</td>
</tr>
<tr>
<td>cursor</td>
<td>Specifies the type of cursor to be displayed</td>
</tr>
<tr>
<td>left</td>
<td>Sets the left margin edge for a positioned box</td>
</tr>
<tr>
<td>overflow</td>
<td>Specifies what happens if content overflows an element’s box</td>
</tr>
<tr>
<td>overflow-x</td>
<td>Specifies what to do with the left/right edges of the content if it overflows the element’s content area</td>
</tr>
<tr>
<td>overflow-y</td>
<td>Specifies what to do with the top/bottom edges of the content if it overflows the element’s content area</td>
</tr>
<tr>
<td>position</td>
<td>Specifies the type of positioning for an element</td>
</tr>
<tr>
<td>right</td>
<td>Sets the right margin edge for a positioned box</td>
</tr>
<tr>
<td>top</td>
<td>Sets the top margin edge for a positioned box</td>
</tr>
<tr>
<td>z-index</td>
<td>Sets the stack order of an element</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Layout-Overflow"><a href="#CSS-Layout-Overflow" class="headerlink" title="CSS Layout - Overflow"></a>CSS Layout - Overflow</h3><p>The CSS <code>overflow</code> property specifies whether to clip content or to add scrollbars when the content of an element is too big to fit in a specified area.</p>
<ul>
<li><strong>visible</strong> - Default. The overflow is not clipped. It renders outside the element’s box</li>
<li><strong>hidden</strong> - The overflow is clipped, and the rest of the content will be invisible</li>
<li><strong>scroll</strong> - The overflow is clipped, but a scrollbar is added to see the rest of the content</li>
<li><strong>auto</strong> - If overflow is clipped, a scrollbar should be added to see the rest of the content</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    width: 200px;</div><div class="line">    height: 50px;</div><div class="line">    background-color: #eee;</div><div class="line">    overflow: visible;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>The overflow property only works for block elements with a specified height.</li>
<li>In OS X Lion (on Mac), scrollbars are hidden by default and only shown when being used (even though “<code>overflow:scroll</code>“ is set).</li>
</ul>
<p>The <code>overflow-x</code> and <code>overflow-y</code> properties specifies whether to change the overflow of content just horizontally or vertically (or both):</p>
<ul>
<li>overflow-x specifies what to do with the left/right edges of the content.</li>
<li>overflow-y specifies what to do with the top/bottom edges of the content.</li>
</ul>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>overflow</td>
<td>Specifies what happens if content overflows an element’s box</td>
</tr>
<tr>
<td>overflow-x</td>
<td>Specifies what to do with the left/right edges of the content if it overflows the element’s content area</td>
</tr>
<tr>
<td>overflow-y</td>
<td>Specifies what to do with the top/bottom edges of the content if it overflows the element’s content area</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Layout-float-and-clear"><a href="#CSS-Layout-float-and-clear" class="headerlink" title="CSS Layout - float and clear"></a>CSS Layout - float and clear</h3><p>The <code>float</code> property specifies whether or not an element should float.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    float: right;</div><div class="line">    margin: 0 0 10px 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <code>clear</code> property is used to control the behavior of floating elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    clear: left;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>If an element is taller than the element containing it, and it is floated, it will overflow outside of its container. Then we can add <code>overflow: auto;</code> to the containing element to fix this problem:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.clearfix &#123;</div><div class="line">    overflow: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>clear</td>
<td>Specifies on which sides of an element where floating elements are not allowed to float</td>
</tr>
<tr>
<td>float</td>
<td>Specifies whether or not an element should float</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Layout-inline-block"><a href="#CSS-Layout-inline-block" class="headerlink" title="CSS Layout - inline-block"></a>CSS Layout - inline-block</h3><p>The old way - using <code>float</code> (notice that we also need to specify a <code>clear</code> property for the element after the floating boxes):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.floating-box &#123;</div><div class="line">    float: left;</div><div class="line">    width: 150px;</div><div class="line">    height: 75px;</div><div class="line">    margin: 10px;</div><div class="line">    border: 3px solid #73AD21; </div><div class="line">&#125;</div><div class="line"></div><div class="line">.after-box &#123;</div><div class="line">    clear: left;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The same effect can be achieved by using the <code>inline-block</code> value of the <code>display</code> property (notice that no <code>clear</code> property is needed):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.floating-box &#123;</div><div class="line">    display: inline-block;</div><div class="line">    width: 150px;</div><div class="line">    height: 75px;</div><div class="line">    margin: 10px;</div><div class="line">    border: 3px solid #73AD21; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Layout-Horizontal-amp-Vertical-Align"><a href="#CSS-Layout-Horizontal-amp-Vertical-Align" class="headerlink" title="CSS Layout - Horizontal &amp; Vertical Align"></a>CSS Layout - Horizontal &amp; Vertical Align</h3><ul>
<li>Center Align Elements - use <code>margin: auto;</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.center &#123;</div><div class="line">    margin: auto;</div><div class="line">    width: 50%;</div><div class="line">    border: 3px solid green;</div><div class="line">    padding: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Center Align Text - use <code>text-align: center;</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.center &#123;</div><div class="line">    text-align: center;</div><div class="line">    border: 3px solid green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Center an Image - use <code>margin: auto;</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">    display: block;</div><div class="line">    margin: auto;</div><div class="line">    width: 40%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Center Vertically - Using <code>padding</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.center &#123;</div><div class="line">    padding: 70px 0;</div><div class="line">    border: 3px solid green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Center Vertically - Using <code>line-height</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">.center &#123;</div><div class="line">    line-height: 200px;</div><div class="line">    height: 200px;</div><div class="line">    border: 3px solid green;</div><div class="line">    text-align: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* If the text has multiple lines, add the following: */</div><div class="line">.center p &#123;</div><div class="line">    line-height: 1.5;</div><div class="line">    display: inline-block;</div><div class="line">    vertical-align: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Center Vertically - Using <code>position</code> &amp; <code>transform</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">.center &#123; </div><div class="line">    height: 200px;</div><div class="line">    position: relative;</div><div class="line">    border: 3px solid green; </div><div class="line">&#125;</div><div class="line"></div><div class="line">.center p &#123;</div><div class="line">    margin: 0;</div><div class="line">    position: absolute;</div><div class="line">    top: 50%;</div><div class="line">    left: 50%;</div><div class="line">    transform: translate(-50%, -50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Left and Right Align - Using <code>position</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.right &#123;</div><div class="line">    position: absolute;</div><div class="line">    right: 0px;</div><div class="line">    width: 300px;</div><div class="line">    border: 3px solid #73AD21;</div><div class="line">    padding: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Absolute positioned elements are removed from the normal flow, and can overlap elements.</p>
<p><strong>Tip:</strong> When aligning elements with <code>position</code>, always define <code>margin</code> and <code>padding</code> for the <code>&lt;body&gt;</code> element. This is to avoid visual differences in different browsers.</p>
<ul>
<li>Left and Right Align - Using <code>float</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.right &#123;</div><div class="line">    float: right;</div><div class="line">    width: 300px;</div><div class="line">    border: 3px solid #73AD21;</div><div class="line">    padding: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> When aligning elements with <code>float</code>, always define <code>margin</code> and <code>padding</code> for the <code>&lt;body&gt;</code> element. This is to avoid visual differences in different browsers.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之二]]></title>
      <url>http://rrkaige.com/2016/09/05/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p> 继续昨天学习，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160905-myblog39-1.jpg" alt="HTML5 and CSS3"></p>
<a id="more"></a>
<h3 id="CSS-Box-Model"><a href="#CSS-Box-Model" class="headerlink" title="CSS Box Model"></a>CSS Box Model</h3><p>The CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. The image below illustrates the box model:</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160905-myblog39-2.png" alt="CSS Box Model"></p>
<p>Explanation of the different parts:</p>
<ul>
<li><strong>Content</strong> - The content of the box, where text and images appear</li>
<li><strong>Padding</strong> - Clears an area around the content. The padding is transparent</li>
<li><strong>Border</strong> - A border that goes around the padding and content</li>
<li><strong>Margin</strong> - Clears an area outside the border. The margin is transparent</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    width: 300px;</div><div class="line">    border: 25px solid green;</div><div class="line">    padding: 25px;</div><div class="line">    margin: 25px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Important:</strong> When you set the width and height properties of an element with CSS, you just set the width and height of the <strong>content area</strong>. To calculate the full size of an element, you must also add padding, borders and margins.</p>
<ul>
<li>Total element width = width + left padding + right padding + left border + right border + left margin + right margin</li>
<li>Total element height = height + top padding + bottom padding + top border + bottom border + top margin + bottom margin</li>
</ul>
<h3 id="CSS-Outline"><a href="#CSS-Outline" class="headerlink" title="CSS Outline"></a>CSS Outline</h3><p>The CSS outline properties specify the style, color, and width of an outline. An outline is a line that is drawn around elements (outside the borders) to make the element “stand out”.</p>
<p>However, the outline property is different from the border property - The outline is NOT a part of an element’s dimensions; the element’s total width and height is not affected by the width of the outline.</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160905-myblog39-3.png" alt="CSS Outline"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    border: 1px solid black;</div><div class="line">    outline: 5px dotted red;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>outline</td>
<td>Sets all the outline properties in one declaration</td>
</tr>
<tr>
<td>outline-color</td>
<td>Sets the color of an outline</td>
</tr>
<tr>
<td>outline-offset</td>
<td>Specifies the space between an outline and the edge or border of an element</td>
</tr>
<tr>
<td>outline-style</td>
<td>Sets the style of an outline</td>
</tr>
<tr>
<td>outline-width</td>
<td>Sets the width of an outline</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Text"><a href="#CSS-Text" class="headerlink" title="CSS Text"></a>CSS Text</h3><table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>color</td>
<td>Sets the color of text</td>
</tr>
<tr>
<td>direction</td>
<td>Specifies the text direction/writing direction</td>
</tr>
<tr>
<td>letter-spacing</td>
<td>Increases or decreases the space between characters in a text</td>
</tr>
<tr>
<td>line-height</td>
<td>Sets the line height</td>
</tr>
<tr>
<td>text-align</td>
<td>Specifies the horizontal alignment of text</td>
</tr>
<tr>
<td>text-decoration</td>
<td>Specifies the decoration added to text</td>
</tr>
<tr>
<td>text-indent</td>
<td>Specifies the indentation of the first line in a text-block</td>
</tr>
<tr>
<td>text-shadow</td>
<td>Specifies the shadow effect added to text</td>
</tr>
<tr>
<td>text-transform</td>
<td>Controls the capitalization of text</td>
</tr>
<tr>
<td>unicode-bidi</td>
<td>Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document</td>
</tr>
<tr>
<td>vertical-align</td>
<td>Sets the vertical alignment of an element</td>
</tr>
<tr>
<td>white-space</td>
<td>Specifies how white-space inside an element is handled</td>
</tr>
<tr>
<td>word-spacing</td>
<td>Increases or decreases the space between words in a text</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Fonts"><a href="#CSS-Fonts" class="headerlink" title="CSS Fonts"></a>CSS Fonts</h3><p>In CSS, there are two types of font family names:</p>
<ul>
<li><strong>generic family</strong> - a group of font families with a similar look (like “Serif” or “Monospace”)</li>
<li><strong>font family</strong> - a specific font family (like “Times New Roman” or “Arial”)</li>
</ul>
<p><strong>Note:</strong> If the name of a font family is more than one word, it must be in quotation marks, like: “Times New Roman”.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    font-family: &quot;Times New Roman&quot;, Times, serif;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If you do not specify a font size, the default size for normal text, like paragraphs, is 16px (16px=1em).</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>font</td>
<td>Sets all the font properties in one declaration</td>
</tr>
<tr>
<td>font-family</td>
<td>Specifies the font family for text</td>
</tr>
<tr>
<td>font-size</td>
<td>Specifies the font size of text</td>
</tr>
<tr>
<td>font-style</td>
<td>Specifies the font style for text</td>
</tr>
<tr>
<td>font-variant</td>
<td>Specifies whether or not a text should be displayed in a small-caps font</td>
</tr>
<tr>
<td>font-weight</td>
<td>Specifies the weight of a font</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Links"><a href="#CSS-Links" class="headerlink" title="CSS Links"></a>CSS Links</h3><p>Links can be styled with any CSS property (e.g. color, font-family, background, etc.). In addition, links can be styled differently depending on what state they are in. The four links states are:</p>
<ul>
<li><strong>a:link</strong> - a normal, unvisited link</li>
<li><strong>a:visited</strong> - a link the user has visited</li>
<li><strong>a:hover</strong> - a link when the user mouses over it</li>
<li><strong>a:active</strong> - a link the moment it is clicked</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">/* unvisited link */</div><div class="line">a:link &#123;</div><div class="line">    color: red;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* visited link */</div><div class="line">a:visited &#123;</div><div class="line">    color: green;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* mouse over link */</div><div class="line">a:hover &#123;</div><div class="line">    color: hotpink;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* selected link */</div><div class="line">a:active &#123;</div><div class="line">    color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>When setting the style for several link states, there are some order rules:</p>
<ul>
<li><strong>a:hover</strong> MUST come after a:link and a:visited</li>
<li><strong>a:active</strong> MUST come after a:hover</li>
</ul>
<h3 id="CSS-Lists"><a href="#CSS-Lists" class="headerlink" title="CSS Lists"></a>CSS Lists</h3><p>The CSS list properties allow you to:</p>
<ul>
<li>Set different list item markers for ordered lists</li>
<li>Set different list item markers for unordered lists</li>
<li>Set an image as the list item marker</li>
<li>Add background colors to lists and list items</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ul &#123;</div><div class="line">    list-style: square inside url(&quot;sqpurple.gif&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>When using the shorthand property, the order of the property values are:</p>
<ul>
<li><strong>list-style-type</strong> (if a list-style-image is specified, the value of this property will be displayed if the image for some reason cannot be displayed)</li>
<li>list-style-position (specifies whether the list-item markers should appear inside or outside the content flow)</li>
<li><strong>list-style-image</strong> (specifies an image as the list item marker)</li>
</ul>
<p>If one of the property values above are missing, the default value for the missing property will be inserted, if any.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>list-style</td>
<td>Sets all the properties for a list in one declaration</td>
</tr>
<tr>
<td>list-style-image</td>
<td>Specifies an image as the list-item marker</td>
</tr>
<tr>
<td>list-style-position</td>
<td>Specifies if the list-item markers should appear inside or outside the content flow</td>
</tr>
<tr>
<td>list-style-type</td>
<td>Specifies the type of list-item marker</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Tables"><a href="#CSS-Tables" class="headerlink" title="CSS Tables"></a>CSS Tables</h3><p>Add a container element (like <code>&lt;div&gt;</code>) with overflow-x:auto around the <code>&lt;table&gt;</code> element to make it responsive:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&quot;overflow-x:auto;&quot;&gt;</div><div class="line"></div><div class="line">&lt;table&gt;</div><div class="line">... table content ...</div><div class="line">&lt;/table&gt;</div><div class="line"></div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>border</td>
<td>Sets all the border properties in one declaration</td>
</tr>
<tr>
<td>border-collapse</td>
<td>Specifies whether or not table borders should be collapsed</td>
</tr>
<tr>
<td>border-spacing</td>
<td>Specifies the distance between the borders of adjacent cells</td>
</tr>
<tr>
<td>caption-side</td>
<td>Specifies the placement of a table caption</td>
</tr>
<tr>
<td>empty-cells</td>
<td>Specifies whether or not to display borders and background on empty cells in a table</td>
</tr>
<tr>
<td>table-layout</td>
<td>Sets the layout algorithm to be used for a table</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 学习笔记之一]]></title>
      <url>http://rrkaige.com/2016/09/04/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>CSS 学习相关知识点梳理，教程来自 <a href="http://www.w3schools.com/css/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160904-myblog38-1.jpg" alt="Learn HTML and CSS"></p>
<a id="more"></a>
<h3 id="What-is-CSS"><a href="#What-is-CSS" class="headerlink" title="What is CSS"></a>What is CSS</h3><ul>
<li>CSS stands for <strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets</li>
<li>CSS describes <strong>how HTML elements are to be displayed on screen, paper, or in other media</strong></li>
<li>CSS <strong>saves a lot of work</strong>. It can control the layout of multiple web pages all at once</li>
<li>External stylesheets are stored in <strong>CSS files</strong></li>
</ul>
<h3 id="CSS-Syntax-and-Selectors"><a href="#CSS-Syntax-and-Selectors" class="headerlink" title="CSS Syntax and Selectors"></a>CSS Syntax and Selectors</h3><p>A CSS rule-set consists of a selector and a declaration block:</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160904-myblog38-2.gif" alt="CSS Rule-set"></p>
<p>CSS selectors are used to “find” (or select) HTML elements based on their element name, id, class, attribute, and more.</p>
<ul>
<li>The <strong>element</strong> selector selects elements based on the element name.</li>
<li>The <strong>id</strong> selector uses the id attribute of an HTML element to select a specific element.</li>
<li>The <strong>class</strong> selector selects elements with a specific class attribute.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;style&gt;</div><div class="line">h2, p &#123;</div><div class="line">    text-align: center;</div><div class="line">    color: red;</div><div class="line">&#125;</div><div class="line">#para1 &#123;</div><div class="line">    text-align: center;</div><div class="line">    color: red;</div><div class="line">&#125;</div><div class="line">.center &#123;</div><div class="line">    color: blue;</div><div class="line">&#125;</div><div class="line">p.center &#123;</div><div class="line">    text-align: center;</div><div class="line">    color: red;</div><div class="line">&#125;</div><div class="line">p.large &#123;</div><div class="line">    font-size: 300%;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;h1 class=&quot;center&quot;&gt;This heading will not be affected&lt;/h1&gt;</div><div class="line">&lt;h2&gt;Smaller heading!&lt;/h2&gt;</div><div class="line">&lt;p&gt;Every paragraph will be affected by the style.&lt;/p&gt;</div><div class="line">&lt;p id=&quot;para1&quot;&gt;Me too!&lt;/p&gt;</div><div class="line">&lt;p class=&quot;center large&quot;&gt;And me!&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>Comments are used to explain the code, and may help when you edit the source code at a later date. Comments are ignored by browsers. A CSS comment starts with <code>/*</code> and ends with <code>*/</code>. Comments can also span multiple lines.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    color: red;</div><div class="line">    /* This is a single-line comment */</div><div class="line">    text-align: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* This is</div><div class="line">a multi-line</div><div class="line">comment */</div></pre></td></tr></table></figure>
<h3 id="Three-Ways-to-Insert-CSS"><a href="#Three-Ways-to-Insert-CSS" class="headerlink" title="Three Ways to Insert CSS"></a>Three Ways to Insert CSS</h3><h4 id="External-style-sheet"><a href="#External-style-sheet" class="headerlink" title="External style sheet"></a>External style sheet</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<p>Here is how the “myStyle.css” looks:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">    background-color: lightblue;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h1 &#123;</div><div class="line">    color: navy;</div><div class="line">    margin-left: 20px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Do not add a space between the property value and the unit (such as <code>margin-left: 20 px;</code>). The correct way is: <code>margin-left: 20px;</code></p>
<h4 id="Internal-style-sheet"><a href="#Internal-style-sheet" class="headerlink" title="Internal style sheet"></a>Internal style sheet</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;style&gt;</div><div class="line">body &#123;</div><div class="line">    background-color: linen;</div><div class="line">&#125;</div><div class="line"></div><div class="line">h1 &#123;</div><div class="line">    color: maroon;</div><div class="line">    margin-left: 40px;</div><div class="line">&#125; </div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<h4 id="Inline-style"><a href="#Inline-style" class="headerlink" title="Inline style"></a>Inline style</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;h1 style=&quot;color:blue;margin-left:30px;&quot;&gt;This is a heading.&lt;/h1&gt;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> An inline style loses many of the advantages of a style sheet (by mixing content with presentation). Use this method sparingly.</p>
<p>If some properties have been defined for the same selector (element) in different style sheets, the value from <strong>the last read style</strong> sheet will be used. </p>
<ol>
<li>Inline style (inside an HTML element)</li>
<li>External and internal style sheets (in the head section)</li>
<li>Browser default</li>
</ol>
<h3 id="CSS-Colors"><a href="#CSS-Colors" class="headerlink" title="CSS Colors"></a>CSS Colors</h3><p>Colors in CSS are most often specified by:</p>
<ul>
<li>a valid color name - like “<code>red</code>“</li>
<li>an RGB value - like “<code>rgb(255, 0, 0)</code>“</li>
<li>a HEX value - like “<code>#ff0000</code>“</li>
</ul>
<h3 id="CSS-Backgrounds"><a href="#CSS-Backgrounds" class="headerlink" title="CSS Backgrounds"></a>CSS Backgrounds</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">    background: #ffffff url(&quot;img_tree.png&quot;) no-repeat right top;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>background</td>
<td>Sets all the background properties in one declaration</td>
</tr>
<tr>
<td>background-attachment</td>
<td>Sets whether a background image is fixed or scrolls with the rest of the page</td>
</tr>
<tr>
<td>background-color</td>
<td>Sets the background color of an element</td>
</tr>
<tr>
<td>background-image</td>
<td>Sets the background image for an element</td>
</tr>
<tr>
<td>background-position</td>
<td>Sets the starting position of a background image</td>
</tr>
<tr>
<td>background-repeat</td>
<td>Sets how a background image will be repeated</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Borders"><a href="#CSS-Borders" class="headerlink" title="CSS Borders"></a>CSS Borders</h3><p>The CSS <strong>border</strong> properties allow you to specify the style, width, and color of an element’s border.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    border: 5px solid red;</div><div class="line">    border-radius: 5px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>border</td>
<td>Sets all the border properties in one declaration</td>
</tr>
<tr>
<td>border-color</td>
<td>Sets the color of the four borders</td>
</tr>
<tr>
<td>border-radius</td>
<td>Sets all the four border radius properties for rounded corners</td>
</tr>
<tr>
<td>border-style</td>
<td>Sets the style of the four borders</td>
</tr>
<tr>
<td>border-width</td>
<td>Sets the width of the four borders</td>
</tr>
<tr>
<td>border-bottom</td>
<td>Sets all the bottom border properties in one declaration</td>
</tr>
<tr>
<td>border-bottom-color</td>
<td>Sets the color of the bottom border</td>
</tr>
<tr>
<td>border-bottom-style</td>
<td>Sets the style of the bottom border</td>
</tr>
<tr>
<td>border-bottom-width</td>
<td>Sets the width of the bottom border</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Margins"><a href="#CSS-Margins" class="headerlink" title="CSS Margins"></a>CSS Margins</h3><p>The CSS <strong>margin</strong> properties are used to generate space around elements. All the margin properties can have the following values:</p>
<ul>
<li>auto - the browser calculates the margin</li>
<li>length - specifies a margin in px, pt, cm, etc.</li>
<li>% - specifies a margin in % of the width of the containing element</li>
<li>inherit - specifies that the margin should be inherited from the parent element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    margin: 100px 150px 100px 80px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>margin</td>
<td>A shorthand property for setting the margin properties in one declaration</td>
</tr>
<tr>
<td>margin-bottom</td>
<td>Sets the bottom margin of an element</td>
</tr>
<tr>
<td>margin-left</td>
<td>Sets the left margin of an element</td>
</tr>
<tr>
<td>margin-right</td>
<td>Sets the right margin of an element</td>
</tr>
<tr>
<td>margin-top</td>
<td>Sets the top margin of an element</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Padding"><a href="#CSS-Padding" class="headerlink" title="CSS Padding"></a>CSS Padding</h3><p>The CSS <strong>padding</strong> properties are used to generate space around content. All the padding properties can have the following values:</p>
<ul>
<li>length - specifies a padding in px, pt, cm, etc.</li>
<li>% - specifies a padding in % of the width of the containing element</li>
<li>inherit - specifies that the padding should be inherited from the parent element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    padding: 50px 30px 50px 80px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>padding</td>
<td>A shorthand property for setting all the padding properties in one declaration</td>
</tr>
<tr>
<td>padding-bottom</td>
<td>Sets the bottom padding of an element</td>
</tr>
<tr>
<td>padding-left</td>
<td>Sets the left padding of an element</td>
</tr>
<tr>
<td>padding-right</td>
<td>Sets the right padding of an element</td>
</tr>
<tr>
<td>padding-top</td>
<td>Sets the top padding of an element</td>
</tr>
</tbody>
</table>
<h3 id="CSS-Height-and-Width"><a href="#CSS-Height-and-Width" class="headerlink" title="CSS Height and Width"></a>CSS Height and Width</h3><p>The <strong>height</strong> and <strong>width</strong> properties are used to set the height and width of an element.</p>
<ul>
<li>auto - the browser calculates the margin (default, the browser calculates the height and width)</li>
<li>length - specifies a margin in px, pt, cm, etc.</li>
<li>% - specifies a margin in % of the width of the containing element</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">div &#123;</div><div class="line">    height: 200px;</div><div class="line">    width: 50%;</div><div class="line">    background-color: powderblue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The <code>height</code> and <code>width</code> properties do not include padding, borders, or margins; they set the height/width of the area inside the padding, border, and margin of the element!</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>height</td>
<td>Sets the height of an element</td>
</tr>
<tr>
<td>max-height</td>
<td>Sets the maximum height of an element</td>
</tr>
<tr>
<td>max-width</td>
<td>Sets the maximum width of an element</td>
</tr>
<tr>
<td>min-height</td>
<td>Sets the minimum height of an element</td>
</tr>
<tr>
<td>min-width</td>
<td>Sets the minimum width of an element</td>
</tr>
<tr>
<td>width</td>
<td>Sets the width of an element</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[少说话，多做事]]></title>
      <url>http://rrkaige.com/2016/09/04/%E5%B0%91%E8%AF%B4%E8%AF%9D%EF%BC%8C%E5%A4%9A%E5%81%9A%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>网络世界，嘴上江湖，明枪易躲，暗箭难防。多少英雄折戟沉沙，含恨而退。策马奔腾不可取，快意恩仇不足道。少说话，多做事，谨以为戒。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160904-myblog37-1.jpg" alt="Talk Less Do More"></p>
<a id="more"></a>
<p>少说话分两种。</p>
<p>一是不放厥词。我坚持少在网络公共场所发言评论。一方面为安全，当然这是想当然；一方面是不愿卷入口舌之争。因为通常你不找麻烦，麻烦也会找你。索性从源头断掉烦恼。我至今记得父母教诲，结巴的聪明在于说话前经过短暂思考，而不是头脑发热一时兴起。很多话过一遍脑子，就会发现漏洞百出。我建个人博客即为有一个独处空间，所以取名“一方天地”。我取消“分享”功能，来者看看就好，不必当真。“留言”则暂无限制，毕竟开源世界在我印象中算是清流。</p>
<p>二是不做反驳。所谓说多错多，反驳看似有力，实则提供更多靶子。任你如何自圆其说，别有用心之人总能找出漏洞。欲加之罪，何患无辞？《九阳真经》的秘诀在于“他强任他强，清风拂山岗；他横任他横，明月照大江”。太极强调以柔克刚，以退为进。万事万物都有颠补不破的道理。多说不如不说，沉默是对诽谤的最有利回击。说到最后，依然得靠事实说话。所以，多说不如多做。有这时间，不如看几本书，运动健身一番。</p>
<p>当然，我并非名人，通常不会因言获罪，上面的烦恼大概也不会有。但我也不应成为吃瓜群众，人云亦云。最近网上流传甚广的 Fenng 离职事件甚嚣尘上，引发大量口水战。具体可见 <a href="https://zhuanlan.zhihu.com/p/22174684" target="_blank" rel="external"> 一个不写代码不称职被扒皮的水货 CTO 的自白 </a>，<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzA2NjcyMg==&amp;mid=2653213351&amp;idx=1&amp;sn=9f0ef5d73d042d79eb5aa0c62cc135b5&amp;scene=1&amp;srcid=0826SZRcjofIAxMr0jce4rEO#rd" target="_blank" rel="external">Fenng，祝你能创建一家伟大的公司</a>，<a href="http://www.williamlong.info/archives/4715.html" target="_blank" rel="external"> 丁香园冯大辉离职引发期权之争</a>，着实精彩。</p>
<p>我讨厌围观群众的据理力争，你来我往。很多时候，一个人的品行和能力是可以分开的。更何况，只有当事人才真正清楚事情的前因后果，有时或许连当事人都蒙在鼓里。那么，作为连旁观者都算不上的吃瓜群众，又怎能凭借听来的三言两语妄下论断？总而言之，这事和旁人并无干系。不要多管闲事，特别当这闲事是别人私事。语言暴力，网络流氓只会增添无谓争执，对于解决问题毫无作用。偏偏有人不怕事情闹大，想着浑水摸鱼，其心可诛，其品行更劣。</p>
<p>说这么多，不是为别人操心，而是我试图用文字调整心态。虽然我从未在网上参与此类事，但也有好奇心。对这些前辈大佬，江湖恩怨有着极大兴趣，又好求本溯源，往往一查就花费大半天时间。现在想来，往往不值。</p>
<p>稍加留意，且做笑谈。毕竟，还得为生活奔波。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160904-myblog37-2.jpg" alt="Do More"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GoogleMaps 学习笔记]]></title>
      <url>http://rrkaige.com/2016/09/03/GoogleMaps%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>关于 <a href="https://developers.google.com/maps/" target="_blank" rel="external">Google Maps API</a> 的一些简单整理，来自<a href="http://www.w3schools.com/googleapi/" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160903-myblog36.jpg" alt="Google Maps"></p>
<a id="more"></a>
<h3 id="Google-Maps-Basic"><a href="#Google-Maps-Basic" class="headerlink" title="Google Maps Basic"></a>Google Maps Basic</h3><p>This example creates a Google Map centered in London, England:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;http://maps.googleapis.com/maps/api/js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function initialize() &#123;</div><div class="line">  var mapProp = &#123;</div><div class="line">    center:new google.maps.LatLng(51.508742,-0.120850),</div><div class="line">    zoom:5,</div><div class="line">    mapTypeId:google.maps.MapTypeId.ROADMAP</div><div class="line">  &#125;;</div><div class="line">  var map=new google.maps.Map(document.getElementById(&quot;googleMap&quot;),mapProp);</div><div class="line">&#125;</div><div class="line">google.maps.event.addDomListener(window, &apos;load&apos;, initialize);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=&quot;googleMap&quot; style=&quot;width:500px;height:380px;&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line"></div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>If you plan for heavier traffic, you should get a free API key from Google. Go to <a href="https://console.developers.google.com" target="_blank" rel="external">https://console.developers.google.com</a> to get a free key. Google Maps expects to find the API key in the key parameter when loading an API:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;http://maps.googleapis.com/maps/api/js?key=YOUR_KEY&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="Google-Maps-Overlays"><a href="#Google-Maps-Overlays" class="headerlink" title="Google Maps Overlays"></a>Google Maps Overlays</h3><p>Overlays are objects on the map that are bound to latitude/longitude coordinates. Google Maps has several types of overlays:</p>
<ul>
<li>Marker - Single locations on a map. Markers can also display custom icon images</li>
<li>Polyline - Series of straight lines on a map</li>
<li>Polygon - Series of straight lines on a map, and the shape is “closed”</li>
<li>Circle and Rectangle</li>
<li>Info Windows - Displays content within a popup balloon on top of a map</li>
<li>Custom overlays</li>
</ul>
<h3 id="Google-Maps-Controls"><a href="#Google-Maps-Controls" class="headerlink" title="Google Maps Controls"></a>Google Maps Controls</h3><ul>
<li>Zoom - displays a slider or “+/-“ buttons to control the zoom level of the map</li>
<li>Pan - displays a pan control for panning the map</li>
<li>MapType - lets the user toggle between map types (roadmap and satellite)</li>
<li>Street View - displays a Pegman icon which can be dragged to the map to enable Street View</li>
<li>Scale - displays a map scale element</li>
<li>Rotate - displays a small circular icon which allows you to rotate maps</li>
<li>Overview Map - displays a thumbnail overview map reflecting the current map viewport within a wider area</li>
</ul>
<h3 id="Google-Maps-Types"><a href="#Google-Maps-Types" class="headerlink" title="Google Maps Types"></a>Google Maps Types</h3><p>The following map types are supported in Google Maps API:</p>
<ul>
<li>ROADMAP (normal, default 2D map)</li>
<li>SATELLITE (photographic map)</li>
<li>HYBRID (photographic map + roads and city names)</li>
<li>TERRAIN (map with mountains, rivers, etc.)</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Icons 学习笔记]]></title>
      <url>http://rrkaige.com/2016/09/03/Icons%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 之前建个人博客和导航网页，已经用到过 Icons，当时没有全面了解。今天做一个简单整理，教程来自 <a href="http://www.w3schools.com/icons/" target="_blank" rel="external">w3schools</a>。详细用法可参考各官网：</p>
<ul>
<li><a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a></li>
<li><a href="http://glyphicons.com/" target="_blank" rel="external">Glyphicons</a></li>
<li><a href="https://design.google.com/icons/" target="_blank" rel="external">Material Icons</a></li>
</ul>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160903-myblog35.png" alt="Font Awesome"></p>
<a id="more"></a>
<h3 id="How-To-Add-Icons"><a href="#How-To-Add-Icons" class="headerlink" title="How To Add Icons"></a>How To Add Icons</h3><p>To insert an icon, add the name of the icon class to any inline HTML element.</p>
<p>The <code>&lt;i&gt;</code> and <code>&lt;span&gt;</code> elements are widely used to add icons.</p>
<p>All the icons in the icon libraries below, are scalable vector icons that can be customized with CSS (size, color, shadow, etc.)</p>
<h3 id="Font-Awesome-Icons"><a href="#Font-Awesome-Icons" class="headerlink" title="Font Awesome Icons"></a>Font Awesome Icons</h3><p>To use the <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a> icons, add the following line inside the <code>&lt;head&gt;</code> section of your HTML page:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css&quot;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;i class=&quot;fa fa-car&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;i class=&quot;fa fa-car&quot; style=&quot;font-size:48px;&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;i class=&quot;fa fa-car&quot; style=&quot;font-size:60px;color:red;&quot;&gt;&lt;/i&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<ul>
<li>The <code>fa-lg</code> (33% increase), <code>fa-2x</code>, <code>fa-3x</code>, <code>fa-4x</code>, or <code>fa-5x</code> classes are used to increase the icon sizes relative to their container.</li>
<li>The <code>fa-ul</code> and <code>fa-li</code> classes are used to replace default bullets in unordered lists.</li>
<li>The <code>fa-border</code>, <code>fa-pull-right</code> or <code>fa-pull-left</code> classes are used for for pull quotes or article icons.</li>
<li>The <code>fa-spin</code> class gets any icon to rotate, and the <code>fa-pulse</code> class gets any icon to rotate with 8 steps.</li>
<li>The <code>fa-rotate-*</code> and <code>fa-flip-*</code> classes are used to rotate and flip icons.</li>
<li>To stack multiple icons, use the <code>fa-stack</code> class on the parent, the <code>fa-stack-1x</code> class for the regularly sized icon, and <code>fa-stack-2x</code> for the larger icon.</li>
<li>The <code>fa-inverse</code> class can be used as an alternative icon color. You can also add larger icon classes to the parent to further control the sizing.</li>
<li>The <code>fa-fw</code> class is used to set icons at a fixed width. This class is useful when different icon widths throw off alignment. Especially useful in Bootstrap’s navlists and list groups.</li>
</ul>
<h3 id="Bootstrap-Glyphicons"><a href="#Bootstrap-Glyphicons" class="headerlink" title="Bootstrap Glyphicons"></a>Bootstrap Glyphicons</h3><p>To use the Bootstrap <a href="http://glyphicons.com/" target="_blank" rel="external">Glyphicons</a>, add the following line inside the <code>&lt;head&gt;</code> section of your HTML page:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;i class=&quot;glyphicon glyphicon-cloud&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;i class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;i class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;i class=&quot;glyphicon glyphicon-envelope&quot;&gt;&lt;/i&gt;</div><div class="line">&lt;i class=&quot;glyphicon glyphicon-thumbs-up&quot;&gt;&lt;/i&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h3 id="Google-Material-Icons"><a href="#Google-Material-Icons" class="headerlink" title="Google Material Icons"></a>Google Material Icons</h3><p>To use the Google <a href="https://design.google.com/icons/" target="_blank" rel="external">Material Icons</a>, add the following line inside the <code>&lt;head&gt;</code> section of your HTML page:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">&lt;i class=&quot;material-icons&quot;&gt;cloud&lt;/i&gt;</div><div class="line">&lt;i class=&quot;material-icons&quot; style=&quot;font-size:48px;&quot;&gt;cloud&lt;/i&gt;</div><div class="line">&lt;i class=&quot;material-icons&quot; style=&quot;font-size:60px;color:red;&quot;&gt;cloud&lt;/i&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>Material icons are 24px by default.</li>
<li>Although the material icons can be scaled to any size, the recommended font-size is either 18, 24, 36 or 48px:</li>
<li>If you change the color of the icon’s container, the color of the icon changes too. Same things goes for shadow, and anything else that gets inherited using CSS. The exception is the CSS font-size property, which is always 24px, unless something else is specified.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML 学习笔记之四]]></title>
      <url>http://rrkaige.com/2016/09/02/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%9B/</url>
      <content type="html"><![CDATA[<p> 继续昨天的学习。教程来自 <a href="http://www.w3schools.com/html/" target="_blank" rel="external">w3schools</a>，整理如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160902-myblog34.png" alt="HTML"></p>
<a id="more"></a>
<h3 id="HTML-Canvas"><a href="#HTML-Canvas" class="headerlink" title="HTML Canvas"></a>HTML Canvas</h3><p>The HTML <code>&lt;canvas&gt;</code> element is used to draw graphics, on the fly, via <strong>scripting</strong> (usually JavaScript). The <code>&lt;canvas&gt;</code> element is only a container for graphics. You must use a script to actually draw the graphics.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;100&quot;</div><div class="line">style=&quot;border:1px solid #000000;&quot;&gt;</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;);</div><div class="line">ctx.fillStyle = &quot;#FF0000&quot;;</div><div class="line">ctx.fillRect(0,0,150,75);</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="HTML5-SVG"><a href="#HTML5-SVG" class="headerlink" title="HTML5 SVG"></a>HTML5 SVG</h3><p>The HTML <code>&lt;svg&gt;</code> element (introduced in HTML5) is a container for SVG graphics.</p>
<ul>
<li>SVG stands for <strong>Scalable Vector Graphics</strong></li>
<li>SVG is used to define graphics for the Web</li>
<li>SVG is a W3C recommendation</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;svg width=&quot;100&quot; height=&quot;100&quot;&gt;</div><div class="line">  &lt;circle cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;40&quot; stroke=&quot;green&quot; stroke-width=&quot;4&quot; fill=&quot;yellow&quot; /&gt;</div><div class="line">&lt;/svg&gt;</div></pre></td></tr></table></figure>
<h3 id="HTML-Multimedia"><a href="#HTML-Multimedia" class="headerlink" title="HTML Multimedia"></a>HTML Multimedia</h3><p>Only <strong>MP4</strong>, <strong>WebM</strong>, and <strong>Ogg</strong> video are supported by the newest HTML5 standard.</p>
<table>
<thead>
<tr>
<th>Format</th>
<th>FileExtension</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>MPEG</td>
<td>.mpg &amp; .mpeg</td>
<td>MPEG. Developed by the Moving Pictures Expert Group. The first popular video format on the web. Used to be supported by all browsers, but it is not supported in HTML5 (See MP4).</td>
</tr>
<tr>
<td>AVI</td>
<td>.avi</td>
<td>AVI (Audio Video Interleave). Developed by Microsoft. Commonly used in video cameras and TV hardware. Plays well on Windows computers, but not in web browsers.</td>
</tr>
<tr>
<td>WMV</td>
<td>.wmv</td>
<td>WMV (Windows Media Video). Developed by Microsoft. Commonly used in video cameras and TV hardware. Plays well on Windows computers, but not in web browsers.</td>
</tr>
<tr>
<td>QuickTime</td>
<td>.mov</td>
<td>QuickTime. Developed by Apple. Commonly used in video cameras and TV hardware. Plays well on Apple computers, but not in web browsers. (See MP4)</td>
</tr>
<tr>
<td>RealVideo</td>
<td>.rm &amp; .ram</td>
<td>RealVideo. Developed by Real Media to allow video streaming with low bandwidths. It is still used for online video and Internet TV, but does not play in web browsers.</td>
</tr>
<tr>
<td>Flash</td>
<td>.swf &amp; .flv</td>
<td>Flash. Developed by Macromedia. Often requires an extra component (plug-in) to play in web browsers.</td>
</tr>
<tr>
<td>Ogg</td>
<td>.ogg</td>
<td>Theora Ogg. Developed by the Xiph.Org Foundation. Supported by HTML5.</td>
</tr>
<tr>
<td>WebM</td>
<td>.webm</td>
<td>WebM. Developed by the web giants, Mozilla, Opera, Adobe, and Google. Supported by HTML5.</td>
</tr>
<tr>
<td>MPEG-4 or MP4</td>
<td>.mp4</td>
<td>MP4. Developed by the Moving Pictures Expert Group. Based on QuickTime. Commonly used in newer video cameras and TV hardware. Supported by all HTML5 browsers. Recommended by YouTube. </td>
</tr>
</tbody>
</table>
<p>Only <strong>MP3</strong>, <strong>WAV</strong>, and <strong>Ogg</strong> audio are supported by the newest HTML5 standard.</p>
<table>
<thead>
<tr>
<th>Format</th>
<th>FileExtension</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>MIDI</td>
<td>.mid &amp; .midi</td>
<td>MIDI (Musical Instrument Digital Interface). Main format for all electronic music devices like synthesizers and PC sound cards. MIDI files do not contain sound, but digital notes that can be played by electronics. Plays well on all computers and music hardware, but not in web browsers.</td>
</tr>
<tr>
<td>RealAudio</td>
<td>.rm &amp; .ram</td>
<td>RealAudio. Developed by Real Media to allow streaming of audio with low bandwidths. Does not play in web browsers.</td>
</tr>
<tr>
<td>WMA</td>
<td>.wma</td>
<td>WMA (Windows Media Audio). Developed by Microsoft. Commonly used in music players. Plays well on Windows computers, but not in web browsers.</td>
</tr>
<tr>
<td>AAC</td>
<td>.aac</td>
<td>AAC (Advanced Audio Coding). Developed by Apple as the default format for iTunes. Plays well on Apple computers, but not in web browsers.</td>
</tr>
<tr>
<td>WAV</td>
<td>.wav</td>
<td>WAV. Developed by IBM and Microsoft. Plays well on Windows, Macintosh, and Linux operating systems. Supported by HTML5.</td>
</tr>
<tr>
<td>Ogg</td>
<td>.ogg</td>
<td>Ogg. Developed by the Xiph.Org Foundation. Supported by HTML5.</td>
</tr>
<tr>
<td>MP3</td>
<td>.mp3</td>
<td>MP3 files are actually the sound part of MPEG files. MP3 is the most popular format for music players. Combines good compression (small files) with high quality. Supported by all browsers.</td>
</tr>
<tr>
<td>MP4</td>
<td>.mp4</td>
<td>MP4 is a video format, but can also be used for audio. MP4 video is the upcoming video format on the internet. This leads to automatic support for MP4 audio by all browsers.</td>
</tr>
</tbody>
</table>
<h3 id="HTML5-Video"><a href="#HTML5-Video" class="headerlink" title="HTML5 Video"></a>HTML5 Video</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;</div><div class="line">  &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;</div><div class="line">  &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;</div><div class="line">Your browser does not support the video tag.</div><div class="line">&lt;/video&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>File Format</th>
<th>Media Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>MP4</td>
<td>video/mp4</td>
</tr>
<tr>
<td>WebM</td>
<td>video/webm</td>
</tr>
<tr>
<td>Ogg</td>
<td>video/ogg</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;video&gt;</code></td>
<td>Defines a video or movie</td>
</tr>
<tr>
<td><code>&lt;source&gt;</code></td>
<td>Defines multiple media resources for media elements, such as <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code></td>
</tr>
<tr>
<td><code>&lt;track&gt;</code></td>
<td>Defines text tracks in media players</td>
</tr>
</tbody>
</table>
<h3 id="HTML5-Audio"><a href="#HTML5-Audio" class="headerlink" title="HTML5 Audio"></a>HTML5 Audio</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;audio controls&gt;</div><div class="line">  &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot;&gt;</div><div class="line">  &lt;source src=&quot;horse.mp3&quot; type=&quot;audio/mpeg&quot;&gt;</div><div class="line">Your browser does not support the audio element.</div><div class="line">&lt;/audio&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>File Format</th>
<th>Media Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>MP3</td>
<td>audio/mpeg</td>
</tr>
<tr>
<td>Ogg</td>
<td>audio/ogg</td>
</tr>
<tr>
<td>Wav</td>
<td>audio/wav</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;audio&gt;</code></td>
<td>Defines sound content</td>
</tr>
<tr>
<td><code>&lt;source&gt;</code></td>
<td>Defines multiple media resources for media elements, such as <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code></td>
</tr>
</tbody>
</table>
<h3 id="HTML5-Local-Storage"><a href="#HTML5-Local-Storage" class="headerlink" title="HTML5 Local Storage"></a>HTML5 Local Storage</h3><p>HTML local storage provides two objects for storing data on the client:</p>
<ul>
<li><strong>window.localStorage</strong> - stores data with no expiration date</li>
<li><strong>window.sessionStorage</strong> - stores data for one session (data is lost when the browser tab is closed)</li>
</ul>
<p>Before using local storage, check browser support for localStorage and sessionStorage:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if (typeof(Storage) !== &quot;undefined&quot;) &#123;</div><div class="line">    // Code for localStorage/sessionStorage.</div><div class="line">&#125; else &#123;</div><div class="line">    // Sorry! No Web Storage support..</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[叔叔，麻烦下]]></title>
      <url>http://rrkaige.com/2016/09/01/%E5%8F%94%E5%8F%94%EF%BC%8C%E9%BA%BB%E7%83%A6%E4%B8%8B/</url>
      <content type="html"><![CDATA[<p>“叔叔，麻烦下，帮捡个球。”</p>
<p> 晚饭后，我正在操场边漫步。斜阳镀远山，晴空一片蓝。心情无限好，只是——有人喊？</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160901-myblog33.jpg" alt="Stephen Chow"></p>
<a id="more"></a>
<p> 我回头，围栏内一个姑娘正看着我，不，是我身旁地上的羽毛球，一脸请求。怀顾四周，除我之外别无他人。所以，刚才是喊我喽？叔叔？！</p>
<p> 似是确认我的猜测，小姑娘再次发声：“叔叔，帮忙捡下羽毛球。”</p>
<p> 没错，看着小姑娘诚恳的眼睛，我不得不承认自己“叔叔”的身份。</p>
<p> 不带这么欺负人的！虽然我在这个校区混迹六年，是只名副其实的“老鸟”。但是，怎么说也正是青春年华，阳光少年，咋这刚开学，就一下升级成了——叔叔。</p>
<p> 整整一万点伤害，夕阳的余晖略略刺眼。我摸摸昨天刚剃的头，看看自己的 T 恤裤衩拖鞋，竟无言以对。</p>
<p> 不过，毕竟是小姑娘，要有气度。我看着她，笑着问：“我看起来像叔叔么？”</p>
<p>“哦，对不起，对不起……”小姑娘终于反应过来，连连道歉，却紧张得手足无措，不知说啥。</p>
<p> 算了算了，跟个小姑娘较劲干啥。一时想到那些被喊阿姨的姑娘大概也如此心理，不禁好笑。</p>
<p> 我弯腰，捡起羽毛球，顺手一扔。好巧不巧，羽毛球正撞在栏杆上，弹了回来。我只得上前，捡起，轻轻一抛。结果，小姑娘没接住，又掉了出来。醉了醉了，羽毛球你这是闹啥情绪啊？</p>
<p> 这次我不再取巧，直接把羽毛球递到小姑娘手里。小姑娘还在一个劲道歉，我开玩笑：“被你这叔叔喊得，我捡球都没劲了哈。”</p>
<p> 我转身，后面传来小姑娘和她同伴的笑声。</p>
<p> 也罢也罢，开心就好。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML 学习笔记之三]]></title>
      <url>http://rrkaige.com/2016/09/01/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/</url>
      <content type="html"><![CDATA[<p> 继续昨天的学习。教程来自 <a href="http://www.w3schools.com/html/" target="_blank" rel="external">w3schools</a>，整理如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160901-myblog32.jpg" alt="HTML5"></p>
<a id="more"></a>
<h3 id="HTML-Head"><a href="#HTML-Head" class="headerlink" title="HTML Head"></a>HTML Head</h3><p>The <code>&lt;meta&gt;</code> element is used to specify which character set is used, page description, keywords, author, and other metadata.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">&lt;meta name=&quot;description&quot; content=&quot;Free Web tutorials&quot;&gt;</div><div class="line">&lt;meta name=&quot;keywords&quot; content=&quot;HTML,CSS,XML,JavaScript&quot;&gt;</div><div class="line">&lt;meta name=&quot;author&quot; content=&quot;Hege Refsnes&quot;&gt;</div><div class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;30&quot;&gt;</div></pre></td></tr></table></figure>
<p>The <code>&lt;base&gt;</code> element specifies the base URL and base target for all relative URLs in a page:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;base href=&quot;http://www.w3schools.com/images/&quot; target=&quot;_blank&quot;&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;head&gt;</code></td>
<td>Defines information about the document</td>
</tr>
<tr>
<td><code>&lt;title&gt;</code></td>
<td>Defines the title of a document</td>
</tr>
<tr>
<td><code>&lt;base&gt;</code></td>
<td>Defines a default address or a default target for all links on a page</td>
</tr>
<tr>
<td><code>&lt;link&gt;</code></td>
<td>Defines the relationship between a document and an external resource</td>
</tr>
<tr>
<td><code>&lt;meta&gt;</code></td>
<td>Defines metadata about an HTML document</td>
</tr>
<tr>
<td><code>&lt;script&gt;</code></td>
<td>Defines a client-side script</td>
</tr>
<tr>
<td><code>&lt;style&gt;</code></td>
<td>Defines style information for a document</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Layouts"><a href="#HTML-Layouts" class="headerlink" title="HTML Layouts"></a>HTML Layouts</h3><p>HTML5 offers new semantic elements that define the different parts of a web page:</p>
<ul>
<li><code>&lt;header&gt;</code> - Defines a header for a document or a section</li>
<li><code>&lt;nav&gt;</code> - Defines a container for navigation links</li>
<li><code>&lt;section&gt;</code> - Defines a section in a document</li>
<li><code>&lt;article&gt;</code> - Defines an independent self-contained article</li>
<li><code>&lt;aside&gt;</code> - Defines content aside from the content (like a sidebar)</li>
<li><code>&lt;footer&gt;</code> - Defines a footer for a document or a section</li>
<li><code>&lt;details&gt;</code> - Defines additional details</li>
<li><code>&lt;summary&gt;</code> - Defines a heading for the <code>&lt;details&gt;</code> element</li>
</ul>
<h3 id="HTML-Entities"><a href="#HTML-Entities" class="headerlink" title="HTML Entities"></a>HTML Entities</h3><p>Some characters are reserved in HTML. Character entities are used to display reserved characters in HTML.</p>
<ul>
<li><strong>Advantage of using an entity name:</strong> An entity name is easy to remember.</li>
<li><strong>Disadvantage of using an entity name:</strong> Browsers may not support all entity names, but the support for numbers is good.</li>
</ul>
<p><strong>Note:</strong> Entity names are case sensitive.</p>
<table>
<thead>
<tr>
<th>Result</th>
<th>Description</th>
<th>Entity Name</th>
<th>Entity Number</th>
</tr>
</thead>
<tbody>
<tr>
<td>null</td>
<td>non-breaking space</td>
<td><code>&amp;nbsp;</code></td>
<td><code>&amp;#160;</code></td>
</tr>
<tr>
<td>&lt;</td>
<td>less than</td>
<td><code>&amp;lt;</code></td>
<td><code>&amp;#60;</code></td>
</tr>
<tr>
<td>&gt;</td>
<td>greater than</td>
<td><code>&amp;gt;</code></td>
<td><code>&amp;#62;</code></td>
</tr>
<tr>
<td>&amp;</td>
<td>ampersand</td>
<td><code>&amp;amp;</code></td>
<td><code>&amp;#38;</code></td>
</tr>
<tr>
<td>¢</td>
<td>cent</td>
<td><code>&amp;cent;</code></td>
<td><code>&amp;#162;</code></td>
</tr>
<tr>
<td>£</td>
<td>pound</td>
<td><code>&amp;pound;</code></td>
<td><code>&amp;#163;</code></td>
</tr>
<tr>
<td>¥</td>
<td>yen</td>
<td><code>&amp;yen;</code></td>
<td><code>&amp;#165;</code></td>
</tr>
<tr>
<td>€</td>
<td>euro</td>
<td><code>&amp;euro;</code></td>
<td><code>&amp;#8364;</code></td>
</tr>
<tr>
<td>©</td>
<td>copyright</td>
<td><code>&amp;copy;</code></td>
<td><code>&amp;#169;</code></td>
</tr>
<tr>
<td>®</td>
<td>registered trademark</td>
<td><code>&amp;reg;</code></td>
<td><code>&amp;#174;</code></td>
</tr>
</tbody>
</table>
<h3 id="HTML-Uniform-Resource-Locators"><a href="#HTML-Uniform-Resource-Locators" class="headerlink" title="HTML Uniform Resource Locators"></a>HTML Uniform Resource Locators</h3><p>A Uniform Resource Locator (URL) is used to address a document (or other data) on the web.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scheme://prefix.domain:port/path/filename</div></pre></td></tr></table></figure>
<p>Explanation:</p>
<ul>
<li>scheme - defines the type of Internet service (most common is http or https)</li>
</ul>
<table>
<thead>
<tr>
<th>Scheme</th>
<th>Short for</th>
<th>Used for</th>
</tr>
</thead>
<tbody>
<tr>
<td>http</td>
<td>HyperText Transfer Protocol</td>
<td>Common web pages. Not encrypted</td>
</tr>
<tr>
<td>https</td>
<td>Secure HyperText Transfer Protocol</td>
<td>Secure web pages. Encrypted</td>
</tr>
<tr>
<td>ftp</td>
<td>File Transfer Protocol</td>
<td>Downloading or uploading files</td>
</tr>
<tr>
<td>file</td>
<td></td>
<td>A file on your computer</td>
</tr>
</tbody>
</table>
<ul>
<li>prefix - defines a domain prefix (default for http is www)</li>
<li>domain - defines the Internet domain name (like w3schools.com)</li>
<li>port - defines the port number at the host (default for http is 80)</li>
<li>path - defines a path at the server (If omitted: the root directory of the site)</li>
<li>filename - defines the name of a document or resource</li>
</ul>
<p>URLs can only be sent over the Internet using the ASCII character-set. If a URL contains characters outside the ASCII set, the URL has to be converted.</p>
<ul>
<li>URL encoding converts non-ASCII characters into a format that can be transmitted over the Internet.</li>
<li>URL encoding replaces non-ASCII characters with a <code>%</code> followed by hexadecimal digits.</li>
<li>URLs cannot contain spaces. URL encoding normally replaces a space with a plus (+) sign, or <code>%20</code>.</li>
</ul>
<h3 id="HTML-Forms"><a href="#HTML-Forms" class="headerlink" title="HTML Forms"></a>HTML Forms</h3><p>The HTML <code>&lt;form&gt;</code> element defines a form that is used to collect user input:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt;</div><div class="line">.</div><div class="line">form elements</div><div class="line">.</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
<p>The <code>&lt;input&gt;</code> element can be displayed in several ways, depending on the <strong>type</strong> attribute.</p>
<table>
<thead>
<tr>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;input type=&quot;text&quot;&gt;</code></td>
<td>Defines a one-line text input field</td>
</tr>
<tr>
<td><code>&lt;input type=&quot;radio&quot;&gt;</code></td>
<td>Defines a radio button (for selecting one of many choices)</td>
</tr>
<tr>
<td><code>&lt;input type=&quot;submit&quot;&gt;</code></td>
<td>Defines a submit button (for submitting the form)</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong></p>
<ul>
<li>The form itself is not visible. Also note that the default width of a text field is 20 characters.</li>
<li><strong>GET</strong> must NOT be used when sending sensitive information! GET is best suited for short, non-sensitive, amounts of data, because it has size limitations too.</li>
<li><strong>POST</strong> has no size limitations, and can be used to send large amounts of data.</li>
</ul>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>accept-charset</td>
<td>Specifies the charset used in the submitted form (default: the page charset).</td>
</tr>
<tr>
<td>action</td>
<td>Specifies an address (url) where to submit the form (default: the submitting page).</td>
</tr>
<tr>
<td>autocomplete</td>
<td>Specifies if the browser should autocomplete the form (default: on).</td>
</tr>
<tr>
<td>enctype</td>
<td>Specifies the encoding of the submitted data (default: is url-encoded).</td>
</tr>
<tr>
<td>method</td>
<td>Specifies the HTTP method used when submitting the form (default: GET).</td>
</tr>
<tr>
<td>name</td>
<td>Specifies a name used to identify the form (for DOM usage: document.forms.name).</td>
</tr>
<tr>
<td>novalidate</td>
<td>Specifies that the browser should not validate the form.</td>
</tr>
<tr>
<td>target</td>
<td>Specifies the target of the address in the action attribute (default: _self).</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Form-Elements"><a href="#HTML-Form-Elements" class="headerlink" title="HTML Form Elements"></a>HTML Form Elements</h3><table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;form&gt;</code></td>
<td>Defines an HTML form for user input</td>
</tr>
<tr>
<td><code>&lt;input&gt;</code></td>
<td>Defines an input control</td>
</tr>
<tr>
<td><code>&lt;textarea&gt;</code></td>
<td>Defines a multiline input control (text area)</td>
</tr>
<tr>
<td><code>&lt;label&gt;</code></td>
<td>Defines a label for an <code>&lt;input&gt;</code> element</td>
</tr>
<tr>
<td><code>&lt;fieldset&gt;</code></td>
<td>Groups related elements in a form</td>
</tr>
<tr>
<td><code>&lt;legend&gt;</code></td>
<td>Defines a caption for a <code>&lt;fieldset&gt;</code> element</td>
</tr>
<tr>
<td><code>&lt;select&gt;</code></td>
<td>Defines a drop-down list</td>
</tr>
<tr>
<td><code>&lt;optgroup&gt;</code></td>
<td>Defines a group of related options in a drop-down list</td>
</tr>
<tr>
<td><code>&lt;option&gt;</code></td>
<td>Defines an option in a drop-down list</td>
</tr>
<tr>
<td><code>&lt;button&gt;</code></td>
<td>Defines a clickable button</td>
</tr>
<tr>
<td><code>&lt;datalist&gt;</code></td>
<td>Specifies a list of pre-defined options for input controls</td>
</tr>
<tr>
<td><code>&lt;keygen&gt;</code></td>
<td>Defines a key-pair generator field (for forms)</td>
</tr>
<tr>
<td><code>&lt;output&gt;</code></td>
<td>Defines the result of a calculation</td>
</tr>
</tbody>
</table>
<h3 id="HTML5-Semantic-Elements"><a href="#HTML5-Semantic-Elements" class="headerlink" title="HTML5 Semantic Elements"></a>HTML5 Semantic Elements</h3><table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;article&gt;</code></td>
<td>Defines an article</td>
</tr>
<tr>
<td><code>&lt;aside&gt;</code></td>
<td>Defines content aside from the page content</td>
</tr>
<tr>
<td><code>&lt;details&gt;</code></td>
<td>Defines additional details that the user can view or hide</td>
</tr>
<tr>
<td><code>&lt;figcaption&gt;</code></td>
<td>Defines a caption for a <code>&lt;figure&gt;</code> element</td>
</tr>
<tr>
<td><code>&lt;figure&gt;</code></td>
<td>Specifies self-contained content, like illustrations, diagrams, photos, code listings, etc.</td>
</tr>
<tr>
<td><code>&lt;footer&gt;</code></td>
<td>Defines a footer for a document or section</td>
</tr>
<tr>
<td><code>&lt;header&gt;</code></td>
<td>Specifies a header for a document or section</td>
</tr>
<tr>
<td><code>&lt;main&gt;</code></td>
<td>Specifies the main content of a document</td>
</tr>
<tr>
<td><code>&lt;mark&gt;</code></td>
<td>Defines marked/highlighted text</td>
</tr>
<tr>
<td><code>&lt;nav&gt;</code></td>
<td>Defines navigation links</td>
</tr>
<tr>
<td><code>&lt;section&gt;</code></td>
<td>Defines a section in a document</td>
</tr>
<tr>
<td><code>&lt;summary&gt;</code></td>
<td>Defines a visible heading for a <code>&lt;details&gt;</code> element</td>
</tr>
<tr>
<td><code>&lt;time&gt;</code></td>
<td>Defines a date/time</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML 学习笔记之二]]></title>
      <url>http://rrkaige.com/2016/08/31/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p> 继续昨天的学习。教程来自 <a href="http://www.w3schools.com/html/" target="_blank" rel="external">w3schools</a>，整理如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160831-myblog31.jpg" alt="HTML5"></p>
<a id="more"></a>
<h3 id="HTML-Colors"><a href="#HTML-Colors" class="headerlink" title="HTML Colors"></a>HTML Colors</h3><ul>
<li>a color can be specified by using a <strong>color name</strong></li>
<li>a color can also be specified as an <strong>RGB value</strong>, using this formula: <code>rgb(red, green, blue)</code>. Each parameter (red, green, and blue) defines the intensity of the color between 0 and 255.</li>
<li>a color can also be specified using a <strong>hexadecimal value</strong> in the form: <code>#RRGGBB</code>, where RR (red), GG (green) and BB (blue) are hexadecimal values between 00 and FF (same as decimal 0-255).</li>
</ul>
<h3 id="HTML-Styles-CSS"><a href="#HTML-Styles-CSS" class="headerlink" title="HTML Styles - CSS"></a>HTML Styles - CSS</h3><table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;style&gt;</code></td>
<td>Defines style information for an HTML document</td>
</tr>
<tr>
<td><code>&lt;link&gt;</code></td>
<td>Defines a link between a document and an external resource</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Links"><a href="#HTML-Links" class="headerlink" title="HTML Links"></a>HTML Links</h3><ul>
<li>Use the <code>&lt;a&gt;</code> element to define a link</li>
<li>Use the <strong>href</strong> attribute to define the link address</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">a:link    &#123;color:green; background-color:transparent; text-decoration:none&#125;</div><div class="line">a:visited &#123;color:pink; background-color:transparent; text-decoration:none&#125;</div><div class="line">a:hover   &#123;color:red; background-color:transparent; text-decoration:underline&#125;</div><div class="line">a:active  &#123;color:yellow; background-color:transparent; text-decoration:underline&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Use the <strong>target</strong> attribute to define where to open the linked document</li>
</ul>
<table>
<thead>
<tr>
<th>value</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>_blank</td>
<td>in a new window or tab</td>
</tr>
<tr>
<td>_self</td>
<td>in the same window/tab as it was clicked (this is default)</td>
</tr>
<tr>
<td>_parent</td>
<td>in the parent frame</td>
</tr>
<tr>
<td>_top</td>
<td>in the full body of the window</td>
</tr>
<tr>
<td>framename</td>
<td>in a named frame</td>
</tr>
</tbody>
</table>
<ul>
<li>Use the <code>&lt;img&gt;</code> element (inside <code>&lt;a&gt;</code>) to use an image as a link</li>
<li>Use the <strong>id</strong> attribute (<code>id=&quot;value&quot;</code>) to define bookmarks in a page</li>
<li>Use the <strong>href</strong> attribute (<code>href=&quot;#value&quot;</code>) to link to the bookmark</li>
</ul>
<p>First, create a bookmark with the id attribute:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;h2 id=&quot;tips&quot;&gt;Useful Tips Section&lt;/h2&gt;</div></pre></td></tr></table></figure>
<p>Then, add a link to the bookmark (“Useful Tips Section”), from within the same page:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;#tips&quot;&gt;Visit the Useful Tips Section&lt;/a&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;a&gt;</code></td>
<td>Defines a hyperlink</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Images"><a href="#HTML-Images" class="headerlink" title="HTML Images"></a>HTML Images</h3><ul>
<li>Use the HTML <code>&lt;img&gt;</code> element to define an image</li>
<li>Use the HTML <strong>src</strong> attribute to define the URL of the image</li>
<li>Use the HTML <strong>alt</strong> attribute to define an alternate text for an image, if it cannot be displayed</li>
<li>Use the HTML <strong>width</strong> and <strong>height</strong> attributes to define the size of the image</li>
</ul>
<p><strong>Note:</strong> Always specify the width and height of an image. If width and height are not specified, the page will flicker while the image loads.</p>
<ul>
<li>Use the CSS <strong>width</strong> and <strong>height</strong> properties to define the size of the image (alternatively)</li>
<li>Use the CSS <strong>float</strong> property to let the image float</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;&lt;img src=&quot;smiley.gif&quot; alt=&quot;Smiley face&quot; style=&quot;float:right;width:42px;height:42px;&quot;&gt;</div><div class="line">The image will float to the right of the text.&lt;/p&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Use the HTML <code>&lt;map&gt;</code> element to define an image-map</li>
<li>Use the HTML <code>&lt;area&gt;</code> element to define the clickable areas in the image-map</li>
<li>Use the HTML <code>&lt;img&gt;</code>‘s element usemap attribute to point to an image-map</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;planets.gif&quot; alt=&quot;Planets&quot; usemap=&quot;#planetmap&quot; style=&quot;width:145px;height:126px;&quot;&gt;</div><div class="line"></div><div class="line">&lt;map name=&quot;planetmap&quot;&gt;</div><div class="line">  &lt;area shape=&quot;rect&quot; coords=&quot;0,0,82,126&quot; alt=&quot;Sun&quot; href=&quot;sun.htm&quot;&gt;</div><div class="line">  &lt;area shape=&quot;circle&quot; coords=&quot;90,58,3&quot; alt=&quot;Mercury&quot; href=&quot;mercur.htm&quot;&gt;</div><div class="line">  &lt;area shape=&quot;circle&quot; coords=&quot;124,58,8&quot; alt=&quot;Venus&quot; href=&quot;venus.htm&quot;&gt;</div><div class="line">&lt;/map&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Loading images takes time. Large images can slow down your page. Use images carefully.</p>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;img&gt;</code></td>
<td>Defines an image</td>
</tr>
<tr>
<td><code>&lt;map&gt;</code></td>
<td>Defines an image-map</td>
</tr>
<tr>
<td><code>&lt;area&gt;</code></td>
<td>Defines a clickable area inside an image-map</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Tables"><a href="#HTML-Tables" class="headerlink" title="HTML Tables"></a>HTML Tables</h3><ul>
<li>Use the HTML <code>&lt;table&gt;</code> element to define a table</li>
<li>Use the HTML <code>&lt;caption&gt;</code> element to define a table caption</li>
<li>Use the HTML <code>&lt;tr&gt;</code> element to define a table row</li>
<li>Use the HTML <code>&lt;th&gt;</code> element to define a table heading</li>
<li>Use the HTML <code>&lt;td&gt;</code> element to define a table data</li>
</ul>
<p><strong>Note:</strong> The <code>&lt;td&gt;</code> elements are the data containers of the table.<br>They can contain all sorts of HTML elements; text, images, lists, other tables, etc.</p>
<ul>
<li>Use the CSS <strong>border</strong> property to define a border</li>
<li>Use the CSS <strong>border-collapse</strong> property to collapse cell borders</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">table, th, td &#123;</div><div class="line">    border: 1px solid black;</div><div class="line">    border-collapse: collapse;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Use the CSS <strong>padding</strong> property to add padding to cells</li>
<li>Use the CSS <strong>text-align</strong> property to align cell text</li>
<li>Use the CSS <strong>border-spacing</strong> property to set the spacing between cells</li>
</ul>
<p><strong>Note:</strong> If the table has collapsed borders, border-spacing has no effect.</p>
<ul>
<li>Use the <strong>colspan</strong> attribute to make a cell span many columns</li>
<li>Use the <strong>rowspan</strong> attribute to make a cell span many rows</li>
<li>Use the <strong>id</strong> attribute to uniquely define one table</li>
</ul>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;table&gt;</code></td>
<td>Defines a table</td>
</tr>
<tr>
<td><code>&lt;th&gt;</code></td>
<td>Defines a header cell in a table</td>
</tr>
<tr>
<td><code>&lt;tr&gt;</code></td>
<td>Defines a row in a table</td>
</tr>
<tr>
<td><code>&lt;td&gt;</code></td>
<td>Defines a cell in a table</td>
</tr>
<tr>
<td><code>&lt;caption&gt;</code></td>
<td>Defines a table caption</td>
</tr>
<tr>
<td><code>&lt;colgroup&gt;</code></td>
<td>Specifies a group of one or more columns in a table for formatting</td>
</tr>
<tr>
<td><code>&lt;col&gt;</code></td>
<td>Specifies column properties for each column within a <code>&lt;colgroup&gt;</code> element</td>
</tr>
<tr>
<td><code>&lt;thead&gt;</code></td>
<td>Groups the header content in a table</td>
</tr>
<tr>
<td><code>&lt;tbody&gt;</code></td>
<td>Groups the body content in a table</td>
</tr>
<tr>
<td><code>&lt;tfoot&gt;</code></td>
<td>Groups the footer content in a table</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Lists"><a href="#HTML-Lists" class="headerlink" title="HTML Lists"></a>HTML Lists</h3><ul>
<li>Use the HTML <code>&lt;ul&gt;</code> element to define an unordered list</li>
<li>Use the CSS list-style-type property to define the list item marker</li>
</ul>
<table>
<thead>
<tr>
<th>Value</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>disc</td>
<td>Sets the list item marker to a bullet (default)</td>
</tr>
<tr>
<td>circle</td>
<td>Sets the list item marker to a circle</td>
</tr>
<tr>
<td>square</td>
<td>Sets the list item marker to a square</td>
</tr>
<tr>
<td>none</td>
<td>The list items will not be marked</td>
</tr>
</tbody>
</table>
<ul>
<li>Use the HTML <code>&lt;ol&gt;</code> element to define an ordered list</li>
<li>Use the HTML type attribute to define the numbering type</li>
</ul>
<table>
<thead>
<tr>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>type=”1”</td>
<td>The list items will be numbered with numbers (default)</td>
</tr>
<tr>
<td>type=”A”</td>
<td>The list items will be numbered with uppercase letters</td>
</tr>
<tr>
<td>type=”a”</td>
<td>The list items will be numbered with lowercase letters</td>
</tr>
<tr>
<td>type=”I”</td>
<td>The list items will be numbered with uppercase roman numbers</td>
</tr>
<tr>
<td>type=”i”</td>
<td>The list items will be numbered with lowercase roman numbers</td>
</tr>
</tbody>
</table>
<ul>
<li>Use the HTML <code>&lt;li&gt;</code> element to define a list item</li>
<li>Use the HTML <code>&lt;dl&gt;</code> element to define a description list</li>
<li>Use the HTML <code>&lt;dt&gt;</code> element to define the description term</li>
<li>Use the HTML <code>&lt;dd&gt;</code> element to define the description data</li>
<li>Lists can be nested inside lists</li>
<li>List items can contain other HTML elements</li>
<li>Use the CSS property float:left or display:inline to display a list horizontally</li>
</ul>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;ul&gt;</code></td>
<td>Defines an unordered list</td>
</tr>
<tr>
<td><code>&lt;ol&gt;</code></td>
<td>Defines an ordered list</td>
</tr>
<tr>
<td><code>&lt;li&gt;</code></td>
<td>Defines a list item</td>
</tr>
<tr>
<td><code>&lt;dl&gt;</code></td>
<td>Defines a description list</td>
</tr>
<tr>
<td><code>&lt;dt&gt;</code></td>
<td>Defines the term in a description list</td>
</tr>
<tr>
<td><code>&lt;dd&gt;</code></td>
<td>Defines the description in a description list</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Block-and-Inline-Elements"><a href="#HTML-Block-and-Inline-Elements" class="headerlink" title="HTML Block and Inline Elements"></a>HTML Block and Inline Elements</h3><p>A block-level element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).</p>
<p>Examples of block-level elements:</p>
<ul>
<li><code>&lt;div&gt;</code> is often used as a container for other HTML elements.</li>
<li><code>&lt;h1&gt; - &lt;h6&gt;</code></li>
<li><code>&lt;p&gt;</code></li>
<li><code>&lt;form&gt;</code></li>
</ul>
<p>An inline element does not start on a new line and only takes up as much width as necessary.</p>
<p>Examples of inline elements:</p>
<ul>
<li><code>&lt;span&gt;</code> is often used as a container for some text.</li>
<li><code>&lt;a&gt;</code></li>
<li><code>&lt;img&gt;</code></li>
</ul>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;div&gt;</code></td>
<td>Defines a section in a document (block-level)</td>
</tr>
<tr>
<td><code>&lt;span&gt;</code></td>
<td>Defines a section in a document (inline)</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Iframes"><a href="#HTML-Iframes" class="headerlink" title="HTML Iframes"></a>HTML Iframes</h3><p>An iframe can be used as the target frame for a link.</p>
<p>The <strong>target</strong> attribute of the link must refer to the <strong>name</strong> attribute of the iframe:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;iframe src=&quot;demo_iframe.htm&quot; name=&quot;iframe_a&quot;&gt;&lt;/iframe&gt;</div><div class="line"></div><div class="line">&lt;p&gt;&lt;a href=&quot;http://www.w3schools.com&quot; target=&quot;iframe_a&quot;&gt;W3Schools.com&lt;/a&gt;&lt;/p&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;iframe&gt;</code></td>
<td>Defines an inline frame</td>
</tr>
</tbody>
</table>
<h3 id="HTML-JavaScript"><a href="#HTML-JavaScript" class="headerlink" title="HTML JavaScript"></a>HTML JavaScript</h3><table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;script&gt;</code></td>
<td>Defines a client-side script</td>
</tr>
<tr>
<td><code>&lt;noscript&gt;</code></td>
<td>Defines an alternate content for users that do not support client-side scripts</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML 学习笔记之一]]></title>
      <url>http://rrkaige.com/2016/08/30/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p> 最近对前端感兴趣，遂学之。教程来自 <a href="http://www.w3schools.com/html/" target="_blank" rel="external">w3schools</a>，整理如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160830-myblog30.jpg" alt="HTML5"></p>
<a id="more"></a>
<h3 id="What-is-HTML"><a href="#What-is-HTML" class="headerlink" title="What is HTML"></a>What is HTML</h3><p>HTML is a <strong>markup</strong> language for <strong>describing</strong> web documents (web pages).</p>
<ul>
<li>HTML stands for <strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage</li>
<li>A markup language is a set of <strong>markup tags</strong></li>
<li>HTML documents are described by <strong>HTML tags</strong></li>
<li>Each HTML tag <strong>describes</strong> different document content</li>
</ul>
<p><strong>Note:</strong> You can use either .htm or .html as file extension. There is no difference, it is up to you.</p>
<h3 id="Common-lt-DOCTYPE-gt-Declarations"><a href="#Common-lt-DOCTYPE-gt-Declarations" class="headerlink" title="Common &lt;!DOCTYPE&gt; Declarations"></a>Common &lt;!DOCTYPE&gt; Declarations</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;    //HTML 5</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;    //HTML 4.01</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;    //HTML 1.0</div></pre></td></tr></table></figure>
<h3 id="HTML-Versions"><a href="#HTML-Versions" class="headerlink" title="HTML Versions"></a>HTML Versions</h3><table>
<thead>
<tr>
<th>Version</th>
<th>Year</th>
</tr>
</thead>
<tbody>
<tr>
<td>HTML</td>
<td>1991</td>
</tr>
<tr>
<td>HTML 2.0</td>
<td>1995</td>
</tr>
<tr>
<td>HTML 3.2</td>
<td>1997</td>
</tr>
<tr>
<td>HTML 4.01</td>
<td>1999</td>
</tr>
<tr>
<td>XHTML</td>
<td>2000</td>
</tr>
<tr>
<td>HTML5</td>
<td>2014</td>
</tr>
</tbody>
</table>
<h3 id="Empty-HTML-Elements"><a href="#Empty-HTML-Elements" class="headerlink" title="Empty HTML Elements"></a>Empty HTML Elements</h3><ul>
<li>HTML elements with no content are called empty elements.</li>
<li><code>&lt;br&gt;</code> is an empty element without a closing tag (the <code>&lt;br&gt;</code> tag defines a line break).</li>
<li>Empty elements can be “closed” in the opening tag like this: <code>&lt;br /&gt;</code>.</li>
<li>HTML5 does not require empty elements to be closed. But if you want stricter validation, or if you need to make your document readable by XML parsers, you must close all HTML elements properly.</li>
</ul>
<p><strong>Note:</strong> Some HTML elements are empty (have no content) and do not have an end tag, such as the <code>&lt;br&gt;</code> element (which indicates a line break).</p>
<h3 id="HTML-Attributes"><a href="#HTML-Attributes" class="headerlink" title="HTML Attributes"></a>HTML Attributes</h3><p>Below is an alphabetical list of some attributes often used in HTML:</p>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>alt</td>
<td>Specifies an alternative text for an image, when the image cannot be displayed</td>
</tr>
<tr>
<td>disabled</td>
<td>Specifies that an input element should be disabled</td>
</tr>
<tr>
<td>href</td>
<td>Specifies the URL (web address) for a link</td>
</tr>
<tr>
<td>id</td>
<td>Specifies a unique id for an element</td>
</tr>
<tr>
<td>src</td>
<td>Specifies the URL (web address) for an image</td>
</tr>
<tr>
<td>style</td>
<td>Specifies an inline CSS style for an element</td>
</tr>
<tr>
<td>title</td>
<td>Specifies extra information about an element (displayed as a tool tip)</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Headings"><a href="#HTML-Headings" class="headerlink" title="HTML Headings"></a>HTML Headings</h3><p><strong>Note:</strong></p>
<ul>
<li>Browsers automatically add some white space (a margin) before and after a heading.</li>
<li>Use HTML headings for headings only. Don’t use headings to make text <strong>BIG</strong> or <strong>bold</strong>.</li>
<li>Metadata typically define the document title, character set, styles, links, scripts, and other meta information.</li>
</ul>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;html&gt;</code></td>
<td>Defines the root of an HTML document</td>
</tr>
<tr>
<td><code>&lt;body&gt;</code></td>
<td>Defines the document’s body</td>
</tr>
<tr>
<td><code>&lt;head&gt;</code></td>
<td>A container for all the head elements (title, scripts, styles, meta information, and more)</td>
</tr>
<tr>
<td><code>&lt;h1&gt; to &lt;h6&gt;</code></td>
<td>Defines HTML headings</td>
</tr>
<tr>
<td><code>&lt;hr&gt;</code></td>
<td>Defines a thematic change in the content</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Paragraphs"><a href="#HTML-Paragraphs" class="headerlink" title="HTML Paragraphs"></a>HTML Paragraphs</h3><p><strong>Note:</strong></p>
<ul>
<li>Browsers automatically add some white space (a margin) before and after a paragraph.</li>
<li>Dropping the end tag can produce unexpected results or errors.</li>
</ul>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;p&gt;</code></td>
<td>Defines a paragraph</td>
</tr>
<tr>
<td><code>&lt;br&gt;</code></td>
<td>Inserts a single line break</td>
</tr>
<tr>
<td><code>&lt;pre&gt;</code></td>
<td>Defines pre-formatted text</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Styles"><a href="#HTML-Styles" class="headerlink" title="HTML Styles"></a>HTML Styles</h3><p>The HTML style attribute has the following syntax:</p>
<p><code>&lt;tagname style=&quot;property:value;&quot;&gt;</code></p>
<ul>
<li>Use the <strong>style</strong> attribute for styling HTML elements</li>
<li>Use <strong>background-color</strong> for background color</li>
<li>Use <strong>color</strong> for text colors</li>
<li>Use <strong>font-family</strong> for text fonts</li>
<li>Use <strong>font-size</strong> for text sizes</li>
<li>Use <strong>text-align</strong> for text alignment</li>
</ul>
<h3 id="HTML-Text-Formatting"><a href="#HTML-Text-Formatting" class="headerlink" title="HTML Text Formatting"></a>HTML Text Formatting</h3><p><strong>Note:</strong> Browsers display <code>&lt;strong&gt;</code> as <code>&lt;b&gt;</code>, and <code>&lt;em&gt;</code> as <code>&lt;i&gt;</code>. However, there is a difference in the meaning of these tags: <code>&lt;b&gt;</code> and <code>&lt;i&gt;</code> defines bold and italic text, but <code>&lt;strong&gt;</code> and <code>&lt;em&gt;</code> means that the text is “important”.</p>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;b&gt;</code></td>
<td>Defines bold text</td>
</tr>
<tr>
<td><code>&lt;em&gt;</code></td>
<td>Defines emphasized text </td>
</tr>
<tr>
<td><code>&lt;i&gt;</code></td>
<td>Defines italic text</td>
</tr>
<tr>
<td><code>&lt;small&gt;</code></td>
<td>Defines smaller text</td>
</tr>
<tr>
<td><code>&lt;strong&gt;</code></td>
<td>Defines important text</td>
</tr>
<tr>
<td><code>&lt;sub&gt;</code></td>
<td>Defines subscripted text</td>
</tr>
<tr>
<td><code>&lt;sup&gt;</code></td>
<td>Defines superscripted text</td>
</tr>
<tr>
<td><code>&lt;ins&gt;</code></td>
<td>Defines inserted text</td>
</tr>
<tr>
<td><code>&lt;del&gt;</code></td>
<td>Defines deleted text</td>
</tr>
<tr>
<td><code>&lt;mark&gt;</code></td>
<td>Defines marked/highlighted text</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Quotation-and-Citation-Elements"><a href="#HTML-Quotation-and-Citation-Elements" class="headerlink" title="HTML Quotation and Citation Elements"></a>HTML Quotation and Citation Elements</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;WWF&apos;s goal is to: &lt;q&gt;Build a future where people live in harmony with nature.&lt;/q&gt;&lt;/p&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;Here is a quote from WWF&apos;s website:&lt;/p&gt;  </div><div class="line">&lt;blockquote cite=&quot;http://www.worldwildlife.org/who/index.html&quot;&gt;  </div><div class="line">For 50 years, WWF has been protecting the future of nature.  </div><div class="line">The world&apos;s leading conservation organization,  </div><div class="line">WWF works in 100 countries and is supported by  </div><div class="line">1.2 million members in the United States and  </div><div class="line">close to 5 million globally.  </div><div class="line">&lt;/blockquote&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;The &lt;abbr title=&quot;World Health Organization&quot;&gt;WHO&lt;/abbr&gt; was founded in 1948.&lt;/p&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;address&gt;  </div><div class="line">Written by John Doe.&lt;br&gt;   </div><div class="line">Visit us at:&lt;br&gt;  </div><div class="line">Example.com&lt;br&gt;  </div><div class="line">Box 564, Disneyland&lt;br&gt;  </div><div class="line">USA  </div><div class="line">&lt;/address&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;&lt;cite&gt;The Scream&lt;/cite&gt; by Edvard Munch. Painted in 1893.&lt;/p&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;bdo dir=&quot;rtl&quot;&gt;This text will be written from right to left&lt;/bdo&gt;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;abbr&gt;</code></td>
<td>Defines an abbreviation or acronym</td>
</tr>
<tr>
<td><code>&lt;address&gt;</code></td>
<td>Defines contact information for the author/owner of a document</td>
</tr>
<tr>
<td><code>&lt;bdo&gt;</code></td>
<td>Defines the text direction</td>
</tr>
<tr>
<td><code>&lt;blockquote&gt;</code></td>
<td>Defines a section that is quoted from another source</td>
</tr>
<tr>
<td><code>&lt;cite&gt;</code></td>
<td>Defines the title of a work</td>
</tr>
<tr>
<td><code>&lt;q&gt;</code></td>
<td>Defines a short inline quotation</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Computer-Code-Elements"><a href="#HTML-Computer-Code-Elements" class="headerlink" title="HTML Computer Code Elements"></a>HTML Computer Code Elements</h3><table>
<thead>
<tr>
<th>Tag</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;code&gt;</code></td>
<td>Defines programming code</td>
</tr>
<tr>
<td><code>&lt;kbd&gt;</code></td>
<td>Defines keyboard input </td>
</tr>
<tr>
<td><code>&lt;samp&gt;</code></td>
<td>Defines computer output</td>
</tr>
<tr>
<td><code>&lt;var&gt;</code></td>
<td>Defines a variable</td>
</tr>
<tr>
<td><code>&lt;pre&gt;</code></td>
<td>Defines preformatted text</td>
</tr>
</tbody>
</table>
<h3 id="HTML-Comments"><a href="#HTML-Comments" class="headerlink" title="HTML Comments"></a>HTML Comments</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!-- Write your comments here --&gt;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Comments are not displayed by the browser, but they can help document your HTML source code.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[if IE 9]&gt;  </div><div class="line">    .... some HTML here ....  </div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[朋自远方来]]></title>
      <url>http://rrkaige.com/2016/08/28/%E6%9C%8B%E8%87%AA%E8%BF%9C%E6%96%B9%E6%9D%A5/</url>
      <content type="html"><![CDATA[<p> 朋友相聚，人生惬事。无需经常，不必太久，见见面，聊聊天，足以。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160828-myblog29.png" alt="Friends"></p>
<a id="more"></a>
<p> 年岁渐长，常联系的朋友渐少。剩下的多是发小和高中同学，组成我们的小圈子。人员一向固定，但也有谈恋爱的女生逐渐远离。人之常情。小圈子的好处在于时间便于安排，人一多事也多，协调起来颇烦。小圈子内，大伙都不能再熟，振臂一呼即可组局。谁有事不能到，大家也不会介怀。</p>
<p> 我们的圈子很纯粹，亲如兄弟姐妹，没啥不良嗜好，和抽烟喝酒玩游戏不沾边。聚会除了吃饭聊天，打牌是保留节目。一般玩升级和掼蛋，战况足够胶着。乒乓球和台球，也可供选择。</p>
<p> 大伙分散各地，相聚总是不多。时光易逝，万物会变，惟愿友谊长存。</p>
<p>PS：今天，与大头，小腾子，修平和阿娟小聚，玩牌，打乒乓球，不亦乐乎。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[口下留情]]></title>
      <url>http://rrkaige.com/2016/08/25/%E5%8F%A3%E4%B8%8B%E7%95%99%E6%83%85/</url>
      <content type="html"><![CDATA[<blockquote>
<p>人生三大水坑：凑热闹，随大流，替别人操心。</p>
</blockquote>
<p>这话是李笑来说的，现在社会，大抵如此。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160825-myblog28.jpg" alt="WTF, bro? I was sleeping."></p>
<a id="more"></a>
<p>今天在微信上看到大辉老师的这篇 <a href="http://m.sohu.com/n/466000291/" target="_blank" rel="external"> 文章</a>，大约就是一些吃瓜群众的无聊恶趣味，揪住过去一些问题不放。国人爱看热闹由来已久，常常为某个人某句话操碎了心。究其原因，应该是闲得慌。无所事事下，小摩擦也能成为大新闻。或者说，闲不是没事做，而是不想做。宁可凑热闹，不愿多读书。</p>
<p>这恰合我前天心态一文。当然，我不是大牛，没大辉老师的烦恼。但我可以不做吃瓜群众，不凑热闹。为这些鸡毛蒜皮争执，为那些明星艳事操心，不如多看几本书，多记录些感悟。</p>
<p>以前我觉得，什么都要了解些，这样无论和谁都能有共同话题。现在我发现，不加过滤的了解是浪费时间，也就是浪费生命。因为值得主动寻找话题的人少之又少，而有些人根本没必要浪费时间交流。有限的时间，应该投入到喜欢的东西上。知其然，知其所以然，“<strong>知识广度是深度的副产品</strong>”，深以为然。</p>
<p>可怕的是懒癌，这种病只能靠自己。朋友说，每天上班累死累活，下班睡觉，周末补觉，完全没有多余时间。我还未工作，不了解情况。但我们这代，我们这行，找个普通工作，十之八九如此。何况还要结婚生子，赡养双亲，人生大事一桩桩，永远没尽头。</p>
<p>似乎无解，其实是未做先怯。就像我搭建个人博客，做导航网页，之前是万万没想到，现在也是万万没想到。少些犹豫，多些行动。实践是检验真理的唯一标准，做到了，便也成了真理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">while (alive) &#123;</div><div class="line">    learn();</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 运行时识别 Genymotion 设备]]></title>
      <url>http://rrkaige.com/2016/08/24/Android-Studio%E8%BF%90%E8%A1%8C%E6%97%B6%E8%AF%86%E5%88%ABGenymotion%E8%AE%BE%E5%A4%87/</url>
      <content type="html"><![CDATA[<p>安装 <a href="https://developer.android.com/studio/index.html?gclid=CJzsxN_Q2c4CFRYIvAodm-gFoQ" target="_blank" rel="external">Android Studio</a> 之后（<a href="http://www.flag.com.tw/android/AndroidStudio/" target="_blank" rel="external">步骤 </a>），发现大家推荐的模拟器<a href="https://www.genymotion.com/" target="_blank" rel="external">Genymotion</a>，下载安装（<a href="https://briian.com/15110/genymotion.html" target="_blank" rel="external"> 步骤</a>）。结果，Android Studio 启动，运行程序时无法识别出 Genymotion 设备。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160824-myblog27.png" alt="Genymotion"></p>
<a id="more"></a>
<p>有问题找 Google。发现搜出来的千篇一律，从文字到图片一模一样，还都说是原创。找个时间早点的，<a href="http://my.oschina.net/liusicong/blog/356271" target="_blank" rel="external">解决 1</a>，要修改 Genymotion 里 <code>settings</code> 的<code>ADB</code>。设置好后，发现依然无效。</p>
<p>继续 Google。又找到一堆相似文，<a href="http://blog.csdn.net/chenxu6/article/details/47056143" target="_blank" rel="external">解决 2</a>，要进入 <code>BIOS</code> 设置使 <code>virtual</code> 为<code>enable</code>。没看懂，和 <code>BIOS</code> 有关？</p>
<p>Google 英文吧。找到这个，<a href="http://stackoverflow.com/questions/27261474/android-studio-doesnt-see-genymotion" target="_blank" rel="external">解决 3</a>，和解决 1 类似啊。研究半天，莫非？我先打开 Genymotion 插件，选择手机点击<code>start</code>，出现虚拟机页面，然后不关虚拟机，但关闭 Genymotion 插件，点击<code>run</code>，好吧，识别出设备了。点击<code>OK</code>，刚才的虚拟机页面出现 APP。原来如此。</p>
<p>进一步优化，参考<a href="http://www.cnblogs.com/JohnTsai/p/4132252.html" target="_blank" rel="external">Android 技巧分享——让官方模拟器和 genymotion 虚拟机飞起来</a>。</p>
<p>但这一整套实在折腾啊，好像并没有传说中的快速。或许我还需要进一步学习。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书须笔记]]></title>
      <url>http://rrkaige.com/2016/08/24/%E8%AF%BB%E4%B9%A6%E9%A1%BB%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<blockquote>
<p>The palest ink is better than the best memory.<br> 好记性不如烂笔头。</p>
</blockquote>
<p> 近来读书，周期颇长，须做笔记。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160824-myblog26.jpg" alt="Read Write Travel"></p>
<a id="more"></a>
<p> 越来越发现，要多读书。许是过去十年不近书籍，肚中墨水也都晃得差不多了。小学时，作业有读书笔记，那叫一个认真。虽然大都是些套路：内容梗概 + 思考感悟，但总是读了些文章的。那时候，去表姐家最爱找书看，没有大部头，多是初高中的课外阅读，《读者》之类期刊等。也有小说，《水浒传》，《西游记》害我哭得稀里哗啦，还得强迫自己看完，至今仍记忆犹新。没太多娱乐方式，我的童年唯有与书为伴，不得不说是种幸运。</p>
<p> 学如逆水行舟，不进则退。不读书，连聊天也乏善可陈。当然，大环境下，碎片化阅读的今天，很难真正坐下来，拿起一本书细细品读。但这不应是借口，想要读书，总能挤出时间。研究生以来，“大肆”买书，而今书已充栋矣。之前午睡前看会，挤地铁坐公交也看过，断断续续读完几本。这也有不足之处，读书断续，思维便也有断点，很多灵光一闪，恰如夜空流星，如果不加记录，往往最后难以回忆。我算是吃过亏了，书上标标画画，还得写写记记。这是人脑记忆的宿命，必须借助文字才能重生。</p>
<p> 读书路上，任重而道远。准备好烂笔头，随时定格思想的火花。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我们仨，再无生离和死别]]></title>
      <url>http://rrkaige.com/2016/08/23/%E6%88%91%E4%BB%AC%E4%BB%A8%EF%BC%8C%E5%86%8D%E6%97%A0%E7%94%9F%E7%A6%BB%E5%92%8C%E6%AD%BB%E5%88%AB/</url>
      <content type="html"><![CDATA[<blockquote>
<p>世间好物不坚牢，彩云易散琉璃脆。</p>
</blockquote>
<p>杨绛先生的《我们仨》读完，提笔竟一时语塞。盖因这本书前后看了近一个月，宿舍地铁公交，碎片化的时间里，有些想法不再清晰。唯有 Mum，Pop，圆 O，一家三口可爱的称呼，脑中久不散。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160823-myblog25.jpg" alt="We"></p>
<a id="more"></a>
<p>拿起书慢慢翻，等待记忆复苏。</p>
<h3 id="失散"><a href="# 失散" class="headerlink" title="失散"></a>失散 </h3><p> 前两部分尽是隐喻，深沉而痛苦。关于一个寻寻觅觅的万里长梦，梦中又有梦，浑不知真真假假。走不完的古驿道，一家人相聚又失散。那些简单而饱含深情的文字，一笔一划中都是血泪。</p>
<blockquote>
<p>我觉得我的心上给捅了一下，绽出一个血泡，像一只饱含着热泪的眼睛。</p>
<p>我心上又绽出几个血泡，添了几只饱含热泪的眼睛。</p>
<p>我心上连连地绽出一只又一只饱含热泪的眼睛。</p>
<p>我心上盖满了一只一只饱含热泪的眼睛，这时一起流下泪来。</p>
<p>我的手撑在树上，我的头枕在手上，胸中的热泪直往上涌，直涌到喉头。我使劲咽住，但是我使的劲儿太大，满腔热泪把胸口挣裂了。只听得噼嗒一声，地下石片上掉落下一堆 血肉模糊的东西。迎面的寒风，直往我胸口的窟窿里灌。我痛不可忍，忙蹲下把那血肉模糊的东西揉成一团往胸口里塞；幸亏血很多，把滓杂污物都洗干净了。</p>
</blockquote>
<p>读到这些，我的眼睛不禁发酸。风雨一生，相依为命，这是多大的苦痛，却只能咬牙忍住，强颜欢笑。</p>
<blockquote>
<p>我的心已结成一个疙疙瘩瘩的硬块，居然还能按规律匀匀地跳动。</p>
<p>我自以为已经结成硬块的心，又张开几只眼睛，潸潸流泪，把胸中那个疙疙瘩瘩的硬块湿润得软和了些，也光滑了些。</p>
<p>不过三里河的家，已不复是家，只是我的客栈了。</p>
</blockquote>
<p>读到这，我无以言语，心中如坠万钧，太沉重，太悲痛。</p>
<h3 id="插图"><a href="# 插图" class="headerlink" title="插图"></a>插图 </h3><p> 看到各式的插图，心情略略平复。那些年代感的老照片，书信往来，可爱画像，无不动人。沿着照片的时间轴，走过这家人生活的轨迹。他们是旧时代大家贵族的才子佳人，是留学海外的精英人士，是归国效力的知识分子，也是劳动改造的“右派”分子，是动乱年代的“牛鬼蛇神”，更是名满天下的学者，是受人尊敬的大师。人生何其多难哉！所谓文章憎命达，大抵如此。</p>
<h3 id="思念"><a href="# 思念" class="headerlink" title="思念"></a>思念 </h3><p> 第三部分相对轻松，是杨绛先生对过往生活的回忆，点滴之中见真情。</p>
<p>钱钟书先生的“拙手笨脚”让人捧腹，大师原来都有不足。他们自己租房，学做饭，出门散步“探险”，又喜得爱女。他们带着女儿游学巴黎，和志同道合的朋友交往。他们战乱时回国，努力融入大家庭的柴米油盐，照顾圆圆头认字读书，为生活四处奔波。新中国，他们洁身自爱，离群索居，只愿潜心研学，过单纯生活。可惜啊，是福不是祸，是祸躲不过。他们被教育，被揪斗，屡次搬家，住逼仄的办公室，还差点被煤气熏死。吃过的苦，流过的泪，怕也数不清。终于自由了，却又忙忙碌碌不得闲，终致病痛缠身，相继离世。“圆圆和爸爸最‘哥们’”，“妈妈有点笨哦”，这是一个单纯温馨的学者家庭。</p>
<h3 id="回顾"><a href="# 回顾" class="headerlink" title="回顾"></a>回顾 </h3><p> 翻完了，不平却也羡慕。为先生一家遭遇不平，羡慕他们的相濡以沫相爱相知相伴。人生苦短，佳人难觅，一见钟情志同道合更是凤毛麟角。爱别离，求不得，各种心酸，不足为外人道也。</p>
<blockquote>
<p>我见到她之前，从未想到要结婚；我娶了她几十年，从未后悔娶她；也未想过要娶别的女人。</p>
</blockquote>
<p>惟愿。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[心态，专注]]></title>
      <url>http://rrkaige.com/2016/08/22/%E5%BF%83%E6%80%81%EF%BC%8C%E4%B8%93%E6%B3%A8/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 宠辱不惊，看庭前花开花落；去留无意，望天上云卷云舒。</p>
</blockquote>
<p> 今天，持续半个多月的里约奥运会闭幕，期间没有过度关注，但也跟着新闻心情起伏。现在想来，心态依然不够专注。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160822-myblog24-1.jpg" alt="Focus"></p>
<a id="more"></a>
<p> 我并非体育迷，却也迷失在铺天盖地的宣传中。首金失利，心中难过。那晚女子 10 米气步枪决赛，杜丽易思玲双保险不敌美国小将，看得我心惊胆战。而后接连失利导致首日无金，心中不平。直到第二天，女子 10 米气手枪决赛，真真是捏一把汗，看张梦雪把首金收入囊中，不由兴奋。后面中国队开始发力，跳水、举重有失有得，有发挥失常，有裁判误判。游泳是非多，孙杨和霍顿的口水战，洪荒少女傅园慧的逗逼表演，小鲜肉们的“精彩”演出。乒乓球绝对霸主，无人能敌，帝国破坏龙马龙，绝凶虎张继科，当然少不了孔令辉刘国梁这对 CP。羽毛球喜忧参半，混双女双惨遭滑铁卢，小道消息满天飞，林丹惜败谌龙夺冠，还算挽回颜面。体操全面倒退，仅收获两枚铜牌，让人扼腕叹息。还有自行车跆拳道竞走的突破，特别是最后女排历史性夺冠，给全国人民打了一剂强力鸡血。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160822-myblog24-2.jpg" alt="Focus on What You Want"></p>
<p> 还以为没有过多关注，回想起来也是洋洋洒洒。没办法，消息随处可闻可见。输了，有对运动员的鼓励，有对裁判的质疑；赢了，深挖细说，鼓吹上天。夹杂些对举国体制的思考，对唯金牌论的抨击，对北京奥运辉煌的怀念，对四年后再战的悲观。一场盛大的舆论风暴，有足够的炮弹和口水。至于结束之后的行动？谁管。这么大的国家，还怕缺少新闻。这是一个开放而混乱的时代，当然，一切皆在原则之内。其他免谈。</p>
<p> 现在想来，奥运更像一场全民娱乐节目。无数人参与其中，各司其职，乐不思蜀。我也不例外。这个时代，一切皆娱乐，唯有如此，才能忘记本能。动物园里的动物也得找点娱乐活动，否则如何生存，如何逗趣游客。</p>
<p> 我想，我该做点改变，从纷扰中脱身，回归内心需求，专注眼下的工作。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160822-myblog24-3.jpg" alt="Follow One Course Until Successful"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 主题 NexT 添加人体时钟]]></title>
      <url>http://rrkaige.com/2016/08/21/Hexo%E4%B8%BB%E9%A2%98NexT%E6%B7%BB%E5%8A%A0%E4%BA%BA%E4%BD%93%E6%97%B6%E9%92%9F/</url>
      <content type="html"><![CDATA[<p>第一次见到这个插件在 <a href="http://blog.bomoo.com/pin/" target="_blank" rel="external">Pin 的博客</a>，当时就觉得印象深刻，想着加到自己博客，但不得其法，就没做。今天想起来，顺便 Google，发现原作者在<a href="http://chabudai.org/blog/?p=59" target="_blank" rel="external"> 这里</a>，简单到只需要插入一行代码，果断行动起来。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160821-myblog23.jpg" alt="Human Body Clock"></p>
<a id="more"></a>
<p>先尝试在自己的个人导航网页中添加，效果不错，看 <a href="http://navi.rrkaige.com/" target="_blank" rel="external"> 这里 </a>。心中有数，但是个人博客添加在哪呢，不懂前端，不会 CSS。我想起之前添加<code>High 一下</code> 的过程，对了，就是那个位置。<code>themes\next\layout\_partials\header.swig</code>，在原来位置加入代码，运行，可以！非常顺利，效果不错，和主题比较搭。</p>
<p>之前 <code>High 一下</code> 已经优化，这个后面看情况吧。</p>
<p>果然，还是要勇于尝试。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RSS 的使用]]></title>
      <url>http://rrkaige.com/2016/08/21/RSS%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>虽然之前搭建个人博客增加了 <strong>RSS</strong> 功能，但一直没明白其具体功能和使用。今天查了下，原来如此强大实用。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160821-myblog22.jpg" alt="RSS"></p>
<a id="more"></a>
<p>RSS<a href="https://zh.wikipedia.org/wiki/RSS" target="_blank" rel="external">定义 </a>，有些专业，具体使用方法没介绍。阮老师的<a href="http://www.ruanyifeng.com/blog/2006/01/rss.html" target="_blank" rel="external"> 文章 </a> 比较通俗，终于明白，有点类似微信公众号，能及时推送订阅的内容，里面提到要用阅读器添加才行。</p>
<p>好吧，要选阅读器。强迫症的我又 Google“<code>RSS 阅读器</code>”，原来有在线和离线之分，那当然在线好了，不用多装软件。网友推荐的 Google Reader，鲜果，抓虾，不过都已 Game Over。还有很多国内国外的推荐，实在不想多试。看到有道阅读，在线阅读器，好像不错，试了下，有广告。我发现可以直接订阅到浏览器实时书签，但一溜排书签实在太丑，体验太差。对了，Firefox 应该会有插件吧？一找，果然，还挺多。最终确定<a href="https://addons.mozilla.org/en-US/firefox/addon/newsfox/" target="_blank" rel="external"><strong>NewsFox</strong></a>，简洁，实用，正是我需要的。</p>
<p>把几位大牛的博客 RSS 链接加好，以后再也不用一一点开去看了，完美！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[七牛云上传重名图片刷新问题]]></title>
      <url>http://rrkaige.com/2016/08/19/%E4%B8%83%E7%89%9B%E4%BA%91%E4%B8%8A%E4%BC%A0%E9%87%8D%E5%90%8D%E5%9B%BE%E7%89%87%E5%88%B7%E6%96%B0%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>今天被这问题搞得够呛，还好最终解决了。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160819-myblog21.png" alt="HTTP Request and Response with CDN"></p>
<a id="more"></a>
<p>之前一篇文章《劳动光荣》，开始配图两幅，后来又在第一位插入一幅。强迫症的我按顺序重命名，如下（后缀 <code>-b</code> 是图片样式）：</p>
<table>
<thead>
<tr>
<th>图 A</th>
<th>图 B</th>
<th>图 C</th>
</tr>
</thead>
<tbody>
<tr>
<td>-</td>
<td>20160814-myblog15-1.jpg-b</td>
<td>20160814-myblog15-2.jpg-b</td>
</tr>
<tr>
<td>20160814-myblog15-1.jpg-b</td>
<td>20160814-myblog15-2.jpg-b</td>
<td>20160814-myblog15-3.jpg-b</td>
</tr>
</tbody>
</table>
<p>这样一改，麻烦随之而来。我推送 GitHub 后，打开博客，前两幅依然显示之前图片，第三幅倒是正常。开始我没多想，以为外链有错。七牛云删掉图片重新上传，检查文章图片外链，检查 GitHub 网页文档内容，没错啊。把图片删掉重加，把文章删掉重推，还是原样。难道是图片样式的原因？我删掉后缀，居然可以，加上，又不行！总不能不加图片样式吧，我不甘心。我发现 Hexo 调试时也一样。我甚至以为是 DNS 解析的原因，在 GoDaddy 更改 TTL，依然不行。我一直 Google“<code>Hexo NexT 图片重传</code>”之类问题，但似乎没人遇到过这种情况。真是奇怪！根本无计可施，我差点泄气了。</p>
<p>直到有那么个瞬间，我想到了缓存。对啊，缓存！我清除 FireFox 的所有缓存，重新点开博客，期待奇迹发生。可是，那两张图片依然坚挺。不应该啊。我用手机打开，同样。到底哪里出问题了？应该是服务器，网站是托管在 GitHub 上的啊。Github 有缓存？没有吧？只是存储网页文档，通过外链引用图片。对，外链，七牛云！所以七牛云运用缓存？我不确定，赶紧 Google。居然真是的，我早该想到，这样的服务肯定用到缓存才行。</p>
<p>所以找到根源了，<strong><a href="https://support.qiniu.com/hc/kb/article/134426/" target="_blank" rel="external">刷新缓存和生效时间 </a></strong>，需要刷新<strong>CDN 缓存</strong>。配合<a href="https://qiniu.kf5.com/hc/kb/article/112866/" target="_blank" rel="external"> 七牛云存储缓存机制，浏览器缓存，CDN 缓存 </a>，<a href="https://qiniu.kf5.com/hc/kb/article/69053/" target="_blank" rel="external"> 使用空间属性 maxAge 实现对缓存的控制 </a> 两篇文章，才算明白大概。原来有 <strong> 刷新 </strong> 功能呢。好吧，之前完全没注意。后面就简单了，把图片的链接贴进去刷新下。页面恢复正常的瞬间，太开心！</p>
<p>果然只有遇到问题解决问题才能真正搞懂问题啊。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[六级！六级！]]></title>
      <url>http://rrkaige.com/2016/08/19/%E5%85%AD%E7%BA%A7%EF%BC%81%E5%85%AD%E7%BA%A7%EF%BC%81/</url>
      <content type="html"><![CDATA[<p> 英语六级过了！暑假以来，不，准确说是，五年来苦苦等待的好消息。522 分，不高不低，但对目前即将找工作的我来说，无异于雪中送炭。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160819-myblog20.png-b" alt="CET-6"></p>
<a id="more"></a>
<p> 说起英语，真是又爱又恨。小学五年级起开始学习，到高中毕业考上大学，英语一直算我的强项。中考高考都是高分，当年王福娣老师、胡凤玉老师也是我喜爱尊敬的师长。我现在的英语水平，离不开当时勤学苦读打下的基础。</p>
<p> 进入大学，随着身心的放松，我的英语不升反降。当时抱着无所谓的态度吧，老师教得认真但也只是完成本职工作，加之第一学期考得不错，我就愈懈怠。从此一落千丈，到研究生期间英语考试都是低分飘过。当年的老本几经蚕食，早已所剩无几。</p>
<p> 学校规定大一不能参加英语四六级，所以大二上学期，也就是 2011 年 12 月，参加英语四级考试，完全“裸考”，结果出来我都震惊了。426 分！超及格线 1 分！这真是好坏五五开。好是四级过了，坏是让我更加不屑，一脚踏上了“裸考”的不归路。当然，这也许是个借口。主要还是我自身的态度，在一些事上分不清主次，没有明确的目标和计划。之后的我也饱尝苦果。</p>
<p> 没记错的话，从 2012 年 6 月，到今年 2016 年 6 月，每年 2 次，加上 1 次机考，总共 10 次，合计考试费 300 多。不算不知道，一算吓一跳。除去一两次交钱但没去，我必定前去“裸考”，分数也从 300 多到 400 不等。最高 421 分，那是 2013 年 6 月，保研考试之前。因为这，我丢掉了“英才计划”保外的名额，失去了更进一步的机会，保研考试的失利导致最终在这个校区再呆三年。这颗苦果真真是刻骨铭心，永世难忘。</p>
<p> 有时想想，我怎会如此不长记性。往年真题卷买了，放在角落蒙尘。总想着考前再看再做，两个月，一个月，两个星期，一个星期，最后还是“裸考”。身边的朋友同学也大多努努力过了，最后只剩我独自一人。现在想来还是难以理解，吃一堑并没长一智，倒是愈陷愈深。或许由于我看得开的性格，英语四六级作为找工作的门槛，可以嗤之以鼻但无法越过。英语确是基本能力，尤其于程序猿而言。</p>
<p> 言归正传，今年这最后一击，我不得不妥协。一整个月，扑在真题卷上，主攻听力和作文，渐渐摸出些门道。虽然考试题型又有改变，我还是有信心的。果然，拿到考卷，从头到尾我都做得很顺畅，这和之前历次考试苦思冥想大不同。交卷出来，我已浑身轻松，当然也忐忑不安。如果这样都不过，下次真不知如何准备了？难道还能拿出高考时的状态么？</p>
<p> 还好，也算功夫不负有心人，或者说，交了多年钱终有回报。这第十次圆满了，可算是超出预期，也是我的真实水平吧。从此，和英语四六级说拜拜。当然，英语学习依然不能落下。</p>
<p> 接下来，备战招聘季。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Arduino+Servomotor= 懒人计步器]]></title>
      <url>http://rrkaige.com/2016/08/19/Arduino-Servomotor-%E6%87%92%E4%BA%BA%E8%AE%A1%E6%AD%A5%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>七月初做的一个自动计步器，只为在微信运动中占领封面，就是这么任性！</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160819-myblog19.png-b" alt="Pedometer"></p>
<a id="more"></a>
<p>连续几天被一些万步达人吊打，只想出一口“恶气”。想到之前常用的 <strong>Arduino</strong>，可以做个自动装置嘛。为了模拟人体步态，得能持续做重复运动。初始方案用<strong> 步进电机 </strong>，带动手机在水平面做圆周运动。简单试验后否决了。原因一是步进电机转速太快；二是手机在水平面无论如何运动都不计步，必须有竖直方向的运动，这应该和计步算法有关。于是，改变方案，用<strong> 舵机 </strong> 带动手机，在竖直平面内做往复运动。固定方式费了番脑筋，弄不好手机摔坏可就得不偿失。开始想用热熔胶，思路在于连接手机和舵机，总是不放心。后来灵机一动，何不用个袋子套起来？随时拿取，绝对方便安全。换个思路就找到简单可靠的解决办法。最后，用一个 <strong> 自封袋</strong>，妥妥完成任务。工作视频如下：</p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMTYzMTYxODU0MA==" frameborder="0" allowfullscreen></iframe>

<p>程序是官方 servo 示例，简单调试修改参数即可，为的是达到最优计步速度。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">#include &lt;Servo.h&gt;</div><div class="line"></div><div class="line">Servo myservo;  // create servo object to control a servo</div><div class="line">// twelve servo objects can be created on most boards</div><div class="line"></div><div class="line">int pos = 0;    // variable to store the servo position</div><div class="line"></div><div class="line">void setup() &#123;</div><div class="line">  myservo.attach(9);  // attaches the servo on pin 9 to the servo object</div><div class="line">&#125;</div><div class="line"></div><div class="line">void loop() &#123;</div><div class="line">  while(1)&#123;</div><div class="line">    for (pos = 50; pos &lt;= 140; pos += 10) &#123; // goes from 0 degrees to 180 degrees</div><div class="line">      // in steps of 1 degree</div><div class="line">      myservo.write(pos);              // tell servo to go to position in variable &apos;pos&apos;</div><div class="line">      delay(15);                       // waits 15ms for the servo to reach the position</div><div class="line">    &#125;</div><div class="line">    for (pos = 140; pos &gt;= 50; pos -= 10) &#123; // goes from 180 degrees to 0 degrees</div><div class="line">      myservo.write(pos);              // tell servo to go to position in variable &apos;pos&apos;</div><div class="line">      delay(15);                       // waits 15ms for the servo to reach the position</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>为了完成视频制作，顺便自学 <a href="http://www.aijianji.com/" target="_blank" rel="external"><strong> 爱剪辑</strong></a>。个人觉得，这款国产软件绝对良心之作，特别对于我这种小白用户，不求精美花哨，但求简单好用。虽有片头片尾，毕竟无伤大雅，而且无可厚非。</p>
<p>最后的最后，我当然成功占领封面，一骑绝尘，笑傲群雄！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[观影前指南]]></title>
      <url>http://rrkaige.com/2016/08/18/%E8%A7%82%E5%BD%B1%E5%89%8D%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>一下午都在查找回顾中度过，有的已知，有的未知，更多的知道但不明白。这些观影二三事，有必要记录下来，以备后用。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160818-myblog18.png" alt="uTorrent"></p>
<a id="more"></a>
<p>观影指南，无非资源和工具。除去影院，如今网上大多需付费。回想以前，暴风影音，快播，迅雷，电驴，优酷土豆爱奇艺等各大视频网站，何等方便。现在连百度云都嫌不方便，正规网站更是少之又少。简单整理如下：</p>
<ul>
<li><strong><a href="http://bt.neu6.edu.cn/" target="_blank" rel="external">六维空间</a></strong>，资源网站，校园网 IPv6。大三时由大头处得知，但一直不常用。下载要注意<a href="http://bt.neu6.edu.cn/thread-1433198-1-1.html" target="_blank" rel="external">0DAY 命名及电影版本</a>：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">英文名称 + 版本说明 + 年份 + 片源 + 分辨率 + 视频编码 + 音频格式 - 压制小组 </div><div class="line">Riddick.2013.UNRATED.BluRay.720p.x264.AC3-CMCT</div><div class="line"> 英文名称：Riddick</div><div class="line">版本说明：UNRATED（未分级版）</div><div class="line">发行年份：2013</div><div class="line">电影片源：BluRay</div><div class="line">分辨率  ：720P</div><div class="line">视频编码：x264（H264）</div><div class="line">音频格式：AC3</div><div class="line">压制小组：CMCT（触摸春天）</div></pre></td></tr></table></figure>
<ul>
<li><strong><a href="http://www.utorrent.com/" target="_blank" rel="external">uTorrent</a></strong>，IPv6 种子下载神器，设置方法：<a href="http://bt.neu6.edu.cn/thread-1241644-1-1.html" target="_blank" rel="external">六维刷子应援帖②之 UT 设置篇（自从换了新 UT，嘛嘛再也不用担心我的上传啦）</a>，<a href="http://bt.neu6.edu.cn/thread-1241644-1-1.html" target="_blank" rel="external">uTorrent 常用设置及说明</a>。</li>
<li><strong><a href="http://www.imdb.com/" target="_blank" rel="external">IMDb</a></strong>，电影资料在线数据库，类似 <a href="https://movie.douban.com/" target="_blank" rel="external"> 豆瓣电影 </a>，其中<a href="http://www.imdb.com/chart/top?ref_=nv_mv_250_6" target="_blank" rel="external">TOP 榜</a> 值得一看。</li>
<li><strong><a href="http://potplayer.daum.net/" target="_blank" rel="external">PotPlayer</a></strong>，当年弃用暴风影音后多方比较的选择，干净简洁，功能强大得离谱。</li>
</ul>
<p>暂时这些就足够，缺的是观影量。六年来，确实极少用电脑看电影，特别是国外的一些优秀作品。更多时间沉浸在网络快餐剧中，一笑了之。今后的日子，慢慢补。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[不死小强]]></title>
      <url>http://rrkaige.com/2016/08/16/%E4%B8%8D%E6%AD%BB%E5%B0%8F%E5%BC%BA/</url>
      <content type="html"><![CDATA[<p> 回宿舍，刚开灯，桌上一个黑点快速移动，钻入桌缝消失不见。我知道，又一只不死小强。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160816-myblog17.jpg" alt="Flirting Scholar"></p>
<a id="more"></a>
<p> 今年小强太多，简直是蟑螂大爆炸。不知道是否和前段时间连续阴雨天气有关，反正宿舍随处可见，招摇过路，肆无忌惮。桌上，抽屉，鞋子，一不小心就会“偶遇”，甚至三五成群，恶心至极。而且可能营养过剩，油光黑亮，体型硕大。这些小强爬得快，还会飞，所有地方防不胜防。宿舍杂物又多，摆放也乱，正好浑水摸鱼，成了小强们的“天堂”。我万分恼怒，却无计可施。</p>
<p> 一天夜半，听见桌上沙沙响，估计是小强。打开手电，果不其然，正在使劲往装吐司的塑料袋里钻。一见着灯光，立马停住，然后往外退。我直接拎起全扔了。回头想想，那些书本，水杯，口琴岂不也遭殃。一时不寒而栗，恨之入骨。</p>
<p> 或许在生物学家眼中，不死小强极具研究价值，是“大宝藏”。略有洁癖的我却只想除之而后快。或者说，正常人都应该对小强难以接受吧。这更坚定了我的信念：自己居住，简单装修，保持卫生，让小强无处可藏。</p>
<p> 我想，我现在需要一个捕捉器。</p>
<p>2016/08/29，捕捉器略有成效，午时三刻，两只小强在阳光下坚持了五分钟。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[植物知道生命的答案]]></title>
      <url>http://rrkaige.com/2016/08/15/%E6%A4%8D%E7%89%A9%E7%9F%A5%E9%81%93%E7%94%9F%E5%91%BD%E7%9A%84%E7%AD%94%E6%A1%88/</url>
      <content type="html"><![CDATA[<p> 这本书看了蛮久，不是难理解，而是六篇独立成章，可以慢慢看。很多知识，完全和平时的想当然差之千里，植物远比人想象的“聪明”。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160815-myblog16.jpg" alt="What a Plant Knows"></p>
<a id="more"></a>
<p> 当然，植物的世界没有“聪明”这一概念，是站在人的角度，拟人化的说法。植物能“看”，有向光性，有光周期， 有独特的光敏色素。植物能“嗅”，能感知空气中的挥发物。植物有“触感”，本质是电信号的传递。植物能“听”，这一点还未被证实，植物更可能是聋子。植物知道“身在何处”，依赖平衡石对重力做出反应。植物有“记忆”，具备存储和提取生理信息的能力。</p>
<p> 我不是学生物的，不关注学术细节，只看研究方法。很多研究从达尔文的《物种起源》就已开始，那时候只能通过对比实验得出结论，证实或推翻经验论。随着技术提高，直到近代进入分子遗传学时代，很多问题在基因工程中找到了答案。可见，先进技术对科学发展功不可没，两者相辅相成，而这也提高了科研成本。</p>
<p> 不论是化学信号还是电信号，其实都是信息的传递。我们仍在模仿自然界，学习的路很长很长。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[劳动光荣]]></title>
      <url>http://rrkaige.com/2016/08/14/%E5%8A%B3%E5%8A%A8%E5%85%89%E8%8D%A3/</url>
      <content type="html"><![CDATA[<blockquote>
<p>一屋不扫，何以扫天下。</p>
</blockquote>
<p>回家两天，忙碌的两天，充实而幸福。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160814-myblog15-1.jpg" alt="Glorious Labor"></p>
<a id="more"></a>
<h3 id="拖地"><a href="# 拖地" class="headerlink" title="拖地"></a>拖地 </h3><p> 拖地是我回家劳动的保留项目，一桶井水，一把拖把，整个大堂尽在掌握。拖把入桶，旋转，摇摆，拧干，在水磨石地面上尽情挥舞。从左到右，再从右到左，以稳定的频率扫过每一寸地面。里里外外，一丝不苟，穿堂风过，明净的地面光脚可走。</p>
<h3 id="除草"><a href="# 除草" class="headerlink" title="除草"></a>除草 </h3><p> 除草是今年的新增项目。家后门有块空地，边上一个小坡，两棵樟树一株夜来香，母亲侍弄的盆栽高低错落，美中不足是间有杂草丛生。无处不在会断茎求生的水花生，一丛密密匝匝铺天盖地的麻，还有那些叫不出名字但互不相让牢牢挤占每一寸土地的杂草，任重而道远啊。夕阳西下，我戴上手套，拿起镰刀，搂过一把，齐根斩断，最后索性双手并上，左右开弓，将杂草连根拔起。端的是汗如雨下，可喜成果感人。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160814-myblog15-2.jpg-b" alt="Backyard"></p>
<h3 id="做井盖"><a href="# 做井盖" class="headerlink" title="做井盖"></a>做井盖 </h3><p> 家中有口水井，水质清澈，冬暖夏凉，洗衣洗菜方便不少。原先井盖是父亲用木板做的，年久霉烂，需要重制。和父亲用一块废弃塑料桌面板，加一堆电动工具，度量，切割，打磨，钻孔，安装，结实耐用的十六边形井盖顺利投入使用。果然，工欲善其事，必先利其器啊。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160814-myblog15-3.jpg-b" alt="Well Cover"></p>
<h3 id="修水管"><a href="# 修水管" class="headerlink" title="修水管"></a>修水管 </h3><p> 家中楼顶有水箱，每次用水泵将水压入太阳能热水器。前段时间水泵不堪重负光荣“退休”，洗澡成了大问题。既然现在供水水压大，干脆让水箱也提前“下岗”。弄清水管回路后，截断再连接，把锈坏的角阀换掉，上上下下忙活两天，终于大功告成。太阳能热水器继续发挥余热，母亲终于不再念叨，真好。</p>
<h3 id="打扫楼梯"><a href="# 打扫楼梯" class="headerlink" title="打扫楼梯"></a>打扫楼梯 </h3><p> 黄梅雨期间楼梯墙面渗水厉害，墙灰脱落，楼梯也蒙尘。我主动揽下任务，先扫后拖。四层阁楼满是落灰，顺便打扫。扶手不再光鲜，索性抹一遍。就是这么任性！</p>
<p>亲手收拾的家，无比亲切，睡在其中，万分心安。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[翻墙那些事儿]]></title>
      <url>http://rrkaige.com/2016/08/12/%E7%BF%BB%E5%A2%99%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
      <content type="html"><![CDATA[<blockquote>
<p>墙外的世界很精彩！</p>
</blockquote>
<p>如果不去看，永远不知道。蒙在鼓里的日子，幸福？信福？</p>
<p>无意讨论对错，世上本无绝对。立场不同，看法万千。所谓屁股决定脑袋，大抵如此。单就程序猿的世界来讲，不翻墙，毋宁死。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160812-myblog14.jpg" alt="GFW"></p>
<a id="more"></a>
<p>可我之前是如此“单纯”，明知有墙，却从未想过出去看看。可能和专业有关，毕竟不是纯计算机出身。一个是够用，既有无数“翻译员 + 搬运工”的劳动成果，何必追本溯源。一个是懒，怯于尝试，内心或隐隐觉得需高大上的技术，又久不得其门而入，如此一来再无动力。直到学习需要，诚心去找，新世界的大门，打开了。</p>
<p>简单整理下用过的翻墙工具。</p>
<ul>
<li><strong><a href="http://www.hotfreesky.tk/free-dom-men-latest-release/" target="_blank" rel="external">自由门</a></strong>，知道的第一个翻墙软件，当时没多用，网速似乎不行。</li>
<li><strong><a href="https://laod.org/" target="_blank" rel="external">老 D 博客 </a></strong>，个人博客，提供<code>hosts</code> 文件，管理员身份修改后即可，需要持续更新，网速不稳定。</li>
<li><strong><a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="external">Shadowsocks</a></strong>，一个可穿透防火墙的快速代理，需搭配代理商使用。用过 <a href="http://www.yizhihongxing.com/" target="_blank" rel="external"> 一枝红杏 </a>，付费使用一个月，速度还可以。<br><strong><a href="https://getfoxyproxy.org/" target="_blank" rel="external">FoxyProxy</a></strong>。配合 Shadowsocks，设置简单，按照<a href="http://sslite.me/136/" target="_blank" rel="external"> 教程 </a>，添加<a href="https://github.com/gfwlist/gfwlist" target="_blank" rel="external">gfwlist</a> 模式订阅。</li>
<li><strong><a href="https://github.com/getlantern/lantern" target="_blank" rel="external">Lantern 蓝灯</a></strong>，翻墙软件，免费版即可满足需求，速度稳定。</li>
<li><strong><a href="https://www.loveyunti.com/" target="_blank" rel="external">云梯</a></strong>，一枝红杏到期，Lantern 免费流量用太快而且网速慢，云梯提供 VPN 服务，付费使用一年，不想多折腾。</li>
</ul>
<p>暂且这些，希望能有不再用这些工具的日子。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[写日志的习惯]]></title>
      <url>http://rrkaige.com/2016/08/11/%E5%86%99%E6%97%A5%E5%BF%97%E7%9A%84%E4%B9%A0%E6%83%AF/</url>
      <content type="html"><![CDATA[<blockquote>
<p>“从童年起，我便独自一人”<br>照顾着 <br> 历代的星辰<br><em>——白鹤林《孤独》</em></p>
</blockquote>
<a id="more"></a>
<p>闲逛微博，看到这首诗，一眼喜欢。</p>
<p>把博客里仅有的五六篇博文删掉，包括最早三年多前的纠结，帐号无法注销唯有放着。微博的十几条动态暂且不动，但也不想继续。前段时间把微信相册清理个遍，剩下的都是偶感。只有 QQ 空间，当年那些文字，和记忆一起尘封。</p>
<p>有了个人博客，不再想打理其他。太多社交，结局总是心累。靠在一起取暖，终有曲终人散。唯有修炼自己，方能笑傲江湖。在这独自的空间，静静写些文字，或有过客，权作尘世的证明。</p>
<p>写日志的习惯起于高中，那本日记本现在家中书柜。期间断断续续，大多有感而发，可笑的是留有很多空白以及些许提示，是当时没来得及写，想着后来补记，结果依然空白。我的拖延症可见一斑，恐怕这辈子都难以补全。</p>
<p>考上大学，暑假买手机，申请 QQ，方进入正常社会。那时爱上写日志，生活中的琐事感慨愤怒开心，统统化为文字，加持朋友的点赞评论，心满意足。前前后后八九十篇，洋洋洒洒一时不觉。有段时间受柯同学影响，热衷类似诗歌体的随笔，也写过古文体的小文。勤于发说说，后来必配图。直到情感受挫，抑郁之下逐渐断了笔头。</p>
<p>微博微信不常动笔，一个太宽一个太窄，总是不适应。今年四月份，重新拾起日记本，一时不能自已。心中话太多，千言万语对谁说。那就和自己对话吧，记下曾经，然后挥挥衣袖。还缺一个虚拟世界的回忆成长录，而这个巧合之下必然之中的个人博客，就是我尘世中的自留地。</p>
<blockquote>
<p>采菊东篱下，悠然见南山。</p>
</blockquote>
<p>PS：重置文章分类，且作：<strong>尘世行者 </strong>，<strong> 闲暇时光 </strong>，<strong> 零壹之间</strong>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git 学习笔记]]></title>
      <url>http://rrkaige.com/2016/08/10/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>学习 Git 有段时间，断断续续，前期照着书和教程似懂非懂，直到近来用 GitHub 做个人博客和导航网页，才有所掌握。今天简单整理下，以备后用。再次感谢廖雪峰老师的 <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git 教程</a>，同时参考<a href="https://git-scm.com/book/zh/v2" target="_blank" rel="external">Git-Book</a>，<a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external"> 阮一峰 </a> 老师的 <a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html?utm_source=tool.lu" target="_blank" rel="external"> 常用 Git 命令清单</a>，<a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="external">Git 远程操作详解</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160810-myblog12.png" alt="Git"></p>
<a id="more"></a>
<p>整理如下：</p>
<h3 id="安装"><a href="# 安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li><code>git config --global user.name &quot;Your Name&quot;    //&quot;kaneren&quot;</code></li>
<li><code>git config --global user.email &quot;email@example.com&quot;    //&quot;rrkaige@gmail.com&quot;</code></li>
<li><code>git config user.name/user.email</code>，查看。</li>
</ul>
<h3 id="创建版本库"><a href="# 创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><ol>
<li><p>初始化一个 Git 仓库，<code>git init</code>。</p>
</li>
<li><p>添加文件到 Git 仓库，分两步：</p>
</li>
</ol>
<ul>
<li>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；</li>
<li>第二步，使用命令<code>git commit -m &quot;xxx&quot;</code>，完成。</li>
</ul>
<ol>
<li>CMD 命令：</li>
</ol>
<ul>
<li><code>mkdir &lt;folder&gt;</code>，创建文件夹；</li>
<li><code>cd &lt;folder&gt;/</code>，进入文件夹；</li>
<li><code>cat &lt;file&gt;</code>，显示文档内容；</li>
<li><code>vim &lt;file&gt;</code>，修改文档内容，与 <code>vi &lt;file&gt;</code> 有区别；</li>
<li><code>rm &lt;file&gt;</code>，删除文档。</li>
</ul>
<h3 id="版本管理"><a href="# 版本管理" class="headerlink" title="版本管理"></a>版本管理</h3><ol>
<li>版本回退</li>
</ol>
<ul>
<li>要随时掌握工作区的状态，使用 <code>git status</code> 命令。</li>
<li>如果 <code>git status</code> 告诉你有文件被修改过，用 <code>git diff</code> 可以查看修改内容。</li>
<li>HEAD 指向的版本就是当前版本，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上 100 个版本写 100 个 ^ 比较容易数不过来，所以写成<code>HEAD~100</code>。因此，Git 允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</li>
<li>穿梭前，用 <code>git log</code> 可以查看提交历史，以便确定要回退到哪个版本，如果嫌输出信息太多，看得眼花缭乱的，可以试试加上 <code>--pretty=oneline</code> 参数。</li>
<li>要重返未来，用 <code>git reflog</code> 查看命令历史，以便确定要回到未来的哪个版本。</li>
</ul>
<ol>
<li>工作区和暂存区</li>
</ol>
<ul>
<li>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是 Git 的版本库。</li>
<li>Git 的版本库里存了很多东西，其中最重要的就是称为 <code>stage</code>（或者叫<code>index</code>）的暂存区，还有 Git 为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code> 的一个指针叫<code>HEAD</code>。</li>
<li>第一步是用 <code>git add</code> 把文件添加进去，实际上就是把文件修改添加到暂存区；<br>第二步是用 <code>git commit</code> 提交更改，实际上就是把暂存区的所有内容提交到当前分支。</li>
<li>因为我们创建 Git 版本库时，Git 自动为我们创建了唯一一个 <code>master</code> 分支，所以，现在，<code>git commit</code>就是往 <code>master</code> 分支上提交更改。</li>
</ul>
<ol>
<li>修改删除</li>
</ol>
<ul>
<li>场景 1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- &lt;file&gt;</code>。</li>
<li>场景 2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景 1，第二步按场景 1 操作。</li>
<li>场景 3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</li>
<li>命令 <code>git rm</code> 用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</li>
</ul>
<h3 id="远程仓库"><a href="# 远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><ol>
<li>创建 SSH Key</li>
</ol>
<ul>
<li><code>cd ~/.ssh</code>，<code>ls</code>，查看是否已经有了 SSH 密钥；</li>
<li><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;   //&quot;rrkaige@gmail.com&quot;</code>，把邮件地址换成自己的邮件地址，然后一路回车，使用默认值即可，由于这个 Key 也不是用于军事目的，所以也无需设置密码；</li>
<li>在用户主目录里找到 <code>.ssh</code> 目录，里面有 <code>id_rsa</code> 和<code>id_rsa.pub</code>两个文件，这两个就是 SSH Key 的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</li>
</ul>
<ol>
<li>添加克隆</li>
</ol>
<ul>
<li>要关联一个远程库，使用命令<code>git remote add origin git@github.com:kaneren/repo-name.git</code>；</li>
<li>关联后，使用命令 <code>git push -u origin master</code> 第一次推送 master 分支的所有内容；</li>
<li>出现错误，使用命令<code>git pull git@github.com:kaneren/repo-name.git</code>；</li>
<li>此后，每次本地提交后，只要有必要，就可以使用命令 <code>git push origin master</code> 推送最新修改。</li>
<li>要克隆一个仓库，首先必须知道仓库的地址，然后使用 <code>git clone git@github.com:kaneren/repo-name.git</code> 命令克隆。</li>
<li>Git 支持多种协议，包括 <code>https</code>，但通过<code>ssh</code> 支持的原生 git 协议速度最快。</li>
</ul>
<h3 id="分支管理"><a href="# 分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><ol>
<li>创建合并</li>
</ol>
<ul>
<li>查看分支：<code>git branch</code></li>
<li>创建分支：<code>git branch &lt;name&gt;</code></li>
<li>切换分支：<code>git checkout &lt;name&gt;</code></li>
<li>创建 + 切换分支：<code>git checkout -b &lt;name&gt;</code></li>
<li>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></li>
<li>删除分支：<code>git branch -d &lt;name&gt;</code></li>
<li>当 Git 无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</li>
<li>用 <code>git log --graph  --pretty=oneline --abbrev-commit</code> 命令可以看到分支合并图。</li>
<li>合并分支时，加上 <code>--no-ff</code> 参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而 <code>fast forward</code> 合并就看不出来曾经做过合并。</li>
<li>当手头工作没有完成时，先把工作现场 <code>git stash</code> 一下，然后去修复 bug，修复后，再<code>git stash pop</code>，回到工作现场。</li>
<li>用 <code>git stash apply</code> 恢复，但是恢复后，stash 内容并不删除，你需要用 <code>git stash drop</code> 来删除。</li>
<li>开发一个新 feature，最好新建一个分支。</li>
<li>如果要丢弃一个没有被合并过的分支，可以通过 <code>git branch -D &lt;name&gt;</code> 强行删除。</li>
</ul>
<ol>
<li>多人协作</li>
</ol>
<ul>
<li>查看远程库信息，使用<code>git remote -v</code>；</li>
<li>本地新建的分支如果不推送到远程，对其他人就是不可见的；</li>
<li>从本地推送分支，使用 <code>git push origin branch-name</code>，如果推送失败，先用<code>git pull</code> 抓取远程的新提交；</li>
<li>在本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；</li>
<li>建立本地分支和远程分支的关联，使用<code>git branch --set-upstream branch-name origin/branch-name</code>；</li>
<li>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</li>
<li>因此，多人协作的工作模式通常是这样：<br>首先，可以试图用 <code>git push origin branch-name</code> 推送自己的修改；<br>如果推送失败，则因为远程分支比你的本地更新，需要先用 <code>git pull</code> 试图合并；<br>如果合并有冲突，则解决冲突，并在本地提交；<br>没有冲突或者解决掉冲突后，再用 <code>git push origin branch-name</code> 推送就能成功！<br>如果 <code>git pull</code> 提示<code>“no tracking information”</code>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream branch-name origin/branch-name</code>。</li>
</ul>
<h3 id="标签管理"><a href="# 标签管理" class="headerlink" title="标签管理"></a>标签管理</h3><ul>
<li><code>git tag &lt;name&gt;</code>，新建一个标签，默认为<code>HEAD</code>，也可以指定<code>git tag &lt;name&gt; &lt;commit id&gt;</code>；</li>
<li><code>git tag</code>，查看所有标签；</li>
<li><code>git tag -a &lt;tagname&gt; -m &quot;blablabla...&quot;</code>，指定标签信息；</li>
<li><code>git tag -s &lt;tagname&gt; -m &quot;blablabla...&quot;</code>，用 PGP 签名标签；</li>
<li><code>git show &lt;tagname&gt;</code>，查看标签信息。</li>
<li><code>git push origin &lt;tagname&gt;</code>，推送一个本地标签；</li>
<li><code>git push origin --tags</code>，推送全部未推送过的本地标签；</li>
<li><code>git tag -d &lt;tagname&gt;</code>，删除一个本地标签；</li>
<li><code>git push origin :refs/tags/&lt;tagname&gt;</code>，删除一个远程标签。</li>
</ul>
<h3 id="自定义"><a href="# 自定义" class="headerlink" title="自定义"></a>自定义</h3><ul>
<li><code>git config --global color.ui true</code>，适当地显示不同的颜色。</li>
<li>忽略某些文件时，需要编写 <code>.gitignore</code>，<a href="https://github.com/github/gitignore" target="_blank" rel="external">gitignore 文件</a> 要放到版本库里，并且可以对 <code>.gitignore</code> 做版本管理。</li>
<li><code>git config --global alias.&lt;cname&gt; &lt;name&gt;</code>，配置别名。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[那些迷人的材料]]></title>
      <url>http://rrkaige.com/2016/08/09/%E9%82%A3%E4%BA%9B%E8%BF%B7%E4%BA%BA%E7%9A%84%E6%9D%90%E6%96%99/</url>
      <content type="html"><![CDATA[<blockquote>
<p> 单是知道材料的基本化学组成，并无法了解材料的特性。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160809-myblog11.jpg" alt="Stuff Matters"></p>
<a id="more"></a>
<p> 这是一本神奇的书。它的神奇不在于其中的内容，因为书中介绍的是生活中随处可见的 10 种材料；它的神奇在于介绍的方式以及材料背后的科学。懂事以来，我们就生活在一个五彩缤纷的世界，周边各种材料制品随处可见，但我们往往习以为常，忽略这些常见材料的由来。或者说，我们曾有些许瞬间产生疑问，但无处求解无法求解，因为要真正弄懂非得阅读那些枯燥的文献不可，久而久之也就不再好奇。而这本书，就是用精彩的描述，将我们的生活和严谨的科学结合起来，为 10 种普通而不凡的材料理清脉络。</p>
<p> 作者对材料的兴趣源于地铁上攻击者的一刀袭击，从此一发不可收拾。书中以他在屋顶喝茶的照片为例，分别介绍钢（Steel）、纸（Paper）、混凝土（Concrete）、巧克力（Chocolate）、发泡材料（Foam）、塑料（Plastic）、玻璃（Glass）、碳材料（Graphite）、瓷器（Porcelain）、植入物（Implant）。每小节的叙述方式多样，很多都联系生活中的实物，纸之照片包装袋车票收据单，混凝土之附近摩天大楼的建造过程，发泡材料之工作经历，瓷器之家用的一套骨瓷器具，最具特色的是塑料一节是篇根据历史精心构思的剧本。所有材料的介绍不粗浅更不深奥，在娓娓道来中颇具趣味性。</p>
<p> 这样的书少见，因为对作者的要求很高。自己明白不难，难的是用通俗易懂的语言让别人明白。或许，这需要达到“看山还是山看水还是水”的境界。当然，本书只是深入浅出，展现神奇材料世界的一角。看过之后，或许忘了，但再看周围世界的某刻，定会有不一样的感受。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[奥运随想]]></title>
      <url>http://rrkaige.com/2016/08/06/%E5%A5%A5%E8%BF%90%E9%9A%8F%E6%83%B3/</url>
      <content type="html"><![CDATA[<p> 今天，2016 里约奥运会开幕。由于前期曝出的各种负面新闻，没有过多关注。晚上回看开幕式，印象大有改观。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160806-mybolg10.png" alt="2016 Rio Olympics"></p>
<a id="more"></a>
<p> 之前对巴西的印象，仅有狂欢节，桑巴，足球，亚马逊。今天看来，它的历史也不算短。从世居的南美土著，发现新大陆的欧洲殖民者，被贩卖的黑人奴隶，到近现代世界各地的移民潮，巴西是一个真正的民族大熔炉。开幕式的表演充满多元文化交流融合味道，歌声舞蹈都偏于热烈激情，老实说我是难以欣赏，但总归是欢乐的。而最重要的一点是开幕式体现出的环保绿色理念，除了些简单道具，基本上全靠投影，然而并不觉得简陋，是科技和人文的有机结合，展现了巴西的历史，传递了守护地球的呼声。巴西的热带雨林、淡水资源充沛，是名副其实的“地球之肺”。</p>
<p> 回想起 2008 北京奥运会时的盛况，唏嘘不已。举全国之力，大兴土木，排练表演，最后的效果当然轰动世界。但放到历史的长河，也只是浪花一朵。短短 8 年，回想起来已是过眼云烟。或者是第一次的荣幸，或者是大国的证明，或者是文化的传统，种种原因不一而足。但更应考虑的是普通大众的利益，是可持续发展。面子工程昙花一现，文化遗产才能流传千古。</p>
<p> 历史是由无数默默无闻的劳动人民创造的，成就的是帝王将相“伟人”们的名声。历史车轮滚滚向前，所有的一切尘归尘土归土。在这个自我意识觉醒科技飞速发展的时代，“分布式”较“集中式”有着更顽强的生命力。</p>
<p> 最重要的，每个人都要活出自己想要的人生。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Firefox 附件及设置——基于 Win10 系统]]></title>
      <url>http://rrkaige.com/2016/08/04/Firefox%E9%99%84%E4%BB%B6%E5%8F%8A%E8%AE%BE%E7%BD%AE%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EWin10%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<p>使用 Firefox 一段时间，尤其喜爱其可扩展性。可以说，只有想不到，没有做不到。简单盘点下安装的附件，以及其中遇到的问题和解决办法。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160804-myblog9.png" alt="Firefox"></p>
<a id="more"></a>
<p>整理如下：</p>
<ul>
<li><strong>维基词典 + Google 翻译</strong>。相对来说比较简单实用，支持多种翻译方式。</li>
<li><strong>网页截图</strong>。能截取整个网页，非常方便。</li>
<li><strong>FoxyProxy</strong>。配合 Shadowsocks 的翻墙利器，弃用 AutoProxy，设置简单，按照 <a href="http://sslite.me/136/" target="_blank" rel="external"> 教程 </a>，添加<a href="https://github.com/gfwlist/gfwlist" target="_blank" rel="external">gfwlist</a> 模式订阅，新世界的大门打开了。</li>
<li><strong>Xmarks</strong>。管理书签，本来有火狐帐号即可多台电脑同步，奈何不能跨平台，因为服务器不在一起。好吧，安装这个专门用于 Windows 和 Ubuntu 同步，火狐帐号用于台式机和笔记本同步。发现不能同时用，不然会出现两份书签，估计有 Bug。</li>
<li><strong>Tab Mix Plus</strong>。主页设置成个人导航网页后，新建标签页却无法搞定。本来不想装附件，查找后在浏览器地址栏输入 <code>about:config</code>，新建<code>browser.newtab.url</code> 首选项也不行。没办法，装了这个设置好后就 OK，一禁用就罢工，奇了怪了。</li>
</ul>
<p>暂时用的就这些，后续再补。</p>
<ul>
<li>2016/08/21，<strong>NewsFox</strong>，用于 RSS 订阅管理</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的个人导航网页]]></title>
      <url>http://rrkaige.com/2016/08/03/%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E7%BD%91%E9%A1%B5/</url>
      <content type="html"><![CDATA[<p>其实，做个人博客的最初想法来自于做个人导航网页。想当年，刚进大学时，我还是个只会用 360 浏览器和 360 杀毒的小白，之后换成 360 极速浏览器，主页自然是 <a href="https://hao.360.cn/" target="_blank" rel="external">360 导航</a>。大概是大三时，我开始用猎豹浏览器和金山毒霸，与之绑定的是<a href="https://www.duba.com/" target="_blank" rel="external"> 毒霸网址大全 </a>。期间也装过 Firefox 和 Chrome，但很快就卸载，原因一是当时不懂翻墙，google 无法使用；二是现有已足够使用。我从不是爱折腾的人，用了六年的手机铃声便是明证。说的好听是专一，不好听那就是懒了。于是，我每天忍受着导航网页无穷的广告和弹窗，直到前段时间遇到<a href="http://hao268.com/" target="_blank" rel="external">hao268</a>，总算清静多了。但还是太多，有太多用不到的链接，而我想用的却没有。特别是当我用上 Ubuntu，换成 Firefox，这种念头更加强烈。动力来自偶然，看到青砾的这个<a href="ccteg.com"> 黑石头</a>，我醒了。何不自己动手，丰衣足食？这才有我后面四处查找，结果看到别人的博客，心又痒痒，于是先把个人博客搞定，这才动手完成导航网页，取名<a href="navi.rrkaige.com">Navi</a>，即 Navigation 缩写。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160803-myblog8-1.png-b" alt="Navi"></p>
<a id="more"></a>
<p>虽然页面简陋，但对于我来说已经完全够用。闲话少叙，简单梳理下过程。</p>
<h3 id="网页制作"><a href="# 网页制作" class="headerlink" title="网页制作"></a>网页制作 </h3><p> 第一次做网页，这之前我只知 HTML+CSS+JavaScript 是网页设计的核心，但却从未学过，也由此望而生畏。还好，我找到了<a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap</a>，还有<a href="http://www.bootcss.com/" target="_blank" rel="external">Bootstrap 中文网</a>，样式和组件都有，要做的就是按照想法“拼积木”。再一次感谢开源，让世界如此美好。</p>
<p>但是知易行难，设计网站图标、添加网址链接这些简单，难点在于搜索框。代码从黑石头源码中来，研究半天大概了解作用是将 get 的关键词作为 URL 参数组成搜索的 URL，其中部分 URL 参数如下。</p>
<table>
<thead>
<tr>
<th>Google</th>
<th>百度</th>
<th>参数含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>q</td>
<td>wd</td>
<td>查询的关键词</td>
</tr>
<tr>
<td>ie</td>
<td>ie</td>
<td>输入编码，UTF-8</td>
</tr>
<tr>
<td>oe</td>
<td>oe</td>
<td>输出编码，UTF-8</td>
</tr>
<tr>
<td>-</td>
<td>tn</td>
<td>提交搜索请求的来源站点</td>
</tr>
</tbody>
</table>
<p>我现在主用 Google，但有时候也需要百度，就想着做成带一个输入框然后可选的搜索框（下拉 / 勾选方式），结果尝试很多天都无法解决。因为我无法把代码合并，最后索性做成两个单独的搜索框，暂时能用，后面找到方法再来解决吧。</p>
<h3 id="网页发布"><a href="# 网页发布" class="headerlink" title="网页发布"></a>网页发布 </h3><p> 做好个人博客后，我一直疑惑二级域名的设置，之前搭建博客看的文章几乎都提到 <strong> 每个 GitHub 只能拥有一个 GitHub Pages 页面 </strong>，所以总是奇怪对那些大神的多个网站从何而来。这次，参照<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external"> 搭建一个免费的，无限流量的 Blog—-github Pages 和 Jekyll 入门 </a>（一开始没看明白，因为我并没有用 Jekyll，也并非搭建个人博客而是发布网页），经过我不断尝试失败，最后莫名搞定。当我看到<a href="http://chitanda.me/2015/11/03/multiple-git-pages-in-one-github-account/" target="_blank" rel="external"> 单个 GitHub 帐号下添加多个 GitHub Pages 的相关问题</a> 时，才恍然大悟。</p>
<h4 id="建立项目主页"><a href="# 建立项目主页" class="headerlink" title="建立项目主页"></a>建立项目主页 </h4><p> 先在 GitHub 上新建项目主页，并在本地建好仓库，重点是没有主分支，然后加入 Web 项目文件，add→commit→push，<br><code>$ git checkout --orphan gh-pages</code><br><code>$ git add .</code><br><code>$ git commit -m &quot;first post&quot;</code><br><code>$ git remote add origin git@github.com:kaneren/navi.git</code><br><code>$ git push origin gh-pages</code><br>无法推送时可先 <code>$ git pull git@github.com:kaneren/navi.git</code> 即可，<br>这样通过 <code>http://rrkaige.com/navi</code> 就可以访问了。</p>
<h4 id="绑定二级域名"><a href="# 绑定二级域名" class="headerlink" title="绑定二级域名"></a>绑定二级域名 </h4><p> 还是直接在 GoDaddy 上进行设置，添加 <code>CNAME</code> 解析（虽然对 A 记录、CNAME 别名依旧半懂）。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160803-myblog8-2.png-b" alt="GoDaddy CNAME"></p>
<p>这样设置之后再回 GitHub 设置下 <code>CNAME</code>，确实可通过<code>http://navi.rrkaige.com</code> 访问了。</p>
<h3 id="后续"><a href="# 后续" class="headerlink" title="后续"></a>后续 </h3><p> 至此，我的个人导航网页 v1.0 算是上线了，立马设置成 Firefox 主页，后面视情况再进行升级改造吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[习蛙泳记]]></title>
      <url>http://rrkaige.com/2016/07/31/%E4%B9%A0%E8%9B%99%E6%B3%B3%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 今天应该是学游泳来最欢畅的一次，一蹬一划一呼一吸，不停歇十几个来回，蛙泳从未如此轻松。谨以此文纪念我的学游泳之路。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160731-myblog7.jpg" alt="Swimming"></p>
<a id="more"></a>
<p> 第一次去，记不清时间了，应该是刚读研。和小强去仙林校区游泳馆，大学四年竟从未踏足，也是奇迹。关键也从未有过学游泳的念头，是有多“不求上进”（当然学校不开设游泳课也是一个原因）。前期工作准备充足，泳衣泳帽泳镜，结果一下水，那种无处着落使不上劲的感觉就让我慌了神。所以可想而知，呛鼻喝水那是必须的，至于头昏脑胀眼冒金星就不说了。总之，感觉游泳真难，会游泳的人，真帅。</p>
<p> 怎么办，咬牙学呗！幸好坚持下来，才新技能 get。上网，找教学视频，资源不多，但总算找到一个详细的蛙泳讲解视频。耐心看完，手腿模仿，理论基础是有了，还差实践练习。后来又断断续续和小强，和伟哥，去过几次，频率当以月计。照例喝水，喝到打嗝。当然，漂浮是掌握了，也能在原地划拉几下，最起码不再手足无措。那种吸一口气，感受身体渐渐浮起的过程太奇妙，有种飘在空中，随时可乘风而去的错觉。我深深沉醉其中，然后，喝饱了。</p>
<p> 接下来印象深刻是去江北温泉那次。没错，在温泉池里我顺利一口气游出 5 米，手脚协调性大大提高，不再原地不动，至于换气那得慢慢来。后来再去游泳馆，就可以在浅水区开心戏水了。一口气，一鼓劲，伴随着呛水逐渐熟练。可换气始终节奏不对，深水区就是禁区。</p>
<p> 转折在今年 6 月 26 日，而且接下来是一连串突破。</p>
<p> 那天和诸伟、顾涛、老诸去的南大鼓楼游泳馆，或许是厚积终归薄发，或许是场馆设备更好，当然少不了诸伟的示范，我成功游出二十多米，而且顺利两次一换气。</p>
<p> 然后带小强去，看他在深水区如鱼得水，我狠狠心，蹬水而行。划水，换气，脑袋里再无他想，直到抓住扶杆，才回过神来，继而难以置信。原来，深水区并不可怕，闯过了也就那样。继续，我又盯上泳道，行动，然后顺利通过。我成功了！无比高兴，无比激动，无比振奋。</p>
<p> 接下来一次忘带泳镜，只能浮游，结果学会了狗刨，终于发现立在水中不沉的诀窍。悲剧的是刚熟练的蛙泳节奏乱了，我预感下次会更进一步。</p>
<p> 果不其然，再一次去我又找回了感觉，而且游完五个来回。之后一次是十个来回。两次一换气已经毫无压力。</p>
<p> 前天，仿佛打通任督二脉，游着游着就变成了一次一换气，前伸，蹬腿，滑翔，划水，呼吸，无比自然流畅，惊喜来的太快，简直难以自持。回来后，翻出视频再看，顿生原来如此之感，还有些勾脚翻掌的细节需要改进。</p>
<p> 于是，今天和老姐去台城游泳馆时已是如鱼得水。一通百通，仰面漂浮也可以，深潜也不是问题，两个字，痛快！</p>
<p> 从这两年来断断续续的学习，直到今日略有小成，中间郁闷之时自不必说，但终于苦尽甘来，当贺之。接下来，继续努力吧，少年！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[再读筑巢记]]></title>
      <url>http://rrkaige.com/2016/07/31/%E5%86%8D%E8%AF%BB%E7%AD%91%E5%B7%A2%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p> 记忆中看得最快且趣味十足的一本书，前些天读完后的一些感想如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160731-myblog6.jpg" alt="Nest Note"></p>
<a id="more"></a>
<blockquote>
<p>2016-07-23- 一口气读完《筑巢记》</p>
<p> 很久没这么痛快地读完一本书了。</p>
<p> 就在昨天，我才知道这本书，果断加入购物车。今天中午，我放下手中的书，深呼出一口气，思绪万千。</p>
<p> 整整两个小时，我完全沉浸在书里，跟随岩崎朋子的脚步，参观了她的小小的巢。谈不上高档奢侈，更没有富丽堂皇，只是简简单单，朴素地难以置信。匠心独具的实木家具，精心设计的厨房，随处可见的收纳，造型别致而各有用处的篮子和挂钩，还有作为点缀的画作和干花，整个房间错落有致，简约而不简陋。</p>
<p> 我想，这就是我想要的。今年以来，拥有一座小房子的念想时时萦绕心头。不要太大，不必太高，格局紧凑些，周边要有三两棵树，后院开辟成小菜园，绿植盆栽，四季花开。</p>
<p> 一直以来，总是找不着人生的方向。什么都想尝试，却总迈不出第一步。妄想打破牢笼，却又不敢不能。心中满是矛盾，只能随波逐流，浑浑噩噩。</p>
<p> 喜欢封面上的话，把生活慢慢修正成喜欢的样子。或许现在，我得屈服于生存，踽踽前行，内心深处的呼唤始终不能忘怀。我学游泳，逛木工爱好者论坛，看书，练习口琴，还有那些想做而没做的，只为有一天，面朝大海，春暖花开。</p>
<blockquote>
<p> 种一棵树的最佳时机是 20 年前，次佳时机是现在，生活亦然。</p>
</blockquote>
<p> 我的人生路，亦然。</p>
</blockquote>
<p> 今天拿起书，有些新想法。</p>
<ul>
<li><strong> 注重细节 </strong>。这一点随处可见，从筑巢前后的准备，内部的装饰，摆设的布置，宁缺毋滥，求少而精，于细节处见真诚。</li>
<li><strong> 探索世界 </strong>。从拉脱维亚的柳条筐到立陶宛的亚麻制品，从中国的实木家具到世界各地的画和明信片，走出家门，才能拥抱世界，认识更多的人，发现更多的美。不求一生在路上，但愿时刻准备着。</li>
<li><strong> 展现自我 &amp; 乐于分享 </strong>。这一点在网络世界更为重要，语言问题从来不是问题，关键在于开放的心态，享受从陌生人成为朋友的过程，与人交往的乐趣无穷。</li>
<li><strong> 时间管理 &amp; 空间管理 </strong>。空间管理，身为强迫症重度患者的我绝对 OK；时间管理却是要了我的命，从小拖拉的坏习惯，强压下才能迅速完成任务的陋习，这都是我现在急需改变的。而个人博客的建立，算是我迈出的小小一步，接下来，贵在坚持。</li>
</ul>
<p> 细细想来，其实人的个性追求梦想全在这小小的巢中。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[封神传奇大杂烩]]></title>
      <url>http://rrkaige.com/2016/07/30/%E5%B0%81%E7%A5%9E%E4%BC%A0%E5%A5%87%E5%A4%A7%E6%9D%82%E7%83%A9/</url>
      <content type="html"><![CDATA[<p> 先来首音乐压压惊，刚设置成手机铃声。</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=26227035&auto=1&height=66"></iframe>

<p> 近三个月没去电影院，昨晚心血来潮，预定一张《封神传奇》，大公司，大演员，大制作，值得期待。</p>
<p> 于是，在这样一个闷热的午后，雷阵雨刚刚过去，地上满是残枝落叶，热气蒸腾，汗流浃背，我却在电影院又一次“触雷”。好吧，先调整下心态，客观公正地说说感想。</p>
<p> 一上来，镜头快速切换，配合说教的旁白，一座城池屹立山巅。没错，仿佛中土世界的山顶，巨石砌就圆顶伊斯兰风格的城池，这就是朝歌。皇城内金碧辉煌，侍卫们金盔金甲，纣王妲己一身金光闪闪，简直亮瞎我眼。妲己的九尾成了大杀器，这种类似蜈蚣还带个独眼的设定绝对会吓坏宝宝。富丽堂皇的大厅内盛宴正在举行，波斯地毯般的花纹，又有着古埃及王朝的既视感，慢着，后面这些侍女怎么又是日本艺伎的画风，简直让人眼花缭乱目不暇接。而此时，身怀使命的救援小分队也在赶来的路上，恕我眼拙，实在没看出那几匹拉车的怪物是啥。接下来，这个救援忍者小分队在地形复杂守卫薄弱的监狱里大秀跑酷绝技，救出一群翻着白眼阴森恐怖的灵族小孩，又在宽敞的下水道里用盾牌展现出滑板特技，成功完成任务。期间，大厅和监狱画面不断切换拼接的蒙太奇手法让我的智商受到了挑战。终于，老姜·姬发·雷和妲己·纣面对面王对王，我想，接下来要大战一场了吧。然而并没有，老姜·姬发·雷果断坐着仙鹤开溜，回到西岐。这同样是座神奇的都城，一望无垠的荒野上，类似大树桩的城堡。后来我才知道，它能屈能伸，还能腾空而起，是真正的“天空之城”。</p>
<p> 下面到哪来着，让我想想。哦，是雷·哪吒·二郎的寻宝历练之路。一个找回翅膀，成为雷神；一个找回风火轮，成为超人；一个找回金甲，成为钢铁侠。一路欢声笑语充满正能量，看得我尴尬癌都犯了。爱唠叨全靠它推进剧情的独眼草，看起来很厉害却瞬间领盒饭的龙套巨型蜈蚣，毛毛虫一样会喷墨还卖萌的东海三太子，爱上姜子牙想来场说走就走旅行的美女太 2 真人，负责貌美如花只有一天记忆的木头人蓝蝶，一路骑豹挥鞭潇潇洒洒最后变成毁灭日的申公豹，听起来是相当精彩啊。一场东海闹剧，尿液和虾蟹横飞，臭屁与龙宫齐震，毁三观，更毁五官。当然，还有那些飞越天空浩浩荡荡的大商银河舰队，感觉他们能神挡杀佛挡灭佛，结果一个冲击波全部 Game Over。</p>
<p> 最后还有个大惊喜！一剑斩杀毁灭日的金甲战神姬发神采飞扬，剑指朝歌，突然，黑屏了！咋回事？停电？这都能让我碰上？！还好，几秒钟后，画面又亮了，那个大树桩——哦不，是西岐城堡，居然拔地而起，这这这，大杀器啊，感情好戏才刚刚开场。我赶紧坐坐好，睁大眼，然后，灯亮了，音乐起，我一脸懵逼。这是要拍第二部的节奏？！难以置信，难以置信，难以置信。直到现在，我亦然难以置信。</p>
<p> 说好不吐槽，结果还是没忍住。要是没睡午觉，我一定会吹着空调成功入眠，然后感冒的。这样想来，倒也值回票价，毕竟包场么，要求不能太多。</p>
<p> 最后总结一下，国产电影保护月名不虚传，年度烂片家族又添一员。</p>
<p> 剩下的半年，再也不想去电影院了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 主题 NexT 捣鼓之二]]></title>
      <url>http://rrkaige.com/2016/07/29/Hexo%E4%B8%BB%E9%A2%98NexT%E6%8D%A3%E9%BC%93%E4%B9%8B%E4%BA%8C/</url>
      <content type="html"><![CDATA[<p>早起继续开工，先来首好听的歌。</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=28493991&auto=1&height=66"></iframe>

<p>整理如下：</p>
<h3 id="阅读量统计"><a href="# 阅读量统计" class="headerlink" title="阅读量统计"></a>阅读量统计 </h3><p> 参照 <a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external"> 为 NexT 主题添加文章阅读量统计功能 </a>，注册<a href="https://leancloud.cn/" target="_blank" rel="external">LeanClound</a>，设置后即可显示。为了更加酷炫一点，参照<a href="http://www.iamlj.com/2016/07/add-heat-function-for-hexo/" target="_blank" rel="external"> 为 Hexo Next 主题添加热度功能</a>，更改之后可行。</p>
<h3 id="图片点击"><a href="# 图片点击" class="headerlink" title="图片点击"></a>图片点击 </h3><p> 点击图片后会跳转到图片的连接地址，Fancybox 不起作用，找到同样的问题：<a href="https://github.com/iissnan/hexo-theme-next/issues/48" target="_blank" rel="external">1</a>，<a href="https://github.com/iissnan/hexo-theme-next/issues/724" target="_blank" rel="external">2</a>。无法解决，索性关闭 Fancybox。</p>
<h3 id="搜索服务"><a href="# 搜索服务" class="headerlink" title="搜索服务"></a>搜索服务 </h3><p> 采用<a href="http://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="external">Local Search</a>，简单配置即可。</p>
<h3 id="评论系统"><a href="# 评论系统" class="headerlink" title="评论系统"></a>评论系统 </h3><p> 采用 <a href="http://duoshuo.com/" target="_blank" rel="external"> 多说 </a>，设置后，在分类和标签页<a href="http://theme-next.iissnan.com/theme-settings.html#tags-page" target="_blank" rel="external"> 禁用</a>。</p>
<h3 id="关于页面"><a href="# 关于页面" class="headerlink" title="关于页面"></a>关于页面 </h3><p> 关于页面和分类 &amp; 标签一样创建，然后直接在 <code>index.md</code> 中正常写即可，不知道的我查半天也没找到答案，原来是自己太笨。</p>
<p>今天就折腾到这吧，差不多 OK，以后看情况再捣鼓。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 主题 NexT 捣鼓之一]]></title>
      <url>http://rrkaige.com/2016/07/28/Hexo%E4%B8%BB%E9%A2%98NexT%E6%8D%A3%E9%BC%93%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>昨天建好个人博客，今天趁着热情不减改造改造。新买的音乐蜗牛到了，装好，上图。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160728-myblog3-1.jpg-b" alt="Work Desk"></p>
<a id="more"></a>
<p>图床用的 <a href="http://www.qiniu.com/" target="_blank" rel="external"> 七牛云</a>，还不错。</p>
<p>开启音乐神器，来首印第安风情，好听到爆，简直不能自拔。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=16313118&auto=1&height=66"></iframe>

<h3 id="添加音乐播放器 -amp-High 一下"><a href="# 添加音乐播放器 -amp-High 一下" class="headerlink" title="添加音乐播放器 &amp;High 一下"></a>添加音乐播放器 &amp;High 一下 </h3><p> 感谢开源软件，让我们能在前人的肩膀上看到大海。借鉴 <a href="http://jijiaxin89.com/2015/08/21/%E7%8E%A9%E8%BD%AChexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bnext/" target="_blank" rel="external"> 玩转 Hexo 博客之 Next</a>和 <a href="http://www.iamlj.com/" target="_blank" rel="external"> 刘靖 </a> 的页面源码，在 <code>\themes\next\layout\_partials\header.swig</code> 中加入代码，大体 OK，效果绝对赞！</p>
<h3 id="阅读全文"><a href="# 阅读全文" class="headerlink" title="阅读全文"></a>阅读全文 </h3><p> 根据 <a href="http://theme-next.iissnan.com/faqs.html#read-more" target="_blank" rel="external"> 文档 </a>，直接在<code>\scaffolds\post.md</code> 中加入如下代码，每次新建时即生成样本文档。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">categories:</div><div class="line">tags:</div><div class="line">---</div><div class="line"></div><div class="line">&lt;!-- more --&gt;</div></pre></td></tr></table></figure>
<h3 id="中英文间隔"><a href="# 中英文间隔" class="headerlink" title="中英文间隔"></a>中英文间隔 </h3><p> 在中文和英文之间加入空格，折腾大半天。</p>
<p>看 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external"> 文档 </a>，说的也不清楚，在<code> 站点配置文件 </code> 中添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">auto_spacing: true #中文和英文之间加入空格</div></pre></td></tr></table></figure>
<p>结果不行。继续找答案，结果发现还要装 <a href="https://github.com/hexojs/hexo/issues/1242" target="_blank" rel="external"> 插件 </a>。装好<a href="https://github.com/hexojs/hexo-filter-auto-spacing" target="_blank" rel="external"> 插件</a>，界面变成了这样。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160728-myblog3-2.png-b" alt="Post Page"></p>
<p>还是不对，排版乱套了，看到 <a href="https://github.com/hexojs/hexo/issues/223" target="_blank" rel="external"> 这个 </a>，要修改主题的 CSS，完全不懂啊，找吧。费了九牛二虎之力，终于在<code>\themes\next\source\css\_common\components\post\post-expand.styl</code> 中看到了，泪奔~</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.posts-expand .post-body &#123;</div><div class="line">  +desktop() &#123; text-align: justify; &#125;</div></pre></td></tr></table></figure>
<p>果断删掉，看效果。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.posts-expand .post-body &#123;</div><div class="line">  +desktop() &#123;  &#125;</div></pre></td></tr></table></figure>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160728-myblog3-3.png-b" alt="Post Page"></p>
<p>依然不太对啊，自动换行了，再改动下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160728-myblog3-4.png-b" alt="Post Page"></p>
<p>无法解决，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/text-align" target="_blank" rel="external">text-align</a>挨个试一遍无效。好吧，暂时先这样吧。</p>
<h3 id="其他"><a href="# 其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li><strong><a href="http://theme-next.iissnan.com/theme-settings.html#rss" target="_blank" rel="external">添加 RSS</a></strong></li>
<li><strong><a href="http://theme-next.iissnan.com/theme-settings.html#author-sites" target="_blank" rel="external">侧边栏社交链接</a></strong></li>
<li><strong><a href="http://theme-next.iissnan.com/theme-settings.html#volunteer-404" target="_blank" rel="external">腾讯公益 404 页面</a></strong></li>
</ul>
<p>今天的个人博客好看多了，明天继续。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[生命可贵，万望自珍]]></title>
      <url>http://rrkaige.com/2016/07/28/%E7%94%9F%E5%91%BD%E5%8F%AF%E8%B4%B5%EF%BC%8C%E4%B8%87%E6%9C%9B%E8%87%AA%E7%8F%8D/</url>
      <content type="html"><![CDATA[<p> 好音乐镇楼。</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=16313124&auto=1&height=66"></iframe>

<p> 早期听到群里说镇上一对小夫妻争吵后挥刀互砍，均抢救无效而死，留下年幼的女儿。画面血腥，不忍直视，而且这对小夫妻居然都是 90 后。</p>
<p> 对于我们小镇来说，这绝对是大事。人命关天，何况如此年轻。91 年的丈夫和 98 年的妻子，惊讶之余只剩有惋惜。冲动是魔鬼，时时需理智。</p>
<p> 想想我们年迈的父母，含辛茹苦将我们养育长大，其中艰辛，恐怕唯有以后为人父母方能体会。而今，小树初成，雏鸟将飞，更应时时谨慎，处处小心。意外不常有，但总有意外。生命可贵，却更脆弱。所以，走路千万不能玩手机，过马路一定不要闯红灯，保持良好作息，坚持锻炼身体。只有这样，才能接过父母的接力棒，承担起家庭的重任。</p>
<p> 昨天，新神曲《感觉身体被掏空》引众人围观。在这个快节奏的年代，奋斗，拼搏，加班，玩命。为了挣钱，为了财务自由，放弃了太多太多。是否值得见仁见智，但搭上性命绝对不值。若出意外，父母妻儿如何？</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=422427950&auto=0&height=66"></iframe>

<p> 钱是挣不完的，生命却是有限的。趁着年轻，多看书，多远足，培养些兴趣爱好，恰当消费适当享受，发现生活中的美。如此，方不负来这世上走一遭。对我来说，今年迷于口琴和游泳，算是入门，还有那些年没看的书，是时候补上了。</p>
<p> 过去的六年，经历诸多，但浑浑噩噩或者说重复性工作的时间占了近半。现在想来，实在可惜。人生一直以来都没有明确目标，随波逐流，听之任之，毫无自控力，运气不算太差又兼心太大，如此种种，到目前是什么都想学，却又什么都不精。而今，即将走出大学的温室，接受社会的残酷。希望能真正找到自己爱做的事，并为之努力一生。而这，也就是幸福了吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[你好，博客]]></title>
      <url>http://rrkaige.com/2016/07/27/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h3 id="事起"><a href="# 事起" class="headerlink" title="事起"></a>事起 </h3><p> 现在是 2016 年 7 月 27 日，晚上 9:30，前前后后断断续续花了 5 天时间，至此，我的人博客网站大功告成（速度真够慢的）。其实，大部分时间都花在前期的选择和后期的调试上，当然还有几个恼人的小问题，以及每天昏睡一下午的恶习。好吧，暑期只有我一个人的实验室，吹着空调，听着音乐，完全提不起学习的兴致。想想自己，已经研二，找工作迫在眉睫，然而要学的 Java 刚刚起头，整天浑浑噩噩恍恍惚惚。</p>
<a id="more"></a>
<p>5 天前，照常在网上瞎逛，偶然看到 <a href="https://jenny42.com/" target="_blank" rel="external"> 张静宁 </a> 同学的个人博客，惊为天人！原来博客还能这么玩，这不就是我一直想要的么！赶紧 google，又陆续发现了更多精致好玩的个人博客，<a href="https://www.librehat.com[/" target="_blank" rel="external">Librehat</a>，<a href="http://yihui.name/cn[/" target="_blank" rel="external">谢益辉 </a>，<a href="http://lhzhang.com//" target="_blank" rel="external">Linghua Zhang</a>，Hexo 的作者<a href="https://zespia.tw/" target="_blank" rel="external">tommy351</a> 和 NexT 的作者 <a href="http://notes.iissnan.com/" target="_blank" rel="external">iissnan</a> 等等等等。原来搭建个人博客早已有之，而我这个研究僧却从来不知。作为自动化和双控出身，整整六年，对于网络的实际运用几近为零，可悲可叹！还有啥好说的，必须，立刻，马上，建个人博客。</p>
<p>于是，我一头扎进这看似清浅的水池，却不料别有洞天。十几年来，技术更迭，建站的方式也玲琅满目，各有千秋。域名，DNS，主机空间，服务器，Wordpress，Jekyll 等等或新或旧的概念，让选择强迫症的我一时无从下手。考虑再三，还是吸取前人经验，采用 <strong>GitHub Pages + Hexo + NexT</strong> 的方法实现。路线既定，那就开始吧。</p>
<h3 id="开工"><a href="# 开工" class="headerlink" title="开工"></a>开工 </h3><p> 作为一个完美主义者，我先老老实实把 <a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a> 和<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT</a>的文档大概浏览一遍，然后按照 <a href="http://sunwhut.com/2015/10/30/buildBlog/" target="_blank" rel="external">sunwhut</a> 和<a href="http://blog.shijinrong.cn/2016/01/03/How-to-build-a-blog/" target="_blank" rel="external">Astonep</a>两位同学的详细教程，一步一个脚印。当然，有问题找 google。</p>
<p>说到这里，前期也有些准备工作。</p>
<ul>
<li><strong>翻墙 </strong>。之前使用<a href="https://laod.org/" target="_blank" rel="external"> 老 D 博客 </a> 提供的免费方法，替换 <code>hosts</code> 文件；现在干脆花钱，使用 <a href="http://www.yizhihongxing.com/index.html" target="_blank" rel="external"> 一枝红杏</a>，安装 Shadowsocks，同时 Firefox 安装 Foxyproxy 插件，设置后即可。</li>
<li><strong>域名 </strong>。选择大家都推荐的<a href="https://sg.godaddy.com/zh?isc=gofdc196&amp;ci=" target="_blank" rel="external">GoDaddy</a>，一搜，发现<code>renrenkai.com</code>，<code>rrk.com</code>，<code>renk.com</code>，<code>kaneren.com</code> 都已被注册，还剩<code>rrkaige.com</code>，思前想后，买吧！</li>
</ul>
<p>GitHub 是四月就注册的，建立 <a href="https://github.com/kaneren/kaneren.github.io" target="_blank" rel="external"> 仓库 </a> 设置好就行，接下来按部就班，安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>，<a href="https://git-scm.com/downloads" target="_blank" rel="external">Git</a>（已有），<a href="https://desktop.github.com/" target="_blank" rel="external">GitHub Desktop</a>（可选），Hexo，NexT，不再多叙。期间，NexT 细节调整，有几个问题费时最多。</p>
<ul>
<li><strong>DNS 设置</strong>。没有按照教程使用 DNSpod 之类，直接在 GoDaddy 上进行设置，倒也可行，暂时没发现访问速度有问题。</li>
</ul>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20160727-myblog1-1.png-b" alt="GoDaddy DNS"></p>
<ul>
<li><strong>插入图片 </strong>。按照<a href="http://theme-next.iissnan.com/tag-plugins.html" target="_blank" rel="external"> 文档</a>，效果如上。</li>
<li><strong>博文预览</strong>。在浏览器地址栏输入 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> （默认端口为 4000）总是不行，后改端口<code>hexo s -p 3600</code>，<a href="http://localhost:3600/" target="_blank" rel="external">http://localhost:3600/</a> 方可。</li>
<li><strong>标签和分类设置 </strong>。看了好几遍<a href="http://theme-next.iissnan.com/theme-settings.html#tags-page" target="_blank" rel="external"> 文档 </a> 才明白，也是醉了。第一步是新建在 <code>/source/tags</code> 目录下，而第三步就按照文档修改在 <code>/tags</code> 目录下。</li>
<li><strong>Favicon 设置 </strong>。制作图标太繁琐，在<a href="http://michaelxiang.me/2015/11/30/hexo-next-optimize/" target="_blank" rel="external">hexo 之 next 主题优化整理</a> 找到答案。</li>
</ul>
<h3 id="后续"><a href="# 后续" class="headerlink" title="后续"></a>后续 </h3><p> 已经 11:10 了，许久不写长文，文思几近枯竭。好在大概说清楚前因后果，疏漏之处续补。</p>
]]></content>
    </entry>
    
  
  
</search>
