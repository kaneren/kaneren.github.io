<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一方天地</title>
  <subtitle>面朝大海，春暖花开</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://rrkaige.com/"/>
  <updated>2016-11-27T15:04:23.293Z</updated>
  <id>http://rrkaige.com/</id>
  
  <author>
    <name>Kane Ren</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>总是糊涂</title>
    <link href="http://rrkaige.com/2016/11/27/%E6%80%BB%E6%98%AF%E7%B3%8A%E6%B6%82/"/>
    <id>http://rrkaige.com/2016/11/27/总是糊涂/</id>
    <published>2016-11-27T14:02:25.000Z</published>
    <updated>2016-11-27T15:04:23.293Z</updated>
    
    <content type="html"><![CDATA[<p> 感情的世界里，我总是糊涂。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161127-myblog121.jpg" alt="Pursuit Of Happiness"></p>
<a id="more"></a>
<p> 理想主义？应该是幼稚吧。自认为看得很清，其实是众人当中最傻一个。感情洁癖？或许是孤芳自赏。无限意淫，想的是遥远的乌托邦。无法抉择？大概是博爱作祟。眼前是五颜六色花儿，心中是色彩斑斓世界。</p>
<p> 想太多，往往自作多情；想太多，往往作茧自缚；想太多，往往擦肩而过；想太多，往往一无所得。</p>
<p> 我本将心向明月，奈何明月照沟渠。曾经沧海难为水，除却巫山不是云。</p>
<p> 从一见钟情，到心如止水。从满腔热血，到心如死灰。从至死不渝，到随心所欲。从洁身自爱，到自暴自弃。是世界太快？抑或我走太慢？</p>
<p> 我不懂，我糊涂，我抓狂，我止躁。我痛如刀割，我舔舐伤口，我冷眼旁观，我欲语还休。我默默嚼碎，生生咽下，我拍拍胸口，强作欢颜。抹一把泪花，摔落在尘烬，转身，不见。</p>
<p> 亲爱的，妳在哪？我只怕，我坚持不到。我只怕，我等待不来。</p>
<p> 或许，我该孤独一生。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感情的世界里，我总是糊涂。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161127-myblog121.jpg&quot; alt=&quot;Pursuit Of Happiness&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="心态" scheme="http://rrkaige.com/tags/%E5%BF%83%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>不了之人，宫崎骏</title>
    <link href="http://rrkaige.com/2016/11/25/%E4%B8%8D%E4%BA%86%E4%B9%8B%E4%BA%BA%EF%BC%8C%E5%AE%AB%E5%B4%8E%E9%AA%8F/"/>
    <id>http://rrkaige.com/2016/11/25/不了之人，宫崎骏/</id>
    <published>2016-11-25T05:36:42.000Z</published>
    <updated>2016-11-26T12:37:35.316Z</updated>
    
    <content type="html"><![CDATA[<p> 看这部纪录片的时候，莫名感动。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161125-myblog119.jpg" alt="Hayao Miyazaki"></p>
<a id="more"></a>
<p>75 岁高龄的宫崎骏，退休三年的老爷子，准备再次出山，尝试之前一直抵触的 CG 技术，制作长篇动画。</p>
<blockquote>
<p> 和什么都不做就死了相比，在制作中死去要好得多。做点什么总比等死强。</p>
</blockquote>
<p>《风之谷》，《天空之城》，《龙猫》，《魔女宅急便》，《红猪》，《幽灵公主》，《千与千寻》，《哈尔的移动城堡》，《悬崖上的金鱼姬》，《虞美人盛开的山坡》，《起风了》……</p>
<p> 绝对高产，高质量，由此成就一个传奇。当年看《龙猫》《千与千寻》《悬崖上的金鱼姬》，里面天马行空的想象传递出的爱和美好，总能直击人心中最柔软的一处。</p>
<p> 荣光背后，是手绘的无比艰辛。据说，《起风了》中一段四秒钟镜头，足足花了一年多时间。如此专注，艺人和匠人的完美结合。</p>
<p> 试想，如果每年能完成一件让自己满意的事，大概也就五十件吧。</p>
<p> 时不我待。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看这部纪录片的时候，莫名感动。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161125-myblog119.jpg&quot; alt=&quot;Hayao Miyazaki&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="纪录片" scheme="http://rrkaige.com/tags/%E7%BA%AA%E5%BD%95%E7%89%87/"/>
    
      <category term="宫崎骏" scheme="http://rrkaige.com/tags/%E5%AE%AB%E5%B4%8E%E9%AA%8F/"/>
    
  </entry>
  
  <entry>
    <title>原创何在</title>
    <link href="http://rrkaige.com/2016/11/24/%E5%8E%9F%E5%88%9B%E4%BD%95%E5%9C%A8/"/>
    <id>http://rrkaige.com/2016/11/24/原创何在/</id>
    <published>2016-11-24T14:00:31.000Z</published>
    <updated>2016-11-24T14:44:52.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p> 熙来攘往的中国电视，终于容不下这唯一一档以原创为核心的音乐真人秀，慨当以叹！——刘欢 </p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161124-myblog118.jpg" alt="Monkey King: Hero Is Back"></p>
<a id="more"></a>
<p> 食堂，电视正播放某个音乐选秀节目，女歌手翻唱一首英文歌，声嘶力竭，极其熟悉。突然发现很无聊，当年也追过这类节目，现在觉得就是浪费时间。一场场秀，除了翻唱还是翻唱，或许有不同的味道，大多依然平淡无奇。节目的噱头更多在于灯光乐器舞蹈外貌故事，谁还去关注音乐本身呢。回顾往年节目，又有几个选手真正闯出一片天。娱乐罢了。</p>
<p> 网易云音乐最近总推送日语歌，听到太多熟悉的旋律。原来，华语翻唱如此之多。底下评论中，如我一般惊讶者不少，看来大家都在井底呆太久。现在想来，杰伦作为中国风开创者确实功不可没。</p>
<p> 开头是最近刘欢老师的感慨，《中国好歌曲》据说要停摆。纷扰的世界，大环境和小环境都不适应吧。回想那时，听到《野子》，《悟空》，《卷珠帘》的惊喜，至今仍在。可惜可叹。</p>
<p> 看音乐界的原创如此艰难，纷纷扰扰净是唯利主义。其他行业何尝不是？软件，同样抄袭成风，开源也是步履维艰。两者的平衡，如此难以把控。生活的重担，如何能说放就放？短暂的一生，到底该怎样活？</p>
<p> 但愿，浮世之中，能保持一颗初心。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=33162226&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;熙来攘往的中国电视，终于容不下这唯一一档以原创为核心的音乐真人秀，慨当以叹！——刘欢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161124-myblog118.jpg&quot; alt=&quot;Monkey King: Hero Is Back&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="音乐" scheme="http://rrkaige.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="原创" scheme="http://rrkaige.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>JQuery 学习笔记之三</title>
    <link href="http://rrkaige.com/2016/11/23/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/"/>
    <id>http://rrkaige.com/2016/11/23/JQuery学习笔记之三/</id>
    <published>2016-11-23T15:12:30.000Z</published>
    <updated>2016-11-24T12:14:31.585Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JQuery，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161123-myblog117.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Traversing"><a href="#Traversing" class="headerlink" title="Traversing"></a>Traversing</h3><p>jQuery traversing, which means “move through”, are used to “find” (or select) HTML elements based on their relation to other elements. Start with one selection and move through that selection until you reach the elements you desire.</p>
<ul>
<li>An ancestor is a parent, grandparent, great-grandparent, and so on.</li>
<li>A descendant is a child, grandchild, great-grandchild, and so on.</li>
<li>Siblings share the same parent.</li>
</ul>
<h3 id="Ancestors"><a href="#Ancestors" class="headerlink" title="Ancestors"></a>Ancestors</h3><p>Three useful jQuery methods for traversing up the DOM tree are:</p>
<ul>
<li>The <code>parent()</code> method returns the direct parent element of the selected element. This method only traverse a single level up the DOM tree.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parent().css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>parents()</code> method returns all ancestor elements of the selected element, all the way up to the document’s root element (<code>&lt;html&gt;</code>). You can also use an optional parameter to filter the search for ancestors.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parents(&quot;ul&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>parentsUntil()</code> method returns all ancestor elements between two given arguments.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parentsUntil(&quot;div&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Descendants"><a href="#Descendants" class="headerlink" title="Descendants"></a>Descendants</h3><p>Two useful jQuery methods for traversing down the DOM tree are:</p>
<ul>
<li>The <code>children()</code> method returns all direct children of the selected element. This method only traverse a single level down the DOM tree. You can also use an optional parameter to filter the search for children.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).children().css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).children(&quot;p.first&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>find()</code> method returns descendant elements of the selected element, all the way down to the last descendant.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).find(&quot;*&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Siblings"><a href="#Siblings" class="headerlink" title="Siblings"></a>Siblings</h3><ul>
<li>The <code>siblings()</code> method returns all sibling elements of the selected element. You can also use an optional parameter to filter the search for siblings.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;h2&quot;).siblings(&quot;p&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>next()</code> method returns the next sibling element of the selected element.</li>
<li>The <code>nextAll()</code> method returns all next sibling elements of the selected element.</li>
<li>The <code>nextUntil()</code> method returns all next sibling elements between two given arguments.</li>
<li>The <code>prev()</code>, <code>prevAll()</code> and <code>prevUntil()</code> methods work just like the methods above but with reverse functionality: they return previous sibling elements (traverse backwards along sibling elements in the DOM tree, instead of forward).</li>
</ul>
<h3 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h3><ul>
<li>The <code>first()</code> method returns the first element of the selected elements.</li>
<li>The <code>last()</code> method returns the last element of the selected elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div p&quot;).first().css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>eq()</code> method returns an element with a specific index number of the selected elements. The index numbers start at 0, so the first element will have the index number 0 and not 1.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;p&quot;).eq(1).css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>filter()</code> method lets you specify a criteria. Elements that do not match the criteria are removed from the selection, and those that match will be returned.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;p&quot;).filter(&quot;.intro&quot;).css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>not()</code> method returns all elements that do not match the criteria.</li>
</ul>
<p><strong>Tip:</strong> The <code>not()</code> method is the opposite of <code>filter()</code>.</p>
<h3 id="AJAX-load-Method"><a href="#AJAX-load-Method" class="headerlink" title="AJAX load() Method"></a>AJAX load() Method</h3><p>The <code>load()</code> method loads data from a server and puts the returned data into the selected element.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).load(URL,data,callback);</div></pre></td></tr></table></figure>
<ul>
<li>The required URL parameter specifies the URL you wish to load.</li>
<li>The optional data parameter specifies a set of querystring key/value pairs to send along with the request.</li>
<li>The optional callback parameter is the name of a function to be executed after the <code>load()</code> method is completed.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).load(&quot;demo_test.txt #p1&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The optional callback parameter specifies a callback function to run when the <code>load()</code> method is completed. The callback function can have different parameters:</p>
<ul>
<li>responseTxt - contains the resulting content if the call succeeds</li>
<li>statusTxt - contains the status of the call</li>
<li>xhr - contains the XMLHttpRequest object</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).load(&quot;demo_test.txt&quot;, function(responseTxt, statusTxt, xhr)&#123;</div><div class="line">            if(statusTxt == &quot;success&quot;)</div><div class="line">                alert(&quot;External content loaded successfully!&quot;);</div><div class="line">            if(statusTxt == &quot;error&quot;)</div><div class="line">                alert(&quot;Error: &quot; + xhr.status + &quot;: &quot; + xhr.statusText);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="AJAX-get-and-post-Methods"><a href="#AJAX-get-and-post-Methods" class="headerlink" title="AJAX get() and post() Methods"></a>AJAX get() and post() Methods</h3><p>The <code>$.get()</code> method requests data from the server with an HTTP GET request.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.get(URL,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $.get(&quot;demo_test.asp&quot;, function(data, status)&#123;</div><div class="line">            alert(&quot;Data: &quot; + data + &quot;\nStatus: &quot; + status);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter of <code>$.get()</code> is the URL we wish to request (“demo_test.asp”).</li>
<li>The second parameter is a callback function. The first callback parameter holds the content of the page requested, and the second callback parameter holds the status of the request.</li>
</ul>
<p><strong>Tip:</strong> Here is how the ASP file looks like (“demo_test.asp”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">response.write(&quot;This is some text from an external ASP file.&quot;)</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<p>The <code>$.post()</code> method requests data from the server using an HTTP POST request.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.post(URL,data,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $.post(&quot;demo_test_post.asp&quot;,</div><div class="line">        &#123;</div><div class="line">          name: &quot;Donald Duck&quot;,</div><div class="line">          city: &quot;Duckburg&quot;</div><div class="line">        &#125;,</div><div class="line">        function(data,status)&#123;</div><div class="line">            alert(&quot;Data: &quot; + data + &quot;\nStatus: &quot; + status);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter of <code>$.post()</code> is the URL we wish to request (“demo_test_post.asp”).</li>
<li>Then we pass in some data to send along with the request (name and city).</li>
<li>The ASP script in “demo_test_post.asp” reads the parameters, processes them, and returns a result.</li>
<li>The third parameter is a callback function. The first callback parameter holds the content of the page requested, and the second callback parameter holds the status of the request.</li>
</ul>
<p><strong>Tip:</strong> Here is how the ASP file looks like (“demo_test_post.asp”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">dim fname,city</div><div class="line">fname=Request.Form(&quot;name&quot;)</div><div class="line">city=Request.Form(&quot;city&quot;)</div><div class="line">Response.Write(&quot;Dear &quot; &amp; fname &amp; &quot;. &quot;)</div><div class="line">Response.Write(&quot;Hope you live well in &quot; &amp; city &amp; &quot;.&quot;)</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<h3 id="The-noConflict-Method"><a href="#The-noConflict-Method" class="headerlink" title="The noConflict() Method"></a>The noConflict() Method</h3><p>The <code>noConflict()</code> method releases the hold on the $ shortcut identifier, so that other scripts can use it.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.noConflict();</div><div class="line">jQuery(document).ready(function()&#123;</div><div class="line">    jQuery(&quot;button&quot;).click(function()&#123;</div><div class="line">        jQuery(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>You can also create your own shortcut very easily. The <code>noConflict()</code> method returns a reference to jQuery, that you can save in a variable, for later use.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var jq = $.noConflict();</div><div class="line">jq(document).ready(function()&#123;</div><div class="line">    jq(&quot;button&quot;).click(function()&#123;</div><div class="line">        jq(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>If you have a block of jQuery code which uses the $ shortcut and you do not want to change it all, you can pass the $ sign in as a parameter to the ready method. This allows you to access jQuery using $, inside this function - outside of it, you will have to use “jQuery”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.noConflict();</div><div class="line">jQuery(document).ready(function($)&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JQuery，教程来自&lt;a href=&quot;http://www.w3schools.com/jquery/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161123-myblog117.png&quot; alt=&quot;JQuery&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://rrkaige.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>域名</title>
    <link href="http://rrkaige.com/2016/11/22/%E5%9F%9F%E5%90%8D/"/>
    <id>http://rrkaige.com/2016/11/22/域名/</id>
    <published>2016-11-22T12:16:13.000Z</published>
    <updated>2016-11-22T14:01:05.095Z</updated>
    
    <content type="html"><![CDATA[<p>关于域名的一些事，整理下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161122-myblog116.gif" alt="Domain Name"></p>
<a id="more"></a>
<h3 id="域名注册"><a href="# 域名注册" class="headerlink" title="域名注册"></a>域名注册 </h3><p> 当初注册域名，本来想用 <code>kaneren.com</code> 或<code>rrk.com</code>，无奈均已被注册。所以退而求其次，在 GoDaddy 上注册了现在这个。</p>
<p>但总是不爽，本来看着快到期，想试试能否捡漏。但我还是太天真，原来还有续费保留赎回等说法。好吧，那就不等了，我再找找。</p>
<p>嘿，还真让我找着了。<code>kaneren.me</code>，<code>kaneren.xyz</code>，<code>kane.ren</code>，均未注册。</p>
<p>先科普下，域名包括顶级域名、二级域名，三级域名等。顶级域名又分为两类：</p>
<ul>
<li>国家和地区顶级域名（country code top-level domains，简称 ccTLDs），或者说国家顶级域名（national top-level domainnames，简称 nTLDs）；</li>
<li>通用顶级域名（generic top-level domains，简称 gTLDs），或者说国际顶级域名（international top-level domain names，简称 iTLDs）。</li>
</ul>
<p>现在，<code>.me</code>域名是前南斯拉夫地区西南部的国家黑山共和国（Montenegro，旧译“门的内哥罗”）的国家域名，<code>.xyz</code>和 <code>.ren</code> 域名是全球新通用顶级域名（后者竟然是人人网母公司千橡网景科技运营的）。</p>
<p>好吧，不管其他。考虑之后，决定在万网上注册 <code>kaneren.xyz</code> 和<code>kane.ren</code>，正搞促销，费用低廉，权且一试。申请付款，这两个后缀暂时不用实名认证，就此搞定。</p>
<p>从此，咱也是有三个域名的人了。手中有粮心中不慌，后面该折腾点事了。</p>
<h3 id="导航网页"><a href="# 导航网页" class="headerlink" title="导航网页"></a>导航网页 </h3><p> 于是，想着先更改个人导航网页的域名，就用<code>navi.kane.ren</code>，简单。操作如下：</p>
<ol>
<li>在万网中添加解析，给对应的二级域名添加 <code>CNAME</code> 解析到<code>kaneren.github.com</code>;</li>
<li>在 GoDaddy 中删除相应设置。</li>
<li>进入 <code>navi</code> 主页右面的 <code>Settings</code>，更改<code>Custom domain</code> 为<code>navi.kane.ren</code>；</li>
<li>更改 <code>navi</code> 项目的 <code>CNAME</code> 文件，将不带协议名的裸域名写进去(<code>navi.kane.ren</code>)。</li>
</ol>
<p>deploy 之后，等待 DNS 生效即可。</p>
<p>PS：一开始无法 deploy，和上次一样，更改 <code>.git/config</code> 文件中的 <code>rul</code> 即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于域名的一些事，整理下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161122-myblog116.gif&quot; alt=&quot;Domain Name&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="零壹之间" scheme="http://rrkaige.com/categories/%E9%9B%B6%E5%A3%B9%E4%B9%8B%E9%97%B4/"/>
    
    
      <category term="域名" scheme="http://rrkaige.com/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="导航网页" scheme="http://rrkaige.com/tags/%E5%AF%BC%E8%88%AA%E7%BD%91%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>JQuery 学习笔记之二</title>
    <link href="http://rrkaige.com/2016/11/21/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/"/>
    <id>http://rrkaige.com/2016/11/21/JQuery学习笔记之二/</id>
    <published>2016-11-21T00:43:53.000Z</published>
    <updated>2016-11-23T14:58:55.658Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JQuery，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-1.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Get-Content-and-Attributes"><a href="#Get-Content-and-Attributes" class="headerlink" title="Get Content and Attributes"></a>Get Content and Attributes</h3><p>Three simple, but useful, jQuery methods for DOM manipulation are:</p>
<ul>
<li><code>text()</code> - Sets or returns the text content of selected elements</li>
<li><code>html()</code> - Sets or returns the content of selected elements (including HTML markup)</li>
<li><code>val()</code> - Sets or returns the value of form fields</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        alert(&quot;Text: &quot; + $(&quot;#test&quot;).text());</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        alert(&quot;HTML: &quot; + $(&quot;#test&quot;).html());</div><div class="line">    &#125;);</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        alert(&quot;Value: &quot; + $(&quot;#test&quot;).val());</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>attr()</code> method is used to get attribute values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        alert($(&quot;#w3s&quot;).attr(&quot;href&quot;));</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Set-Content-and-Attributes"><a href="#Set-Content-and-Attributes" class="headerlink" title="Set Content and Attributes"></a>Set Content and Attributes</h3><p>We will use the same three methods from the previous page to set content:</p>
<ul>
<li><code>text()</code> - Sets or returns the text content of selected elements</li>
<li><code>html()</code> - Sets or returns the content of selected elements (including HTML markup)</li>
<li><code>val()</code> - Sets or returns the value of form fields</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test1&quot;).text(&quot;Hello world!&quot;);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test2&quot;).html(&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn3&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test3&quot;).val(&quot;Dolly Duck&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>All of the three jQuery methods above: <code>text()</code>, <code>html()</code>, and <code>val()</code>, also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) value. You then return the string you wish to use as the new value from the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test1&quot;).text(function(i, origText)&#123;</div><div class="line">            return &quot;Old text: &quot; + origText + &quot; New text: Hello world! (index: &quot; + i + &quot;)&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test2&quot;).html(function(i, origText)&#123;</div><div class="line">            return &quot;Old html: &quot; + origText + &quot; New html: Hello &lt;b&gt;world!&lt;/b&gt; (index: &quot; + i + &quot;)&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>attr()</code> method is also used to set/change attribute values. The <code>attr()</code> method also allows you to set multiple attributes at the same time.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#w3s&quot;).attr(&#123;</div><div class="line">            &quot;href&quot; : &quot;http://www.w3schools.com/jquery&quot;,</div><div class="line">            &quot;title&quot; : &quot;W3Schools jQuery Tutorial&quot;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery method <code>attr()</code>, also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) attribute value. You then return the string you wish to use as the new attribute value from the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#w3s&quot;).attr(&quot;href&quot;, function(i, origValue)&#123;</div><div class="line">            return origValue + &quot;/jquery&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Add-Elements"><a href="#Add-Elements" class="headerlink" title="Add Elements"></a>Add Elements</h3><ul>
<li>The jQuery <code>append()</code> method inserts content AT THE END of the selected HTML elements.</li>
<li>The jQuery <code>prepend()</code> method inserts content AT THE BEGINNING of the selected HTML elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).append(&quot; &lt;b&gt;Appended text&lt;/b&gt;.&quot;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;ol&quot;).append(&quot;&lt;li&gt;Appended item&lt;/li&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Both the <code>append()</code> and <code>prepend()</code> methods can take an infinite number of new elements as parameters. The new elements can be generated with text/HTML, with jQuery, or with JavaScript code and DOM elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function appendText() &#123;</div><div class="line">    var txt1 = &quot;&lt;p&gt;Text.&lt;/p&gt;&quot;;               // Create element with HTML  </div><div class="line">    var txt2 = $(&quot;&lt;p&gt;&lt;/p&gt;&quot;).text(&quot;Text.&quot;);   // Create with jQuery</div><div class="line">    var txt3 = document.createElement(&quot;p&quot;);  // Create with DOM</div><div class="line">    txt3.innerHTML = &quot;Text.&quot;;</div><div class="line">    $(&quot;body&quot;).append(txt1, txt2, txt3);      // Append the new elements </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The jQuery <code>after()</code> method inserts content AFTER the selected HTML elements.</li>
<li>The jQuery <code>before()</code> method inserts content BEFORE the selected HTML elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;img&quot;).before(&quot;&lt;b&gt;Before&lt;/b&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;img&quot;).after(&quot;&lt;i&gt;After&lt;/i&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function afterText() &#123;</div><div class="line">    var txt1 = &quot;&lt;b&gt;I &lt;/b&gt;&quot;;                   // Create element with HTML</div><div class="line">    var txt2 = $(&quot;&lt;i&gt;&lt;/i&gt;&quot;).text(&quot;love &quot;);    // Create with jQuery</div><div class="line">    var txt3 = document.createElement(&quot;b&quot;);   // Create with DOM</div><div class="line">    txt3.innerHTML = &quot;jQuery!&quot;;</div><div class="line">    $(&quot;img&quot;).after(txt1, txt2, txt3);      // Insert new elements after img</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Remove-Elements"><a href="#Remove-Elements" class="headerlink" title="Remove Elements"></a>Remove Elements</h3><ul>
<li>The jQuery <code>remove()</code> method removes the selected element(s) and its child elements.</li>
<li>The jQuery <code>empty()</code> method removes the child elements of the selected element(s).</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).remove();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>remove()</code> method also accepts one parameter, which allows you to filter the elements to be removed. The parameter can be any of the jQuery selector syntaxes.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).remove(&quot;.test, .demo&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Get-and-Set-CSS-Classes"><a href="#Get-and-Set-CSS-Classes" class="headerlink" title="Get and Set CSS Classes"></a>Get and Set CSS Classes</h3><ul>
<li><code>addClass()</code> - Adds one or more classes to the selected elements</li>
<li><code>removeClass()</code> - Removes one or more classes from the selected elements</li>
<li><code>toggleClass()</code> - Toggles between adding/removing classes from the selected elements</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.important &#123;</div><div class="line">    font-weight: bold;</div><div class="line">    font-size: xx-large;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.blue &#123;</div><div class="line">    color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).addClass(&quot;important blue&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>css()</code> - Sets or returns the style attribute</li>
</ul>
<p>To return the value of a specified CSS property, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&quot;propertyname&quot;);</div></pre></td></tr></table></figure>
<p>To set a specified CSS property, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&quot;propertyname&quot;,&quot;value&quot;);</div></pre></td></tr></table></figure>
<p>To set multiple CSS properties, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&#123;&quot;propertyname&quot;:&quot;value&quot;,&quot;propertyname&quot;:&quot;value&quot;,...&#125;);</div></pre></td></tr></table></figure>
<h3 id="Dimensions"><a href="#Dimensions" class="headerlink" title="Dimensions"></a>Dimensions</h3><p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-2.gif" alt="JQuery"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        var txt = &quot;&quot;;</div><div class="line">        txt += &quot;Width of div: &quot; + $(&quot;#div1&quot;).width() + &quot;&lt;/br&gt;&quot;;</div><div class="line">        txt += &quot;Height of div: &quot; + $(&quot;#div1&quot;).height();</div><div class="line">        $(&quot;#div1&quot;).html(txt);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).width(500).height(500);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JQuery，教程来自&lt;a href=&quot;http://www.w3schools.com/jquery/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-1.png&quot; alt=&quot;JQuery&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://rrkaige.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>JQuery 学习笔记之一</title>
    <link href="http://rrkaige.com/2016/11/20/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/"/>
    <id>http://rrkaige.com/2016/11/20/JQuery学习笔记之一/</id>
    <published>2016-11-20T13:03:02.000Z</published>
    <updated>2016-11-21T13:51:21.550Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JQuery，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161120-myblog114.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>jQuery is a lightweight, “write less, do more”, <strong>JavaScript library</strong>.</p>
<p>The purpose of jQuery is to make it much easier to use JavaScript on your website.</p>
<p>jQuery takes a lot of common tasks that require many lines of JavaScript code to accomplish, and wraps them into methods that you can call with a single line of code.</p>
<p>jQuery also simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation.</p>
<p>The jQuery library contains the following features:</p>
<ul>
<li>HTML/DOM manipulation</li>
<li>CSS manipulation</li>
<li>HTML event methods</li>
<li>Effects and animations</li>
<li>AJAX</li>
<li>Utilities</li>
</ul>
<p><strong>Note:</strong> The jQuery team knows all about cross-browser issues, and they have written this knowledge into the jQuery library. jQuery will run exactly the same in all major browsers, including Internet Explorer 6!</p>
<h3 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h3><p>Downloading jQuery</p>
<p>There are two versions of jQuery available for downloading:</p>
<ul>
<li>Production version - this is for your live website because it has been minified and compressed</li>
<li>Development version - this is for testing and development (uncompressed and readable code)</li>
</ul>
<p>Both versions can be downloaded from jQuery.com.</p>
<p>The jQuery library is a single JavaScript file, and you reference it with the HTML <code>&lt;script&gt;</code> tag (notice that the <code>&lt;script&gt;</code> tag should be inside the <code>&lt;head&gt;</code> section):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> Place the downloaded file in the same directory as the pages where you wish to use it.</p>
<p>Do you wonder why we do not have type=”text/javascript” inside the <code>&lt;script&gt;</code> tag?</p>
<p>This is not required in HTML5. JavaScript is the default scripting language in HTML5 and in all modern browsers!</p>
<p>jQuery CDN</p>
<p>If you don’t want to download and host jQuery yourself, you can include it from a CDN (Content Delivery Network).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>The jQuery syntax is tailor-made for <strong>selecting</strong> HTML elements and performing some <strong>action</strong> on the element(s).</p>
<p>Basic syntax is: <code>$(selector).action()</code></p>
<ul>
<li>A $ sign to define/access jQuery</li>
<li>A (selector) to “query (or find)” HTML elements</li>
<li>A jQuery <code>action()</code> to be performed on the element(s)</li>
</ul>
<p>All jQuery methods in our examples, are inside a document ready event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">   // jQuery methods go here...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>This is to prevent any jQuery code from running before the document is finished loading (is ready).</p>
<p><strong>Tip:</strong> The jQuery team has also created an even shorter method for the document ready event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(function()&#123;</div><div class="line">   // jQuery methods go here...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Selectors"><a href="#Selectors" class="headerlink" title="Selectors"></a>Selectors</h3><p>jQuery selectors allow you to select and manipulate HTML element(s).</p>
<p>jQuery selectors are used to “find” (or select) HTML elements based on their name, id, classes, types, attributes, values of attributes and much more. It’s based on the existing CSS Selectors, and in addition, it has some own custom selectors.</p>
<p>All selectors in jQuery start with the dollar sign and parentheses: <code>$()</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;)</div><div class="line">$(&quot;#test&quot;)</div><div class="line">$(&quot;.test&quot;)</div></pre></td></tr></table></figure>
<h3 id="Event-Methods"><a href="#Event-Methods" class="headerlink" title="Event Methods"></a>Event Methods</h3><p>All the different visitor’s actions that a web page can respond to are called events.</p>
<p>The term “<strong>fires/fired</strong>“ is often used with events. Example: “The keypress event is fired, the moment you press a key”.</p>
<p>Here are some common DOM events:</p>
<table>
<thead>
<tr>
<th>Mouse Events</th>
<th>Keyboard Events</th>
<th>Form Events</th>
<th>Document/Window Events</th>
</tr>
</thead>
<tbody>
<tr>
<td>click</td>
<td>keypress</td>
<td>submit</td>
<td>load</td>
</tr>
<tr>
<td>dblclick</td>
<td>keydown</td>
<td>change</td>
<td>resize</td>
</tr>
<tr>
<td>mouseenter</td>
<td>keyup</td>
<td>focus</td>
<td>scroll</td>
</tr>
<tr>
<td>mouseleave</td>
<td></td>
<td>blur</td>
<td>unload</td>
</tr>
</tbody>
</table>
<p>In jQuery, most DOM events have an equivalent jQuery method.</p>
<p>To assign a click event to all paragraphs on a page, you can do this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;).click();</div></pre></td></tr></table></figure>
<p>The next step is to define what should happen when the event fires. You must pass a function to the event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;).click(function()&#123;</div><div class="line">  // action goes here!!</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Hide-and-Show"><a href="#Hide-and-Show" class="headerlink" title="Hide and Show"></a>Hide and Show</h3><p>With jQuery, you can hide and show HTML elements with the <code>hide()</code> and <code>show()</code> methods:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).hide(speed,callback);</div><div class="line">$(selector).show(speed,callback);</div></pre></td></tr></table></figure>
<ul>
<li>The optional speed parameter specifies the speed of the hiding/showing, and can take the following values: “slow”, “fast”, or milliseconds.</li>
<li>The optional callback parameter is a function to be executed after the hide() or show() method completes.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).hide(1000);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>With jQuery, you can toggle between the <code>hide()</code> and <code>show()</code> methods with the <code>toggle()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).toggle(speed,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).toggle();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Fading"><a href="#Fading" class="headerlink" title="Fading"></a>Fading</h3><p>With jQuery you can fade an element in and out of visibility.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeIn(speed,callback);</div><div class="line">$(selector).fadeOut(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>fadeToggle()</code> method toggles between the <code>fadeIn()</code> and <code>fadeOut()</code> methods.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeToggle(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>fadeTo()</code> method allows fading to a given opacity (value between 0 and 1).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeTo(speed,opacity,callback);</div></pre></td></tr></table></figure>
<h3 id="Sliding"><a href="#Sliding" class="headerlink" title="Sliding"></a>Sliding</h3><p>With jQuery you can create a sliding effect on elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).slideDown(speed,callback);</div><div class="line">$(selector).slideUp(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>slideToggle()</code> method toggles between the <code>slideDown()</code> and <code>slideUp()</code> methods.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).slideToggle(speed,callback);</div></pre></td></tr></table></figure>
<h3 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h3><p>The jQuery <code>animate()</code> method is used to create custom animations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).animate(&#123;params&#125;,speed,callback);</div></pre></td></tr></table></figure>
<p>The required params parameter defines the CSS properties to be animated.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            left: &apos;250px&apos;,</div><div class="line">            opacity: &apos;0.5&apos;,</div><div class="line">            height: &apos;150px&apos;,</div><div class="line">            width: &apos;150px&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> By default, all HTML elements have a static position, and cannot be moved. To manipulate the position, remember to first set the CSS position property of the element to relative, fixed, or absolute!</p>
<p>It is also possible to define <strong>relative values</strong> (the value is then relative to the element’s current value). This is done by putting += or -= in front of the value:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            left: &apos;250px&apos;,</div><div class="line">            height: &apos;+=150px&apos;,</div><div class="line">            width: &apos;+=150px&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>You can even specify a property’s animation value as “show”, “hide”, or “toggle”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            height: &apos;toggle&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>By default, jQuery comes with <strong>queue functionality</strong> for animations.</p>
<p>This means that if you write multiple <code>animate()</code> calls after each other, jQuery creates an “internal” queue with these method calls. Then it runs the animate calls ONE by ONE.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        var div = $(&quot;div&quot;);</div><div class="line">        div.animate(&#123;left: &apos;100px&apos;&#125;, &quot;slow&quot;);</div><div class="line">        div.animate(&#123;fontSize: &apos;3em&apos;&#125;, &quot;slow&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Stop-Animations"><a href="#Stop-Animations" class="headerlink" title="Stop Animations"></a>Stop Animations</h3><p>The jQuery <code>stop()</code> method is used to stop an animation or effect before it is finished.</p>
<p>The <code>stop()</code> method works for <strong>all jQuery effect functions</strong>, including sliding, fading and custom animations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).stop(stopAll,goToEnd);</div></pre></td></tr></table></figure>
<ul>
<li>The optional stopAll parameter specifies whether also the animation queue should be cleared or not. Default is false, which means that only the active animation will be stopped, allowing any queued animations to be performed afterwards.</li>
<li>The optional goToEnd parameter specifies whether or not to complete the current animation immediately. Default is false.</li>
</ul>
<p>So, by default, the <code>stop()</code> method kills the current animation being performed on the selected element.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#flip&quot;).click(function()&#123;</div><div class="line">        $(&quot;#panel&quot;).slideDown(5000);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#stop&quot;).click(function()&#123;</div><div class="line">        $(&quot;#panel&quot;).stop();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Callback-Functions"><a href="#Callback-Functions" class="headerlink" title="Callback Functions"></a>Callback Functions</h3><p>JavaScript statements are executed line by line. However, with effects, the next line of code can be run even though the effect is not finished. This can create errors.</p>
<p>To prevent this, you can create a callback function.</p>
<p>A callback function is executed after the current effect is 100% finished.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).hide(&quot;slow&quot;, function()&#123;</div><div class="line">            alert(&quot;The paragraph is now hidden&quot;);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Chaining"><a href="#Chaining" class="headerlink" title="Chaining"></a>Chaining</h3><p>Chaining allows us to run multiple jQuery methods (on the same element) within a single statement.</p>
<p><strong>Tip:</strong> This way, browsers do not have to find the same element(s) more than once.</p>
<p>To chain an action, you simply append the action to the previous action.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#p1&quot;).css(&quot;color&quot;, &quot;red&quot;)</div><div class="line">            .slideUp(2000)</div><div class="line">            .slideDown(2000);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> When chaining, the line of code could become quite long. However, jQuery is not very strict on the syntax; you can format it like you want, including line breaks and indentations.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JQuery，教程来自&lt;a href=&quot;http://www.w3schools.com/jquery/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161120-myblog114.png&quot; alt=&quot;JQuery&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://rrkaige.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>个人 Logo 设计</title>
    <link href="http://rrkaige.com/2016/11/19/%E4%B8%AA%E4%BA%BALogo%E8%AE%BE%E8%AE%A1/"/>
    <id>http://rrkaige.com/2016/11/19/个人Logo设计/</id>
    <published>2016-11-19T14:04:59.000Z</published>
    <updated>2016-11-19T15:12:22.993Z</updated>
    
    <content type="html"><![CDATA[<p>做一个自己独有的 Logo，想想就觉得兴奋。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-1.png" alt="RK Logo"></p>
<a id="more"></a>
<p>看到别人独具一格的个人 Logo，萌生自己设计的想法，说做就做。</p>
<p>先了解下位图和矢量图的 <a href="http://www.coreldrawchina.com/xinshourumen/weitu-shiliangtu.html" target="_blank" rel="external"> 区别</a>。</p>
<p>没有 Photoshop，那就用<a href="https://www.gimp.org/" target="_blank" rel="external">GIMP</a>。和 Photoshop 类似的操作，上手很快。</p>
<p>主要在于设计构思，利用“R”和“K”的变形，组成图案。第一版如下，略显方正。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-2.png" alt="RK Logo"></p>
<p>第二版更加抽象化，圆润些许，如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-3.png" alt="RK Logo"></p>
<p>就此，暂时用着，后续有好的想法再行制作。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做一个自己独有的Logo，想想就觉得兴奋。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-1.png&quot; alt=&quot;RK Logo&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="零壹之间" scheme="http://rrkaige.com/categories/%E9%9B%B6%E5%A3%B9%E4%B9%8B%E9%97%B4/"/>
    
    
      <category term="Logo" scheme="http://rrkaige.com/tags/Logo/"/>
    
      <category term="GIMP" scheme="http://rrkaige.com/tags/GIMP/"/>
    
  </entry>
  
  <entry>
    <title>JSON 学习笔记</title>
    <link href="http://rrkaige.com/2016/11/18/JSON%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://rrkaige.com/2016/11/18/JSON学习笔记/</id>
    <published>2016-11-18T01:24:37.000Z</published>
    <updated>2016-11-18T13:46:09.798Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JSON，教程来自 <a href="http://www.w3schools.com/js/js_json_intro.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161118-myblog112.png" alt="JSON"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><ul>
<li>JSON stands for JavaScript Object Notation</li>
<li>JSON is a lightweight data-interchange format</li>
<li>JSON is language independent *</li>
<li>JSON is “self-describing” and easy to understand</li>
</ul>
<p><strong>Note:</strong> * JSON uses JavaScript syntax, but the JSON format is text only, just like XML. Text can be read and used as a data format by any programming language.</p>
<p>Much Like XML Because</p>
<ul>
<li>Both JSON and XML are “self describing” (human readable)</li>
<li>Both JSON and XML are hierarchical (values within values)</li>
<li>Both JSON and XML can be parsed and used by lots of programming languages</li>
<li>Both JSON and XML can be fetched with an XMLHttpRequest</li>
</ul>
<p>Much Unlike XML Because</p>
<ul>
<li>JSON doesn’t use end tag</li>
<li>JSON is shorter</li>
<li>JSON is quicker to read and write</li>
<li>JSON can use arrays</li>
</ul>
<p>The biggest difference is: XML has to be parsed with an XML parser. JSON can be parsed by a standard JavaScript function.</p>
<p>For AJAX applications, JSON is faster and easier than XML:</p>
<p>Using XML</p>
<ul>
<li>Fetch an XML document</li>
<li>Use the XML DOM to loop through the document</li>
<li>Extract values and store in variables</li>
</ul>
<p>Using JSON</p>
<ul>
<li>Fetch a JSON string</li>
<li><code>JSON.Parse</code> the JSON string</li>
</ul>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>JSON syntax is derived from JavaScript object notation syntax:</p>
<ul>
<li>Data is in name/value pairs</li>
<li>Data is separated by commas</li>
<li>Curly braces hold objects</li>
<li>Square brackets hold arrays</li>
</ul>
<p>JSON data is written as name/value pairs. A name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value.</p>
<p><strong>Note:</strong> JSON names require double quotes. JavaScript names don’t.</p>
<p>JSON values can be:</p>
<ul>
<li>A number (integer or floating point)</li>
<li>A string (in double quotes)</li>
<li>A Boolean (true or false)</li>
<li>An array (in square brackets)</li>
<li>An object (in curly braces)</li>
<li>null</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;employees&quot;:[</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;:&quot;Jones&quot;&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>Because JSON syntax is derived from JavaScript object notation, very little extra software is needed to work with JSON within JavaScript.</p>
<p>With JavaScript you can create an array of objects and assign data to it, like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var employees = [</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;,</div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;,</div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;: &quot;Jones&quot;&#125;</div><div class="line">];</div></pre></td></tr></table></figure>
<p>The first entry in the JavaScript object array can be accessed like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// returns John Doe</div><div class="line">employees[0].firstName + &quot; &quot; + employees[0].lastName;</div><div class="line"></div><div class="line">employees[0][&quot;firstName&quot;] + &quot; &quot; + employees[0][&quot;lastName&quot;];</div></pre></td></tr></table></figure>
<ul>
<li>The file type for JSON files is “<code>.json</code>“</li>
<li>The MIME type for JSON text is “application/json”</li>
</ul>
<h3 id="How-To"><a href="#How-To" class="headerlink" title="How To"></a>How To</h3><p>A common use of JSON is to read data from a web server, and display the data in a web page.</p>
<p>The JavaScript function <code>JSON.parse(text)</code> can be used to convert a JSON text into a JavaScript object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var text = &apos;&#123;&quot;employees&quot;:[&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Doe&quot; &#125;,&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;Anna&quot;,&quot;lastName&quot;:&quot;Smith&quot; &#125;,&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;:&quot;Jones&quot; &#125;]&#125;&apos;;</div><div class="line"></div><div class="line">obj = JSON.parse(text);</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">obj.employees[1].firstName + &quot; &quot; + obj.employees[1].lastName;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Older browsers without the support for the JavaScript function <code>JSON.parse()</code> can use the <code>eval()</code> function to convert a JSON text into a JavaScript object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var obj = eval (&quot;(&quot; + text + &quot;)&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The <code>eval()</code> function can compile and execute any JavaScript. This represents a potential security problem. <strong>Try to avoid it</strong>.</p>
<p>It is safer to use a JSON parser to convert a JSON text to a JavaScript object.</p>
<ul>
<li>A JSON parser will recognize only JSON text and will not compile scripts.</li>
<li>In browsers that provide native JSON support, JSON parsers are also faster.</li>
</ul>
<h3 id="Http-Request"><a href="#Http-Request" class="headerlink" title="Http Request"></a>Http Request</h3><ol>
<li>Create an <strong>array of objects</strong>. Use an <strong>array literal</strong> to declare an array of objects. Give each object two properties: <strong>display</strong> and <strong>url</strong>.</li>
<li>Create a <strong>JavaScript function</strong> to display the array. Create a function <code>myFunction()</code> that loops the array objects, and display the content as HTML links.</li>
<li>Create a <strong>text file</strong>. Put the array literal in a file named <code>myTutorials.txt</code>.</li>
<li>Read the text file with an <strong>XMLHttpRequest</strong>. Write an XMLHttpRequest to read the text file, and use <code>myFunction()</code> to display the array.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;id01&quot;&gt;&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var xmlhttp = new XMLHttpRequest();</div><div class="line">var url = &quot;myTutorials.txt&quot;;</div><div class="line"></div><div class="line">xmlhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">        var myArr = JSON.parse(this.responseText);</div><div class="line">        myFunction(myArr);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">xmlhttp.open(&quot;GET&quot;, url, true);</div><div class="line">xmlhttp.send();</div><div class="line"></div><div class="line">function myFunction(arr) &#123;</div><div class="line">    var out = &quot;&quot;;</div><div class="line">    var i;</div><div class="line">    for(i = 0; i &lt; arr.length; i++) &#123;</div><div class="line">        out += &apos;&lt;a href=&quot;&apos; + arr[i].url + &apos;&quot;&gt;&apos; +</div><div class="line">        arr[i].display + &apos;&lt;/a&gt;&lt;br&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;id01&quot;).innerHTML = out;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>myTutorials.txt</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;JavaScript Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/js/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;HTML Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/html/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;CSS Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/css/default.asp&quot;</div><div class="line">&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="Function-Files"><a href="#Function-Files" class="headerlink" title="Function Files"></a>Function Files</h3><ol>
<li>Create an <strong>array of objects</strong>. Use an <strong>array literal</strong> to declare an array of objects. Give each object two properties: <strong>display</strong> and <strong>url</strong>.</li>
<li>Create a <strong>JavaScript function</strong> to display the array. Create a function <code>myFunction()</code> that loops the array objects, and display the content as HTML links.</li>
<li>Use an <strong>array literal</strong> as the argument (instead of the array variable).</li>
<li>Put the function in an external <strong>js file</strong>.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;id01&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function myFunction(arr) &#123;</div><div class="line">    var out = &quot;&quot;;</div><div class="line">    var i;</div><div class="line">    for(i = 0; i&lt;arr.length; i++) &#123;</div><div class="line">        out += &apos;&lt;a href=&quot;&apos; + arr[i].url + &apos;&quot;&gt;&apos; +</div><div class="line">        arr[i].display + &apos;&lt;/a&gt;&lt;br&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;id01&quot;).innerHTML = out;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;script src=&quot;myTutorials.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>myTutorials.js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">myFunction([</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;JavaScript Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/js/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;HTML Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/html/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;CSS Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/css/default.asp&quot;</div><div class="line">&#125;</div><div class="line">]);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JSON，教程来自&lt;a href=&quot;http://www.w3schools.com/js/js_json_intro.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161118-myblog112.png&quot; alt=&quot;JSON&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JSON" scheme="http://rrkaige.com/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>AJAX 学习笔记</title>
    <link href="http://rrkaige.com/2016/11/17/AJAX%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://rrkaige.com/2016/11/17/AJAX学习笔记/</id>
    <published>2016-11-17T01:45:01.000Z</published>
    <updated>2016-11-24T12:44:20.211Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JavaScript AJAX，教程来自 <a href="http://www.w3schools.com/js/js_ajax_intro.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-1.jpg" alt="AJAX"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>AJAX = <strong>Asynchronous JavaScript And XML</strong>.</p>
<p>AJAX is not a programming language. AJAX just uses a combination of:</p>
<ul>
<li>A browser built-in XMLHttpRequest object (to request data from a web server)</li>
<li>JavaScript and HTML DOM (to display or use the data)</li>
</ul>
<p><strong>Note:</strong> AJAX is a misleading name. AJAX applications might use <strong>XML</strong> to transport data, but it is equally common to transport data as <strong>plain text</strong> or <strong>JSON text</strong>.</p>
<p>AJAX allows web pages to be updated asynchronously by exchanging data with a web server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;demo&quot;&gt;</div><div class="line">&lt;h1&gt;The XMLHttpRequest Object&lt;/h1&gt;</div><div class="line">&lt;button type=&quot;button&quot; onclick=&quot;loadDoc()&quot;&gt;Change Content&lt;/button&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function loadDoc() &#123;</div><div class="line">  var xhttp = new XMLHttpRequest();</div><div class="line">  xhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">      document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">      this.responseText;</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line">  xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, true);</div><div class="line">  xhttp.send();</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-2.gif" alt="How AJAX Works"></p>
<ol>
<li>An event occurs in a web page (the page is loaded, a button is clicked)</li>
<li>An XMLHttpRequest object is created by JavaScript</li>
<li>The XMLHttpRequest object sends a request to a web server</li>
<li>The server processes the request</li>
<li>The server sends a response back to the web page</li>
<li>The response is read by JavaScript</li>
<li>Proper action (like page update) is performed by JavaScript</li>
</ol>
<h3 id="The-XMLHttpRequest-Object"><a href="#The-XMLHttpRequest-Object" class="headerlink" title="The XMLHttpRequest Object"></a>The XMLHttpRequest Object</h3><p>All modern browsers (Chrome, IE7+, Firefox, Safari, and Opera) have a built-in <strong>XMLHttpRequest</strong> object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable = new XMLHttpRequest();</div></pre></td></tr></table></figure>
<p>Old versions of Internet Explorer (IE5 and IE6) use an ActiveX Object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var xhttp;</div><div class="line">if (window.XMLHttpRequest) &#123;</div><div class="line">    // code for modern browsers</div><div class="line">    xhttp = new XMLHttpRequest();</div><div class="line">    &#125; else &#123;</div><div class="line">    // code for IE6, IE5</div><div class="line">    xhttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>For security reasons, modern browsers do not allow access across domains. This means that both the web page and the XML file it tries to load, must be located <strong>on the same server</strong>.</p>
<h3 id="Send-a-Request-To-a-Server"><a href="#Send-a-Request-To-a-Server" class="headerlink" title="Send a Request To a Server"></a>Send a Request To a Server</h3><p>To send a request to a server, we use the open() and send() methods of the XMLHttpRequest object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>open(method,url,async,user,psw)</td>
<td>Specifies the type of request</td>
</tr>
<tr>
<td>send()</td>
<td>Sends the request to the server (used for GET)</td>
</tr>
<tr>
<td>send(string)</td>
<td>Sends the request to the server (used for POST)</td>
</tr>
</tbody>
</table>
<ul>
<li>method: the type of request: GET or POST</li>
<li>url: the server (file) location</li>
</ul>
<p>The file can be any kind of file, like <code>.txt</code> and <code>.xml</code>, or server scripting files like <code>.asp</code> and <code>.php</code> (which can perform actions on the server before sending the response back).</p>
<ul>
<li>async: true (asynchronous) or false (synchronous)</li>
<li>user: optional user name</li>
<li>psw: optional password</li>
</ul>
<p><strong>GET</strong> is simpler and faster than <strong>POST</strong>, and can be used in most cases. However, always use POST requests when:</p>
<ul>
<li>A cached file is not an option (update a file or database on the server).</li>
<li>Sending a large amount of data to the server (POST has no size limitations).</li>
<li>Sending user input (which can contain unknown characters), POST is more robust and secure than GET.</li>
</ul>
<p>A simple GET request:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get.asp&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>In the example above, you may get a cached result. To avoid this, add a unique ID to the URL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get.asp?t=&quot; + Math.random(), true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>If you want to send information with the GET method, add the information to the URL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get2.asp?fname=Henry&amp;lname=Ford&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>A simple POST request:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;POST&quot;, &quot;demo_post.asp&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>To POST data like an HTML form, add an HTTP header with setRequestHeader(). Specify the data you want to send in the send() method:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;POST&quot;, &quot;ajax_test.asp&quot;, true);</div><div class="line">xhttp.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</div><div class="line">xhttp.send(&quot;fname=Henry&amp;lname=Ford&quot;);</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>setRequestHeader(header, value)</td>
<td>Adds HTTP headers to the request</td>
</tr>
</tbody>
</table>
<ul>
<li>header: specifies the header name</li>
<li>value: specifies the header value</li>
</ul>
<p>Using async=false is not recommended, but for a few small requests this can be ok. Remember that the JavaScript will NOT continue to execute, until the server response is ready. If the server is busy or slow, the application will hang or stop.</p>
<p><strong>Note:</strong> When you use async=false, do NOT write an onreadystatechange function - just put the code after the send() statement:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, false);</div><div class="line">xhttp.send();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = xhttp.responseText;</div></pre></td></tr></table></figure>
<h3 id="Server-Response"><a href="#Server-Response" class="headerlink" title="Server Response"></a>Server Response</h3><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>onreadystatechange</td>
<td>Defines a function to be called when the readyState property changes</td>
</tr>
<tr>
<td>readyState</td>
<td>Holds the status of the XMLHttpRequest. (0: request not initialized; 1: server connection established; 2: request received; 3: processing request; 4: request finished and response is ready)</td>
</tr>
<tr>
<td>status</td>
<td>200: “OK”; 403: “Forbidden”; 404: “Page not found”</td>
</tr>
<tr>
<td>statusText</td>
<td>Returns the status-text (e.g. “OK” or “Not Found”)</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong> The onreadystatechange event is triggered five times (0-4), one time for each change in readyState.</p>
<p>A <strong>callback function</strong> is a function passed as a parameter to another function.</p>
<p>If you have more than one AJAX task a website, you should create one function for executing the XMLHttpRequest object, and one callback function for each AJAX task.</p>
<p>The function call should contain the URL and what function to call when the response is ready.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">loadDoc(&quot;url-1&quot;, myFunction1);</div><div class="line"></div><div class="line">loadDoc(&quot;url-2&quot;, myFunction2);</div><div class="line"></div><div class="line">function loadDoc(url, cFunction) &#123;</div><div class="line">  var xhttp;</div><div class="line">  xhttp=new XMLHttpRequest();</div><div class="line">  xhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">      cFunction(this);</div><div class="line">    &#125;</div><div class="line"> 	&#125;;</div><div class="line">  xhttp.open(&quot;GET&quot;, url, true);</div><div class="line">  xhttp.send();</div><div class="line">&#125;</div><div class="line"></div><div class="line">function myFunction1(xhttp) &#123;</div><div class="line">  // action goes here</div><div class="line">&#125; </div><div class="line">function myFunction2(xhttp) &#123;</div><div class="line">  // action goes here</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>responseText</td>
<td>get the response data as a string</td>
</tr>
<tr>
<td>responseXML</td>
<td>get the response data as XML data</td>
</tr>
<tr>
<td>getResponseHeader()</td>
<td>Returns specific header information from the server resource</td>
</tr>
<tr>
<td>getAllResponseHeaders()</td>
<td>Returns all the header information from the server resource</td>
</tr>
</tbody>
</table>
<p>The <strong>responseText</strong> property returns the server response as a JavaScript string, and you can use it accordingly:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = xhttp.responseText;</div></pre></td></tr></table></figure>
<p>The <strong>responseXML</strong> property returns the server response as an XML DOM object. Using this property you can parse the response as an XML DOM object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">xmlDoc = xhttp.responseXML;</div><div class="line">txt = &quot;&quot;;</div><div class="line">x = xmlDoc.getElementsByTagName(&quot;ARTIST&quot;);</div><div class="line">for (i = 0; i &lt; x.length; i++) &#123;</div><div class="line">  txt += x[i].childNodes[0].nodeValue + &quot;&lt;br&gt;&quot;;</div><div class="line">  &#125;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = txt;</div><div class="line">xhttp.open(&quot;GET&quot;, &quot;cd_catalog.xml&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = this.getAllResponseHeaders();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = this.getResponseHeader(&quot;Last-Modified&quot;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JavaScript AJAX，教程来自&lt;a href=&quot;http://www.w3schools.com/js/js_ajax_intro.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-1.jpg&quot; alt=&quot;AJAX&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="http://rrkaige.com/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>后街歌声</title>
    <link href="http://rrkaige.com/2016/11/16/%E5%90%8E%E8%A1%97%E6%AD%8C%E5%A3%B0/"/>
    <id>http://rrkaige.com/2016/11/16/后街歌声/</id>
    <published>2016-11-16T02:06:16.000Z</published>
    <updated>2016-11-16T12:07:08.652Z</updated>
    
    <content type="html"><![CDATA[<p> 后街，从来不缺少歌声。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161116-myblog110.jpg" alt="Street Singer"></p>
<a id="more"></a>
<p> 大早到实验室，窗外歌声正炽。咦，新来的？我和同学打着招呼，侧耳倾听。一首《迟来的爱》，吐字很有特点，每句结尾带着奇异的音调，微微上旋。后续的《小薇》《好人一生平安》《离家的孩子》，一首接一首，热闹了整个上午。总之，还不错，真心实意，没有放着原唱哼哈几句。</p>
<p> 窗外，越过围墙，能看到附近唯一的菜场，人流汹涌，理所当然成为卖唱者的福地。每隔三两天，必有歌声飞扬，从早到午，一刻不歇。附近买菜的大爷大妈叔叔阿姨，向来不吝几个零钞钢镚。于是，皆大欢喜，愈发兴盛热闹。</p>
<p> 时间长了，大致能分辨出常来的几人，约好似的，拖着话筒音箱，带着必备神曲，诸如《永远是朋友》《北国之春》《九月九的酒》《两只蝴蝶》《牡丹之歌》《说句心里话》《常回家看看》《红尘情歌》《在心里从此永远有个你》之类。就在路边找个空缺，放好装备，开口自嗨，间或“谢谢”，时光就此凝固。</p>
<p> 还记得，睡在实验室被吵醒的满腔抱怨，打水时跟着节奏摇头晃脑，听着含糊的发音猜测歌词，站在窗台边探头张望，树枝掩映间，仿若人流漩涡的中心。</p>
<p> 逐渐习惯，多年后，是否还会想起，每个推开窗飘着歌的早晨。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;后街，从来不缺少歌声。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161116-myblog110.jpg&quot; alt=&quot;Street Singer&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="后街" scheme="http://rrkaige.com/tags/%E5%90%8E%E8%A1%97/"/>
    
  </entry>
  
  <entry>
    <title>在家做小工</title>
    <link href="http://rrkaige.com/2016/11/15/%E5%9C%A8%E5%AE%B6%E5%81%9A%E5%B0%8F%E5%B7%A5/"/>
    <id>http://rrkaige.com/2016/11/15/在家做小工/</id>
    <published>2016-11-15T12:47:53.000Z</published>
    <updated>2016-11-15T13:39:45.089Z</updated>
    
    <content type="html"><![CDATA[<p> 回家几天，做小工，真心累。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161115-myblog109-1.jpg-b" alt="Change"></p>
<a id="more"></a>
<p> 后院一角，“历史遗留问题”。老爸一直想着翻新，这次抓了我当帮工。好吧，我也早看不顺眼，欣然应诺。</p>
<p> 于是，两个“外行”，凑一起讨论设计，着手施工。测量，挖土，夯实，开凿，铺设，砌墙，搅拌，浇筑，各种工具齐上阵，看着工程不大，做起来却不简单。毕竟不是照着图纸复制，而要因地制宜，随时修改，这就大大拖长了工期。所以，直到我返校，才完成一半。不过大体已成型，留待下次再战。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161115-myblog109-2.jpg-b" alt="Construction"></p>
<p> 要说做小工的体验，一个字，累！腰酸背疼，手掌都磨出水泡。体力劳动也要讲究技巧。挖土时铁锹如何切入，如何抛土；砌墙时泥刀如何削砖，如何敷砂浆。事事都有经验可循。如此，不枉忙碌一番。</p>
<p> 真想，亲手建一栋房子，在山脚湖畔，田园林边。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;回家几天，做小工，真心累。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161115-myblog109-1.jpg-b&quot; alt=&quot;Change&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="经历" scheme="http://rrkaige.com/tags/%E7%BB%8F%E5%8E%86/"/>
    
      <category term="小工" scheme="http://rrkaige.com/tags/%E5%B0%8F%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>超级月亮</title>
    <link href="http://rrkaige.com/2016/11/14/%E8%B6%85%E7%BA%A7%E6%9C%88%E4%BA%AE/"/>
    <id>http://rrkaige.com/2016/11/14/超级月亮/</id>
    <published>2016-11-14T15:09:13.000Z</published>
    <updated>2016-11-15T12:48:36.632Z</updated>
    
    <content type="html"><![CDATA[<p> 从被窝爬起来，上天台看月亮。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161114-myblog108.jpg-b" alt="Moon"></p>
<a id="more"></a>
<p> 已经躺进被窝的我，看到“超级月亮”的新闻。据科学家预测，14 日晚，全球将迎来近 70 年来最大的“超级月亮”，如果错过可能要等到 2034 年。</p>
<p> 天，我才知道！待在家中，毫无关注。怎么办？起床啊。</p>
<p> 披上衣服，爬上天台。夜已深，静静的街道唯有路灯亮着，远处的房子晕染成暗影。抬头看天空，月亮却在云后。风很大，云在飘，月亮时隐时现。我仰着头，右手手机，左手 OK，等待，等待月亮在云间露脸的刹那。</p>
<p> 脖子僵硬，手脚发凉，终于抓拍成功，确实很圆很亮。</p>
<p> 想起当年和舍友一起夜登紫金山看月全食，下来后我还作文一篇：</p>
<blockquote>
<p> 是夜，211 全体舍员齐登紫金山。月华如水，白霜满地。山风凛冽，寒气逼人。石阶参差，树影婆娑。众人蜿蜒而上，嘻笑阔谈。或纵声吼叫，作鬼哭狼嚎；或引吭高歌，声振山林，回音阵阵。及顶，天狗吞月，婵娟已缺，星斗满天，寒光闪烁。不多时，月牙隐隐，红晕茫茫，全食至也。凭栏四望，俯仰之间，顿觉人之渺渺，沧海一粟，命运无常，时光短暂。年少轻狂，不为之过，青春热血，不可或缺。值此花样年华，若无心血来潮不可思议之举，人生憾事也。故夜登山，观月食，虽天寒地冻，身困体乏，实兴致高昂，难能可贵。他日思及，哂然一笑，悠悠乎岂不乐哉？兴之所至，是为之记。辛卯年十一月既望。</p>
</blockquote>
<p> 那时候我们都还年轻，而今夜，也算是兴之所至吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从被窝爬起来，上天台看月亮。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161114-myblog108.jpg-b&quot; alt=&quot;Moon&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="月亮" scheme="http://rrkaige.com/tags/%E6%9C%88%E4%BA%AE/"/>
    
  </entry>
  
  <entry>
    <title>我的特工爷爷</title>
    <link href="http://rrkaige.com/2016/11/13/%E6%88%91%E7%9A%84%E7%89%B9%E5%B7%A5%E7%88%B7%E7%88%B7/"/>
    <id>http://rrkaige.com/2016/11/13/我的特工爷爷/</id>
    <published>2016-11-13T14:59:28.000Z</published>
    <updated>2016-11-13T15:54:46.967Z</updated>
    
    <content type="html"><![CDATA[<p> 那个扎俩小辫，带着花草帽的小女孩，如此可爱。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161113-myblog107.jpeg" alt="The Bodyguard"></p>
<a id="more"></a>
<p> 不服老的洪金宝亲自上阵，为保护邻家小女孩，勇斗黑帮。老套的故事情节，常见的打斗场面。唯有小女孩的角色，让人眼前一亮。</p>
<p> 那个翻进窗户的身影，一脸俏皮的表情，自来熟，叛逆又有点小脾气，粘人却无法讨厌，快言快语让人忍俊不禁，内心真诚会关心人。</p>
<p> 去钓鱼吧。背起渔具，舔着甜筒，学大人说话，跑前跑后叽叽喳喳，沉不住气等待，钓上鱼的喜悦，滑稽地摔倒，无处不爱。</p>
<p> 有这样一个女儿，真是件幸福的事。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;那个扎俩小辫，带着花草帽的小女孩，如此可爱。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161113-myblog107.jpeg&quot; alt=&quot;The Bodyguard&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="观影" scheme="http://rrkaige.com/tags/%E8%A7%82%E5%BD%B1/"/>
    
      <category term="小女孩" scheme="http://rrkaige.com/tags/%E5%B0%8F%E5%A5%B3%E5%AD%A9/"/>
    
  </entry>
  
  <entry>
    <title>挑剔老爸</title>
    <link href="http://rrkaige.com/2016/11/12/%E6%8C%91%E5%89%94%E8%80%81%E7%88%B8/"/>
    <id>http://rrkaige.com/2016/11/12/挑剔老爸/</id>
    <published>2016-11-12T15:50:55.000Z</published>
    <updated>2016-11-14T12:43:10.378Z</updated>
    
    <content type="html"><![CDATA[<p> 老爸很挑剔，对于衣服，他不看品牌不看价格，只要舒服。但这个舒服，却是最难把握。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161112-myblog106.jpg" alt="Dad"></p>
<a id="more"></a>
<p> 之前给老爸买的，唯有一双鞋子最称心。迪卡侬 99 元登山鞋，柔软结实耐用，一年四季可穿，下小雨也没事，随便穿不介意。老爸很满意，于是继续买来，算是必备良品。</p>
<p> 这次降温，又去迪卡侬买鞋，顺带两件抓绒衣。本以为老爸会嫌弃，结果穿上就说好，保暖吸汗速干透气，非常适合。结果穿上就不想换，居然直接睡觉，还说这样暖和舒服。我也是无言以对。</p>
<p> 说这么多，当然不是给迪卡侬打广告，只是确合老爸心意。老爸老了，愈来愈怕冷，穿得暖和，是最大的需求。</p>
<p> 重要的是，老爸喜欢。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;老爸很挑剔，对于衣服，他不看品牌不看价格，只要舒服。但这个舒服，却是最难把握。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161112-myblog106.jpg&quot; alt=&quot;Dad&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="家人" scheme="http://rrkaige.com/tags/%E5%AE%B6%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>超级工程</title>
    <link href="http://rrkaige.com/2016/11/11/%E8%B6%85%E7%BA%A7%E5%B7%A5%E7%A8%8B/"/>
    <id>http://rrkaige.com/2016/11/11/超级工程/</id>
    <published>2016-11-11T15:38:50.000Z</published>
    <updated>2016-11-12T15:44:04.390Z</updated>
    
    <content type="html"><![CDATA[<p> 超级工程，超级大，超级难，工期超级长，造价超级高。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161111-myblog105.jpg" alt="China's Mega Projects"></p>
<a id="more"></a>
<p> 第一季共 5 集，看了前 2 集，珠港澳大桥，上海中心大厦。前者连接珠海香港澳门，人工造岛，海底隧道，海面大桥，桥隧组合。后者上海最高，螺旋结构，内外两层，补全城市天际线。</p>
<p> 看完后，几点感想。</p>
<ul>
<li> 机会总给有准备的人。很多前期工作持续多年，海里建桥防氯盐研究拿出的样本竟然始于二十多年前。</li>
<li> 实际经验无比重要。建造珠港澳大桥的参与过杭州湾跨海大桥，操作塔吊的先后在金茂大厦、环球金融中心施工。</li>
<li> 细微处都是平凡人。人工岛钢圆筒边的电焊工，大厦顶部操作台上的钢筋工，无数小人物最简单的工作叠加，成就了超级工程。</li>
</ul>
<p> 一个工程持续十年，人一生又有几个十年。</p>
<p> 只希望超级工程，寿命超长。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;超级工程，超级大，超级难，工期超级长，造价超级高。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161111-myblog105.jpg&quot; alt=&quot;China&#39;s Mega Projects&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="纪录片" scheme="http://rrkaige.com/tags/%E7%BA%AA%E5%BD%95%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>金庸的小说</title>
    <link href="http://rrkaige.com/2016/11/10/%E9%87%91%E5%BA%B8%E7%9A%84%E5%B0%8F%E8%AF%B4/"/>
    <id>http://rrkaige.com/2016/11/10/金庸的小说/</id>
    <published>2016-11-10T11:43:40.000Z</published>
    <updated>2016-11-11T15:36:38.330Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p> 飞雪连天射白鹿，笑书神侠倚碧鸳。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161110-myblog104.jpg" alt="Jinyong"></p>
<a id="more"></a>
<p> 忘了何时何地何人，只记得当年在课堂上听老师念出这两句，无比佩服。金庸老爷子，神人也。这诗当然是事后编撰，但其足以青史留名。</p>
<p> 那时我早已读过不少金庸作品，接触的电视剧电影更是数不胜数。没记错的话，我看的第一本应是《笑傲江湖》，犹记得两个片段。</p>
<p> 放学路上，我拿着书，就像现在拿着手机。令狐冲背任盈盈，在水中看到她真面目时，惊为天人。</p>
<blockquote>
<p> 令狐冲已喝了好几口涧水，眼前金星乱舞，定了定神，只见清澈的涧水之中，映上来两个倒影，一个妙龄姑娘正抓着自己背心。</p>
<p> 再看水中倒影时，见到那姑娘的半边脸蛋，眼睛紧闭，睫毛甚长，虽然倒影瞧不清楚，但显然容貌秀丽绝伦，不过十七八岁年纪。</p>
</blockquote>
<p> 午睡时，看到桃谷六仙插科打诨，舌戏群雄，忍不住笑出声来。</p>
<blockquote>
<p>“这个……嗯，是了，定静师太说道：‘五派虽然并而为一，但泰山、衡山、华山、恒山、嵩山这东南西北中五岳，却是并不到一块的。左冷禅又不是玉皇大帝，难道他还能将五座大山搬在一起吗？请桃谷六仙中的五兄弟分驻五山，剩下一个做总掌门也就是了。’”</p>
<p>“不错！定逸师太便说：‘师姊此见甚是。原来桃谷六仙的父母当年甚有先见，知道日后左冷禅要合并五岳剑派，因此生下他六个兄弟来，既不是五个，又不是七个，佩服啊佩服！’”</p>
</blockquote>
<p> 奇怪的是，记忆中第一个发生在小学，第二个是初一。莫非是错觉？不明白，但这两个片段印象深刻，确凿无疑。后来，陆续看过《碧血剑》，《鹿鼎记》，《侠客行》，其他的或许读过，已不大确定。</p>
<p> 今天说起这个，是因为沙漠公众号中提及。沙漠是网络小说历史穿越类作者，追过几本书，多有关注。之后又正巧看到“六神磊磊读金庸”，天马行空又紧跟时事，很有趣的公众号，很有意思的人。他抓住一点，坚持不懈，成功转身。</p>
<blockquote>
<p> 我觉得一个写字的人，随时要做好被人忘记的准备，你会有干气象的时候，也会有苦低垂的时候，我们都应该是一只蚂蚱，但是必须是一个不停地学习，不停地充实自己的蚂蚱，我们要努力地蹦达着，然后静静地等待秋后的到来。</p>
</blockquote>
<p> 我需要积累的还很多很多。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;飞雪连天射白鹿，笑书神侠倚碧鸳。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161110-myblog104.jpg&quot; alt=&quot;Jinyong&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="书里时光" scheme="http://rrkaige.com/categories/%E4%B9%A6%E9%87%8C%E6%97%B6%E5%85%89/"/>
    
    
      <category term="读书" scheme="http://rrkaige.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="金庸" scheme="http://rrkaige.com/tags/%E9%87%91%E5%BA%B8/"/>
    
  </entry>
  
  <entry>
    <title>秋橘</title>
    <link href="http://rrkaige.com/2016/11/09/%E7%A7%8B%E6%A9%98/"/>
    <id>http://rrkaige.com/2016/11/09/秋橘/</id>
    <published>2016-11-09T14:45:32.000Z</published>
    <updated>2016-11-09T15:08:47.906Z</updated>
    
    <content type="html"><![CDATA[<p> 晚上吃完饭，去后街买点橘子。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161109-myblog103.jpg" alt="Orange"></p>
<a id="more"></a>
<p> 秋天，正是橘子上市的时节。后街对面的水果摊，2.8 元 / 斤，挑 10 个，7 块钱左右即可，微信支付，非常方便。相对来说，橘子真是够便宜。表皮金黄圆润，非常好剥，味道甜而不酸，饱满多汁，我一口气可以吃两个。拎回实验室，大家一起分享。</p>
<p> 突然想起来，“橘”和“桔”的区别在哪？以前似乎随便用，并无注意。寻思不得，Google 之。嘿，还真有不少门道和争论。</p>
<ul>
<li><a href="http://health.sohu.com/20151224/n432477039.shtml" target="_blank" rel="external"> 终于分得清橘、橙、柑、桔了！</a></li>
<li><a href="http://www.guokr.com/question/7111/" target="_blank" rel="external"> 桔 + 柑 + 橙 + 枳 + 有什么区别？</a></li>
<li><a href="https://www.zhihu.com/question/20686259" target="_blank" rel="external"> 桔子、橘子、芦柑三者之间的差别是什么？</a></li>
</ul>
<p> 看了半天，还是没搞明白。所以，我这吃的到底是“橘”、“桔”还是“柑”呢？反正肯定不是“橙”了。</p>
<p> 算了，还是吃个橘子压压惊吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;晚上吃完饭，去后街买点橘子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161109-myblog103.jpg&quot; alt=&quot;Orange&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="吃货" scheme="http://rrkaige.com/tags/%E5%90%83%E8%B4%A7/"/>
    
  </entry>
  
  <entry>
    <title>丢失的 Contributions</title>
    <link href="http://rrkaige.com/2016/11/08/%E4%B8%A2%E5%A4%B1%E7%9A%84Contributions/"/>
    <id>http://rrkaige.com/2016/11/08/丢失的Contributions/</id>
    <published>2016-11-08T15:28:48.000Z</published>
    <updated>2016-11-09T08:35:44.249Z</updated>
    
    <content type="html"><![CDATA[<p>换电脑后，继续更新个人博客，deploy 之后，发现 GitHub 上 Contribution 的小绿块没有出现，郁闷。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161108-myblog102.jpg" alt="GitHub Contribution Graph"></p>
<a id="more"></a>
<p>因为之前换电脑迁移博客正好碰上 NexT 主题有 bug，<a href="https://github.com/iissnan/hexo-theme-next/issues/1214" target="_blank" rel="external">这里</a>。而且，博客内容可以正常 deploy，只是没有计入 Contribution。所以多次尝试无效后，暂时没多想。</p>
<p>结果连续几天都这样，我坐不住了。再看时，发现上次 <code>Rename source/vendors to source/lib</code> 更改还有遗漏，对照作者的 <a href="https://github.com/iissnan/hexo-theme-next/commit/565c09f6a45c75ffb8f74c88270b72fbe6e1a6e0#diff-b9cfc7f2cdf78a7f4b91a753d10865a2R28" target="_blank" rel="external"> 文档</a>，检查一遍。</p>
<p>再次尝试，问题依旧。Google 后，发现不一定是 NexT 的问题。</p>
<ul>
<li><a href="https://segmentfault.com/a/1190000000520300" target="_blank" rel="external">什么样的 contributions 会被 Github 计算在内？</a></li>
<li><a href="https://segmentfault.com/a/1190000004318632" target="_blank" rel="external">为什么 Github 没有记录你的 Contributions？</a></li>
<li><a href="https://mrxin.github.io/2014/08/11/no-contributions/" target="_blank" rel="external">contributions 不显示在 github 上</a></li>
</ul>
<p>上述提到是 <code>.gitconfig</code> 文件的问题。但我看里面 <code>name</code> 和<code>email</code>是正确的。</p>
<p>有 <a href="http://blog.52fhy.com/2015/07/05/hexo/solve_hexo_-d_problem/" target="_blank" rel="external"> 文章 </a> 提到 <code>repo</code> 应该是 <code>git@github.com:xxx/xxx.github.io.git</code> 形式的，不是 <code>https://github.com/xxx/xxx.github.io.git</code> 形式的。虽然问题不一样，但可以试试。我尝试修改 <code>_config.yml</code> 文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:xxx/xxx.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>更改，deploy，出现一个提示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Warning: Permanently added the RSA host key for IP address &apos;#&#123;Some IP address&#125;&apos; to the list of known hosts.</div></pre></td></tr></table></figure>
<p><a href="https://github.com/blog/1606-ip-address-changes" target="_blank" rel="external">IP Address Changes</a>，表示正常。</p>
<p>好吧，小绿块又回来了，完美。</p>
<p>所以，稀里糊涂解决了问题。</p>
<p>PS：顺手解决一直出现的问题：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">warning: LF will be replaced by CRLF in...</div></pre></td></tr></table></figure>
<p>输入命令<code>git config --global core.autocrlf false</code>，即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;换电脑后，继续更新个人博客，deploy之后，发现GitHub上Contribution的小绿块没有出现，郁闷。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161108-myblog102.jpg&quot; alt=&quot;GitHub Contribution Graph&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="零壹之间" scheme="http://rrkaige.com/categories/%E9%9B%B6%E5%A3%B9%E4%B9%8B%E9%97%B4/"/>
    
    
      <category term="GitHub" scheme="http://rrkaige.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://rrkaige.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://rrkaige.com/tags/NexT/"/>
    
      <category term="Contribution" scheme="http://rrkaige.com/tags/Contribution/"/>
    
  </entry>
  
  <entry>
    <title>尘埃落定</title>
    <link href="http://rrkaige.com/2016/11/07/%E5%B0%98%E5%9F%83%E8%90%BD%E5%AE%9A/"/>
    <id>http://rrkaige.com/2016/11/07/尘埃落定/</id>
    <published>2016-11-07T14:04:20.000Z</published>
    <updated>2016-11-08T14:51:34.696Z</updated>
    
    <content type="html"><![CDATA[<p> 冒着大雨，签订三方，由此，尘埃落定。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161107-myblog101.jpg" alt="What Do You Wanna"></p>
<a id="more"></a>
<p> 不等了，尽管诸多不如意。两个月来，夙夜忧叹，紧张、担心、焦急、不满、感慨、内疚，时时缠绕，难以释怀。脸上起痘，心中烦躁。横向比较，拒绝两家 OFFER。因为等待，推迟签约时间。直到今天，下定决心，就这样吧。</p>
<p> 连日天晴，又起风雨。穿越大半个城市，履行约定。填写信息，签字盖章，大红圆圈宣告契约缔结。不出意外的话，就这样了。</p>
<p> 读书十八载，不说出类拔萃，心中自有矜持。本欲一展抱负，无奈伯乐难寻。理想的鸡蛋碰上现实的石头，一击粉碎。网申被刷，笔试被刷，面试被刷，太多太多被拒。几度怀疑，几度抑郁，还好，没成光头。</p>
<p> 细细想来，怨不得谁。从事技术类工作，无奈忙于俗事，没有实习，没有经验，必然受挫。</p>
<p> 但我并不甘心，并不甘心，并不甘心。</p>
<p> 尘埃虽定，且行且看。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;冒着大雨，签订三方，由此，尘埃落定。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161107-myblog101.jpg&quot; alt=&quot;What Do You Wanna&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="求职" scheme="http://rrkaige.com/tags/%E6%B1%82%E8%81%8C/"/>
    
  </entry>
  
</feed>
