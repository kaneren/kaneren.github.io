<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一方天地</title>
  <subtitle>面朝大海，春暖花开</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://rrkaige.com/"/>
  <updated>2016-12-11T14:47:37.655Z</updated>
  <id>http://rrkaige.com/</id>
  
  <author>
    <name>Kane Ren</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天空之城</title>
    <link href="http://rrkaige.com/2016/12/11/%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E/"/>
    <id>http://rrkaige.com/2016/12/11/天空之城/</id>
    <published>2016-12-11T10:48:42.000Z</published>
    <updated>2016-12-11T14:47:37.655Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p> 根要扎在土壤里，和风一起生存，和种子一起过冬，和鸟儿一起歌颂春天，无论你拥有多么强大的武器，也不管你控制了多少可怜的机器人，只要离开土地，就没办法生存。</p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161211-myblog135.jpg" alt="Castle in the Sky"></p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26121323&auto=1&height=66"></iframe>

<p> 音乐响起的时候，旋律如此熟悉。</p>
<p> 希达，罗希达，“天空之城”拉普达王族的后裔，祖传的飞行石和咒语。巴鲁，看到“天空之城”的飞行冒险家的儿子，旷工技师的学徒。穆斯卡，拉普达王族的另一支后裔，政府情报机关的特务。朵拉，空中海贼的头领，面恶心善的老太婆。</p>
<p> 夺宝的贪欲，掌权的野心，守护的信念，飞行的梦想，追捕与逃跑，温柔与残暴，操纵与反抗，破坏与拯救，关于人性和未来的思考。</p>
<p> 地下矿洞里，石头闪烁微光，仿若星河。海盗船顶，云层相随，夜空辽阔。初抵“天空之城”，鸟语花香，草木葳蕤，古老的建筑诉说着光辉的历史。安静的画面，柔美的音乐，请不要说话。</p>
<p> 当毁灭的咒语响起，拉普达随之解体，高科技的武器坠入海中，带着飞行石结晶的生命之树则消失在远方。</p>
<p> 一个腐朽的时代彻底消失了。</p>
<p> 新的时代来临了。</p>
<p> 真正的天空之城，永远在心中。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;根要扎在土壤里，和风一起生存，和种子一起过冬，和鸟儿一起歌颂春天，无论你拥有多么强大的武器，也不管你控制了多少可怜的机器人，只要离开土地，就没办法生存。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161211-myblog135.jpg&quot; alt=&quot;Castle in the Sky&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="观影" scheme="http://rrkaige.com/tags/%E8%A7%82%E5%BD%B1/"/>
    
      <category term="动画" scheme="http://rrkaige.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="宫崎骏" scheme="http://rrkaige.com/tags/%E5%AE%AB%E5%B4%8E%E9%AA%8F/"/>
    
  </entry>
  
  <entry>
    <title>清醒的昏睡</title>
    <link href="http://rrkaige.com/2016/12/08/%E6%B8%85%E9%86%92%E7%9A%84%E6%98%8F%E7%9D%A1/"/>
    <id>http://rrkaige.com/2016/12/08/清醒的昏睡/</id>
    <published>2016-12-08T14:28:22.000Z</published>
    <updated>2016-12-09T14:39:35.667Z</updated>
    
    <content type="html"><![CDATA[<p> 经常处在清醒的昏睡中，意识像喷发后的岩浆，缓慢流淌。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161208-myblog132.jpeg" alt="Nap"></p>
<a id="more"></a>
<p> 这习惯应该发端于高中，养成于大学，发作于时不时。那些无聊的课堂，微暖的阳光撒下来，老师的声音从极远处飘来。我晃晃脑袋，清醒片刻，又复迷糊。但我的眼睛依然睁开，我的视线还在书本，我的潜意识似乎看懂了那些文字，我还会装模作样地点头应声。这是种神奇的状态，仿若神游，又似入定。</p>
<p> 真的是困倦到极点，而我又不能睡，只能杵着脑袋，通过些许动作表明自己清醒。意识沉入大海，脑袋完全放空。像树下飘荡的落叶，像水面打旋的扁舟，像无根的浮萍，像吹散的蒲公英。飘飘乎如遗世独立，羽化而登仙。</p>
<p> 当脑袋快要垂下，总会惊觉弹起，继而重复摇摆。直到力不可支突然醒来，仿佛拨云见日雨后天晴，晃晃脑袋，前所未有的清醒，世界都一下清楚好多。这大概是身体自我调节的一种方式，或许，也叫打盹。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常处在清醒的昏睡中，意识像喷发后的岩浆，缓慢流淌。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161208-myblog132.jpeg&quot; alt=&quot;Nap&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="昏睡" scheme="http://rrkaige.com/tags/%E6%98%8F%E7%9D%A1/"/>
    
  </entry>
  
  <entry>
    <title>那些年追过的网络剧</title>
    <link href="http://rrkaige.com/2016/12/07/%E9%82%A3%E4%BA%9B%E5%B9%B4%E8%BF%BD%E8%BF%87%E7%9A%84%E7%BD%91%E7%BB%9C%E5%89%A7/"/>
    <id>http://rrkaige.com/2016/12/07/那些年追过的网络剧/</id>
    <published>2016-12-07T12:57:17.000Z</published>
    <updated>2016-12-08T14:11:20.871Z</updated>
    
    <content type="html"><![CDATA[<p> 那些年，沉迷各种网络剧无法自拔。形形色色，给我打开新世界的无数大门。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161207-myblog131.jpg" alt="Network Drama"></p>
<a id="more"></a>
<p> 那时候，从周一到周日，不间断等待更新成为常态。在这期间，作为一个强迫症完美主义者，我会追本溯源，把历史更新全部刷完，然后刷同系列其他作品，同作者其他作品，同类型其他作品，直到刷无可刷，身心俱爽。由此，脉络即通，神功初成。</p>
<p> 我打开的第一扇大门应该是默默的《微播江湖》，每周搜罗微博上搞笑视频，加上独具特色的配音，简短不乏精彩。同时期还有猴子的《人人那些事》，瞄准人人话题。高中同学主演的《这不是大学》，关于大学，值得一笑。可惜，而今都已停播。</p>
<p> 配音团队“胥渡吧”和“淮秀帮”，恶搞经典，吐槽时事。《飞碟说》以及后来的《飞碟一分钟》，Flash 动画 + 配音，戏说常识。《大鹏嘚吧嘚》，脱口秀节目，足够搞笑。直到大鹏的《屌丝男士》横空出世，掀起一波网络剧热潮，开启全明星模式。这之后，于莎莎的《极品女士》远不如矣。</p>
<p> 等到“万万系列”崛起，一时风光无俩。卤蛋叫兽易小星，白客《万万没想到》，刘循子墨《报告老板》，葛布《学姐知道》，小爱《名侦探狄仁杰》，张本煜《大侠黄飞鸿》《高科技少女喵》，柯达《奇妙的东方》，孔连顺百变造型……不知不觉，万合天宜已经如此强大。当然，还有老湿的《不吐不快》《搜神记》《英雄谱》《大宝鉴》，那些小众精品，绝对够味。</p>
<p> 以《暴走大事件》为核心，以《暴走看啥片》《脑残师兄》《王尼美快报》等等等等为周边的“暴走系列”，王尼玛，唐马儒，张全蛋，赵铁柱，纸巾老撕，匹诺曹，刘木子，王尼美……一个个看到名字就想到头像的标识。</p>
<p>B 站，从不缺少传奇。微小微，把舞跳遍世界，坦然面对路人的羞耻女神。女孩为何穿短裙，伊丽莎白鼠，鬼畜界的杠把子，把元首玩坏了的男人。</p>
<p> 当然，少不了 papi 酱，一个集美貌与才华于一身的女人，凭借短视频，火箭班蹿红，受大众追捧，被资本热炒，而今，成为“神话”。</p>
<p> 断断续续盘点，有些印象深刻，大多早已忘记。现在想来，很久没接触，生活照常并无影响。</p>
<p> 回顾那些年追过的网络剧，一笑了之。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;那些年，沉迷各种网络剧无法自拔。形形色色，给我打开新世界的无数大门。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161207-myblog131.jpg&quot; alt=&quot;Network Drama&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="网络剧" scheme="http://rrkaige.com/tags/%E7%BD%91%E7%BB%9C%E5%89%A7/"/>
    
  </entry>
  
  <entry>
    <title>村里爱情故事</title>
    <link href="http://rrkaige.com/2016/12/06/%E6%9D%91%E9%87%8C%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B/"/>
    <id>http://rrkaige.com/2016/12/06/村里爱情故事/</id>
    <published>2016-12-06T13:38:40.000Z</published>
    <updated>2016-12-09T14:39:44.350Z</updated>
    
    <content type="html"><![CDATA[<p> 阿明和阿珍，村里爱情故事。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161206-myblog130.jpg" alt="Happy Marriage"></p>
<a id="more"></a>
<p> 收到请柬，欣然前往。新人都是村里一辈的，从小一起长大。今日喜结良缘，总算梦想成真。</p>
<p> 一帮村里小伙伴，多年不见，陌生中透着熟悉。推杯换盏，觥筹交错，几年不喝酒的我，彻底醉了。</p>
<p> 遥想当年，上幼儿园，转战三地，小学初中，都算认识。这些年来，不曾联系，直到今天，再次谈起。</p>
<p> 那时候……那个谁……没想到……是的哎……对啊对啊……来来来，再来一杯。</p>
<p> 就这样，举杯叙旧情，醉酒戴月归。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阿明和阿珍，村里爱情故事。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161206-myblog130.jpg&quot; alt=&quot;Happy Marriage&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="经历" scheme="http://rrkaige.com/tags/%E7%BB%8F%E5%8E%86/"/>
    
      <category term="婚礼" scheme="http://rrkaige.com/tags/%E5%A9%9A%E7%A4%BC/"/>
    
  </entry>
  
  <entry>
    <title>梦中心结</title>
    <link href="http://rrkaige.com/2016/12/05/%E6%A2%A6%E4%B8%AD%E5%BF%83%E7%BB%93/"/>
    <id>http://rrkaige.com/2016/12/05/梦中心结/</id>
    <published>2016-12-05T04:43:57.000Z</published>
    <updated>2016-12-09T14:39:53.311Z</updated>
    
    <content type="html"><![CDATA[<p> 为什么？</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161205-myblog129.jpg" alt="Dream"></p>
<a id="more"></a>
<p> 依稀记得，梦中的自己，吼出这句话。</p>
<p> 都说日有所思夜有所梦，但我白天未思，许久不念，她却又生生闯进梦来。搅一池碧水，生一波涟漪。</p>
<p> 场景都忘了，只记得问出这句，却没有答复。我恍然明悟在梦中，我至今没有获得答案。又或者，我明明知道，但我仍未接受。</p>
<p> 我便知道，我的心结依旧未解。真是令人灰心丧气的发现啊。</p>
<p> 为什么？下定决心，划清界限。还会时不时地想起。</p>
<p> 为什么？念念不忘，并无回响。还要忍受这无尽的折磨。</p>
<p> 果真是无可救药了么。</p>
<p> 难怪挥慧剑斩情丝的人，能够心坚似铁转身成仙。说放就放者，自不被红尘所累，又何惧刀山剑海。</p>
<p> 如此苦炼，分明在一丝丝泼灭我的热火，抽尽我的心血，榨干我的柔情，击碎我的信念。寒心变顽石，顽石化齑粉。齑粉何所去，留待明日花。</p>
<p> 用文字发泄出来，或许会好点吧。</p>
<p> 仍寻一剂良药，止痛生津，抚慰心伤。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161205-myblog129.jpg&quot; alt=&quot;Dream&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="梦" scheme="http://rrkaige.com/tags/%E6%A2%A6/"/>
    
  </entry>
  
  <entry>
    <title>地球脉动</title>
    <link href="http://rrkaige.com/2016/12/03/%E5%9C%B0%E7%90%83%E8%84%89%E5%8A%A8/"/>
    <id>http://rrkaige.com/2016/12/03/地球脉动/</id>
    <published>2016-12-03T06:16:05.000Z</published>
    <updated>2016-12-08T14:10:17.144Z</updated>
    
    <content type="html"><![CDATA[<p>《地球脉动》第二季，前三集看罢，唯感叹生命残酷的美丽。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161203-myblog127.jpg" alt="Planet Earth"></p>
<a id="more"></a>
<p> 岛屿篇。流居偏远小岛上的侏三趾树懒，为找对象不得不跋树涉水。体型庞大流着哈喇子的科莫多巨蜥，为了争夺领地和交配权大打出手。刚出生的小海鬣蜥躲避群蛇围追堵截，张牙舞爪的爬行让人好笑又紧张，一旦失误就是死亡，好在它运用跑酷般的神走位，成功蛇口逃生。新西兰信天翁，苦等同伴归来，开心地跳起贴面舞。白玄鸥会遭遇偷吃蛋的塞舌尔织雀，黑燕鸥会被皮孙木种子缠身。五千万红蟹，繁殖大迁徙的盔甲洪流，却死于外来长足捷蚁之口。颊带企鹅在风浪中搏杀，轮流为养育子女奔波，摇晃的背影却稳如泰山。</p>
<p> 山脉篇。努比亚羱羊在陡峭的山沿腾跃，躲避赤狐追杀，难以想象其强大的弹跳能力。金雕在天空滑翔，为争一口冷食大打出手。棕熊从雪洞醒来，跋涉返回林间，背靠大树，边蹭边扭，一起摇摆。山猫听音辨位，扎进厚厚雪层逮老鼠，蹿上树干抓松鼠。山兔鼠在岩石上迎着初阳慵懒休憩，呼噜声声。火烈鸟在冰面踉跄而行，时而失足落水，时而成群结队，像芭蕾舞演员般优雅踱步。雪豹，高山王者，用尿液划分领地，一生注定孤单。</p>
<p> 丛林篇。大狐猴在林间纵跃，蜘蛛猴学着爬树。德拉科蜥蜴偷吃蚂蚁，立旗警告，然后纵身一跳，滑翔于林间。刀嘴蜂鸟在花间采蜜，在树枝上磨喙。雨中丛林的每一帧都美到爆。水豚在岸边观望， 水獭在水中嬉戏，凯门鳄张着嘴，在河面逡巡游弋。真正的丛林王者美洲豹，连鳄鱼也是它的晚餐。玻璃蛙和大黄蜂的护卵之争。雄性极乐鸟销魂的舞姿，魔鬼的步伐，千方百计展示自己，吸引雌鸟。</p>
<p> 如此看来，生存和繁殖就是动物的本能，当然包括人类自己。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《地球脉动》第二季，前三集看罢，唯感叹生命残酷的美丽。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161203-myblog127.jpg&quot; alt=&quot;Planet Earth&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="纪录片" scheme="http://rrkaige.com/tags/%E7%BA%AA%E5%BD%95%E7%89%87/"/>
    
      <category term="地球" scheme="http://rrkaige.com/tags/%E5%9C%B0%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>SQL 学习笔记之三</title>
    <link href="http://rrkaige.com/2016/11/30/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/"/>
    <id>http://rrkaige.com/2016/11/30/SQL学习笔记之三/</id>
    <published>2016-11-30T13:36:17.000Z</published>
    <updated>2016-12-01T14:49:00.889Z</updated>
    
    <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/sql/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161130-myblog124.jpg" alt="Code SQL Database"></p>
<a id="more"></a>
<h3 id="CREATE-DATABASE-Statement"><a href="#CREATE-DATABASE-Statement" class="headerlink" title="CREATE DATABASE Statement"></a>CREATE DATABASE Statement</h3><p>The <strong>CREATE DATABASE</strong> statement is used to create a database.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CREATE DATABASE dbname;</div></pre></td></tr></table></figure>
<h3 id="CREATE-TABLE-Statement"><a href="#CREATE-TABLE-Statement" class="headerlink" title="CREATE TABLE Statement"></a>CREATE TABLE Statement</h3><p>The <strong>CREATE TABLE</strong> statement is used to create a table in a database. Tables are organized into rows and columns; and each table must have a name.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE table_name</div><div class="line">(</div><div class="line">column_name1 data_type(size),</div><div class="line">column_name2 data_type(size),</div><div class="line">column_name3 data_type(size),</div><div class="line">....</div><div class="line">);</div></pre></td></tr></table></figure>
<ul>
<li>The column_name parameters specify the names of the columns of the table.</li>
<li>The data_type parameter specifies what type of data the column can hold (e.g. varchar, integer, decimal, date, etc.).</li>
<li>The size parameter specifies the maximum length of the column of the table.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">PersonID int,</div><div class="line">LastName varchar(255),</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255)</div><div class="line">);</div></pre></td></tr></table></figure>
<h3 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h3><p>SQL constraints are used to specify rules for the data in a table. If there is any violation between the constraint and the data action, the action is aborted by the constraint.</p>
<p>Constraints can be specified when the table is created (inside the CREATE TABLE statement) or after the table is created (inside the ALTER TABLE statement).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE table_name</div><div class="line">(</div><div class="line">column_name1 data_type(size) constraint_name,</div><div class="line">column_name2 data_type(size) constraint_name,</div><div class="line">column_name3 data_type(size) constraint_name,</div><div class="line">....</div><div class="line">);</div></pre></td></tr></table></figure>
<h4 id="NOT-NULL-Constraint"><a href="#NOT-NULL-Constraint" class="headerlink" title="NOT NULL Constraint"></a>NOT NULL Constraint</h4><p>The <strong>NOT NULL</strong> constraint enforces a column to NOT accept NULL values.</p>
<p>The NOT NULL constraint enforces a field to always contain a value. This means that you cannot insert a new record, or update a record without adding a value to this field.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE PersonsNotNull</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255)</div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="UNIQUE-Constraint"><a href="#UNIQUE-Constraint" class="headerlink" title="UNIQUE Constraint"></a>UNIQUE Constraint</h4><p>The <strong>UNIQUE</strong> constraint uniquely identifies each record in a database table.</p>
<p>The UNIQUE and PRIMARY KEY constraints both provide a guarantee for uniqueness for a column or set of columns. A PRIMARY KEY constraint automatically has a UNIQUE constraint defined on it.</p>
<p><strong>Note:</strong> You can have many UNIQUE constraints per table, but only one PRIMARY KEY constraint per table.</p>
<ul>
<li>UNIQUE Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255),</div><div class="line">CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName)</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>UNIQUE Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ADD CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName)</div></pre></td></tr></table></figure>
<ul>
<li>DROP a UNIQUE Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">DROP CONSTRAINT uc_PersonID</div></pre></td></tr></table></figure>
<h4 id="PRIMARY-KEY-Constraint"><a href="#PRIMARY-KEY-Constraint" class="headerlink" title="PRIMARY KEY Constraint"></a>PRIMARY KEY Constraint</h4><p>The <strong>PRIMARY KEY</strong> constraint uniquely identifies each record in a database table.</p>
<p>Primary keys must contain UNIQUE values. A primary key column cannot contain NULL values.</p>
<p>Most tables should have a primary key, and each table can have only ONE primary key.</p>
<ul>
<li>PRIMARY KEY Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255),</div><div class="line">CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)</div><div class="line">)</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In the example above there is only ONE PRIMARY KEY (<code>pk_PersonID</code>). However, the VALUE of the primary key is made up of TWO COLUMNS (<code>P_Id</code> + <code>LastName</code>).</p>
<ul>
<li>PRIMARY KEY Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ADD CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> If you use the ALTER TABLE statement to add a primary key, the primary key column(s) must already have been declared to not contain NULL values (when the table was first created).</p>
<ul>
<li>DROP a PRIMARY KEY Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">DROP CONSTRAINT pk_PersonID</div></pre></td></tr></table></figure>
<h4 id="FOREIGN-KEY-Constraint"><a href="#FOREIGN-KEY-Constraint" class="headerlink" title="FOREIGN KEY Constraint"></a>FOREIGN KEY Constraint</h4><p>A <strong>FOREIGN KEY</strong> in one table points to a PRIMARY KEY in another table.</p>
<p>The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.</p>
<p>The FOREIGN KEY constraint also prevents invalid data from being inserted into the foreign key column, because it has to be one of the values contained in the table it points to.</p>
<ul>
<li>FOREIGN KEY Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Orders</div><div class="line">(</div><div class="line">O_Id int NOT NULL,</div><div class="line">OrderNo int NOT NULL,</div><div class="line">P_Id int,</div><div class="line">PRIMARY KEY (O_Id),</div><div class="line">CONSTRAINT fk_PerOrders FOREIGN KEY (P_Id)</div><div class="line">REFERENCES Persons(P_Id)</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>FOREIGN KEY Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Orders</div><div class="line">ADD CONSTRAINT fk_PerOrders</div><div class="line">FOREIGN KEY (P_Id)</div><div class="line">REFERENCES Persons(P_Id)</div></pre></td></tr></table></figure>
<ul>
<li>DROP a FOREIGN KEY Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Orders</div><div class="line">DROP CONSTRAINT fk_PerOrders</div></pre></td></tr></table></figure>
<h4 id="CHECK-Constraint"><a href="#CHECK-Constraint" class="headerlink" title="CHECK Constraint"></a>CHECK Constraint</h4><p>The <strong>CHECK</strong> constraint is used to limit the value range that can be placed in a column.</p>
<p>If you define a CHECK constraint on a single column it allows only certain values for this column.</p>
<p>If you define a CHECK constraint on a table it can limit the values in certain columns based on values in other columns in the row.</p>
<ul>
<li>CHECK Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255),</div><div class="line">CONSTRAINT chk_Person CHECK (P_Id&gt;0 AND City=&apos;Sandnes&apos;)</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>CHECK Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ADD CONSTRAINT chk_Person CHECK (P_Id&gt;0 AND City=&apos;Sandnes&apos;)</div></pre></td></tr></table></figure>
<ul>
<li>DROP a CHECK Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">DROP CONSTRAINT chk_Person</div></pre></td></tr></table></figure>
<h4 id="DEFAULT-Constraint"><a href="#DEFAULT-Constraint" class="headerlink" title="DEFAULT Constraint"></a>DEFAULT Constraint</h4><p>The <strong>DEFAULT</strong> constraint is used to insert a default value into a column.</p>
<p>The default value will be added to all new records, if no other value is specified.</p>
<ul>
<li>DEFAULT Constraint on CREATE TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE Persons</div><div class="line">(</div><div class="line">P_Id int NOT NULL,</div><div class="line">LastName varchar(255) NOT NULL,</div><div class="line">FirstName varchar(255),</div><div class="line">Address varchar(255),</div><div class="line">City varchar(255) DEFAULT &apos;Sandnes&apos;</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>DEFAULT Constraint on ALTER TABLE</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ALTER COLUMN City SET DEFAULT &apos;SANDNES&apos;</div></pre></td></tr></table></figure>
<ul>
<li>DROP a DEFAULT Constraint</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE Persons</div><div class="line">ALTER COLUMN City DROP DEFAULT</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续学习，教程来自&lt;a href=&quot;http://www.w3schools.com/sql/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161130-myblog124.jpg&quot; alt=&quot;Code SQL Database&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="SQL" scheme="http://rrkaige.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>SQL 学习笔记之二</title>
    <link href="http://rrkaige.com/2016/11/29/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/"/>
    <id>http://rrkaige.com/2016/11/29/SQL学习笔记之二/</id>
    <published>2016-11-29T11:58:53.000Z</published>
    <updated>2016-12-01T13:51:49.612Z</updated>
    
    <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/sql/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161129-myblog123.jpg" alt="SQL"></p>
<a id="more"></a>
<h3 id="Aliases"><a href="#Aliases" class="headerlink" title="Aliases"></a>Aliases</h3><p>SQL aliases are used to give a database table, or a column in a table, a temporary name. Basically aliases are created to make column names more readable.</p>
<ul>
<li>SQL Alias Syntax for Columns</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT column_name AS alias_name</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT CustomerName, Address+&apos;, &apos;+City+&apos;, &apos;+PostalCode+&apos;, &apos;+Country AS Address</div><div class="line">FROM Customers;</div></pre></td></tr></table></figure>
<ul>
<li>SQL Alias Syntax for Tables</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name AS alias_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT o.OrderID, o.OrderDate, c.CustomerName</div><div class="line">FROM Customers AS c, Orders AS o</div><div class="line">WHERE c.CustomerName=&quot;Around the Horn&quot; AND c.CustomerID=o.CustomerID;</div></pre></td></tr></table></figure>
<p>Aliases can be useful when:</p>
<ul>
<li>There are more than one table involved in a query</li>
<li>Functions are used in the query</li>
<li>Column names are big or not very readable</li>
<li>Two or more columns are combined together</li>
</ul>
<h3 id="Joins"><a href="#Joins" class="headerlink" title="Joins"></a>Joins</h3><p>An SQL <strong>JOIN</strong> clause is used to combine rows from two or more tables, based on a common field between them.</p>
<h4 id="INNER-JOIN-Keyword"><a href="#INNER-JOIN-Keyword" class="headerlink" title="INNER JOIN Keyword"></a>INNER JOIN Keyword</h4><p>The <strong>INNER JOIN</strong> keyword selects all rows from both tables as long as there is a match between the columns in both tables.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">INNER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> INNER JOIN is the same as JOIN.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">FROM Customers</div><div class="line">INNER JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID</div><div class="line">ORDER BY Customers.CustomerName;</div></pre></td></tr></table></figure>
<h4 id="LEFT-JOIN-Keyword"><a href="#LEFT-JOIN-Keyword" class="headerlink" title="LEFT JOIN Keyword"></a>LEFT JOIN Keyword</h4><p>The <strong>LEFT JOIN</strong> keyword returns all rows from the left table (table1), with the matching rows in the right table (table2). The result is NULL in the right side when there is no match.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">LEFT JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">LEFT OUTER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In some databases LEFT JOIN is called LEFT OUTER JOIN.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">FROM Customers</div><div class="line">LEFT JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID</div><div class="line">ORDER BY Customers.CustomerName;</div></pre></td></tr></table></figure>
<h4 id="RIGHT-JOIN-Keyword"><a href="#RIGHT-JOIN-Keyword" class="headerlink" title="RIGHT JOIN Keyword"></a>RIGHT JOIN Keyword</h4><p>The <strong>RIGHT JOIN</strong> keyword returns all rows from the right table (table2), with the matching rows in the left table (table1). The result is NULL in the left side when there is no match.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">RIGHT JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">RIGHT OUTER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> In some databases RIGHT JOIN is called RIGHT OUTER JOIN.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Orders.OrderID, Employees.FirstName</div><div class="line">FROM Orders</div><div class="line">RIGHT JOIN Employees</div><div class="line">ON Orders.EmployeeID=Employees.EmployeeID</div><div class="line">ORDER BY Orders.OrderID;</div></pre></td></tr></table></figure>
<h4 id="FULL-OUTER-JOIN-Keyword"><a href="#FULL-OUTER-JOIN-Keyword" class="headerlink" title="FULL OUTER JOIN Keyword"></a>FULL OUTER JOIN Keyword</h4><p>The <strong>FULL OUTER JOIN</strong> keyword returns all rows from the left table (table1) and from the right table (table2).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table1</div><div class="line">FULL OUTER JOIN table2</div><div class="line">ON table1.column_name=table2.column_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">FROM Customers</div><div class="line">FULL OUTER JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID</div><div class="line">ORDER BY Customers.CustomerName;</div></pre></td></tr></table></figure>
<h3 id="UNION-Operator"><a href="#UNION-Operator" class="headerlink" title="UNION Operator"></a>UNION Operator</h3><p>The <strong>UNION</strong> operator is used to combine the result-set of two or more SELECT statements.</p>
<p>Notice that each SELECT statement within the UNION must have the same number of columns. The columns must also have similar data types. Also, the columns in each SELECT statement must be in the same order.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s) FROM table1</div><div class="line">UNION</div><div class="line">SELECT column_name(s) FROM table2;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The UNION operator selects only distinct values by default. To allow duplicate values, use the ALL keyword with UNION.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s) FROM table1</div><div class="line">UNION ALL</div><div class="line">SELECT column_name(s) FROM table2;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The column names in the result-set of a UNION are usually equal to the column names in the first SELECT statement in the UNION.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT City, Country FROM Customers</div><div class="line">WHERE Country=&apos;Germany&apos;</div><div class="line">UNION ALL</div><div class="line">SELECT City, Country FROM Suppliers</div><div class="line">WHERE Country=&apos;Germany&apos;</div><div class="line">ORDER BY City;</div></pre></td></tr></table></figure>
<h3 id="SELECT-INTO-Statement"><a href="#SELECT-INTO-Statement" class="headerlink" title="SELECT INTO Statement"></a>SELECT INTO Statement</h3><p>The <strong>SELECT INTO</strong> statement selects data from one table and inserts it into a new table.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">INTO newtable [IN externaldb]</div><div class="line">FROM table1;</div></pre></td></tr></table></figure>
<p>The new table will be created with the column-names and types as defined in the SELECT statement. You can apply new names using the AS clause.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT Customers.CustomerName, Orders.OrderID</div><div class="line">INTO CustomersOrderBackup2013</div><div class="line">FROM Customers</div><div class="line">LEFT JOIN Orders</div><div class="line">ON Customers.CustomerID=Orders.CustomerID;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> The SELECT INTO statement can also be used to create a new, empty table using the schema of another. Just add a WHERE clause that causes the query to return no data:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">INTO newtable</div><div class="line">FROM table1</div><div class="line">WHERE 1=0;</div></pre></td></tr></table></figure>
<h3 id="INSERT-INTO-SELECT-Statement"><a href="#INSERT-INTO-SELECT-Statement" class="headerlink" title="INSERT INTO SELECT Statement"></a>INSERT INTO SELECT Statement</h3><p>The <strong>INSERT INTO SELECT</strong> statement selects data from one table and inserts it into an existing table. Any existing rows in the target table are unaffected.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table2</div><div class="line">SELECT * FROM table1;</div></pre></td></tr></table></figure>
<p>or:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table2</div><div class="line">(column_name(s))</div><div class="line">SELECT column_name(s)</div><div class="line">FROM table1;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">INSERT INTO Customers (CustomerName, Country)</div><div class="line">SELECT SupplierName, Country FROM Suppliers</div><div class="line">WHERE Country=&apos;Germany&apos;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续学习，教程来自&lt;a href=&quot;http://www.w3schools.com/sql/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161129-myblog123.jpg&quot; alt=&quot;SQL&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="SQL" scheme="http://rrkaige.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>SQL 学习笔记之一</title>
    <link href="http://rrkaige.com/2016/11/28/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/"/>
    <id>http://rrkaige.com/2016/11/28/SQL学习笔记之一/</id>
    <published>2016-11-28T02:03:11.000Z</published>
    <updated>2016-11-30T15:07:10.471Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 SQL，教程来自 <a href="http://www.w3schools.com/sql/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161128-myblog122.png" alt="SQL"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>SQL is a standard language for accessing and manipulating databases.</p>
<ul>
<li>SQL stands for <strong>Structured Query Language</strong></li>
<li>SQL lets you access and manipulate databases</li>
<li>SQL is an ANSI (American National Standards Institute) standard</li>
</ul>
<p><strong>Note:</strong> Most of the SQL database programs also have their own proprietary extensions in addition to the SQL standard!</p>
<p>To build a web site that shows data from a database, you will need:</p>
<ul>
<li>An RDBMS database program (i.e. MS Access, SQL Server, MySQL)</li>
<li>To use a server-side scripting language, like PHP or ASP</li>
<li>To use SQL to get the data you want</li>
<li>To use HTML / CSS</li>
</ul>
<p>RDBMS stands for <strong>Relational Database Management System</strong>.</p>
<p>RDBMS is the basis for SQL, and for all modern database systems such as MS SQL Server, IBM DB2, Oracle, MySQL, and Microsoft Access.</p>
<p>The data in RDBMS is stored in database objects called tables. A table is a collection of related data entries and it consists of columns and rows.</p>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>SQL keywords are <strong>NOT case sensitive</strong>: select is the same as SELECT.</p>
<p>Some database systems require a semicolon at the end of each SQL statement. Semicolon is the standard way to separate each SQL statement in database systems that allow more than one SQL statement to be executed in the same call to the server.</p>
<h3 id="SELECT-Statement"><a href="#SELECT-Statement" class="headerlink" title="SELECT Statement"></a>SELECT Statement</h3><p>The <strong>SELECT</strong> statement is used to select data from a database. The result is stored in a result table, called the <strong>result-set</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT column_name,column_name</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers;</div></pre></td></tr></table></figure>
<h3 id="SELECT-DISTINCT-Statement"><a href="#SELECT-DISTINCT-Statement" class="headerlink" title="SELECT DISTINCT Statement"></a>SELECT DISTINCT Statement</h3><p>In a table, a column may contain many duplicate values; and sometimes you only want to list the different (distinct) values.</p>
<p>The <strong>DISTINCT</strong> keyword can be used to return only distinct (different) values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT DISTINCT column_name,column_name</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT DISTINCT City FROM Customers;</div></pre></td></tr></table></figure>
<h3 id="WHERE-Clause"><a href="#WHERE-Clause" class="headerlink" title="WHERE Clause"></a>WHERE Clause</h3><p>The <strong>WHERE</strong> clause is used to extract only those records that fulfill a specified criterion.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name,column_name</div><div class="line">FROM table_name</div><div class="line">WHERE column_name operator value;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE Country=&apos;Mexico&apos;;</div></pre></td></tr></table></figure>
<p>SQL requires single quotes around text values (most database systems will also allow double quotes). However, numeric fields should not be enclosed in quotes:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE CustomerID=1;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Operator</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>=</td>
<td>Equal</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>Not equal. Note: In some versions of SQL this operator may be written as !=</td>
</tr>
<tr>
<td>&gt;</td>
<td>Greater than</td>
</tr>
<tr>
<td>&lt;</td>
<td>Less than</td>
</tr>
<tr>
<td>&gt;=</td>
<td>Greater than or equal</td>
</tr>
<tr>
<td>&lt;=</td>
<td>Less than or equal</td>
</tr>
<tr>
<td>BETWEEN</td>
<td>Between an inclusive range</td>
</tr>
<tr>
<td>LIKE</td>
<td>Search for a pattern</td>
</tr>
<tr>
<td>IN</td>
<td>To specify multiple possible values for a column</td>
</tr>
</tbody>
</table>
<h3 id="AND-amp-OR-Operators"><a href="#AND-amp-OR-Operators" class="headerlink" title="AND &amp; OR Operators"></a>AND &amp; OR Operators</h3><p>The <strong>AND</strong> &amp; <strong>OR</strong> operators are used to filter records based on more than one condition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE Country=&apos;Germany&apos;</div><div class="line">AND (City=&apos;Berlin&apos; OR City=&apos;München&apos;);</div></pre></td></tr></table></figure>
<h3 id="ORDER-BY-Keyword"><a href="#ORDER-BY-Keyword" class="headerlink" title="ORDER BY Keyword"></a>ORDER BY Keyword</h3><p>The <strong>ORDER BY</strong> keyword is used to sort the result-set by one or more columns.</p>
<p>The ORDER BY keyword sorts the records in ascending order by default. To sort the records in a descending order, you can use the DESC keyword.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name, column_name</div><div class="line">FROM table_name</div><div class="line">ORDER BY column_name ASC|DESC, column_name ASC|DESC;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">ORDER BY Country ASC, CustomerName DESC;</div></pre></td></tr></table></figure>
<h3 id="INSERT-INTO-Statement"><a href="#INSERT-INTO-Statement" class="headerlink" title="INSERT INTO Statement"></a>INSERT INTO Statement</h3><p>The <strong>INSERT INTO</strong> statement is used to insert new records in a table.</p>
<p>It is possible to write the INSERT INTO statement in two forms.</p>
<ul>
<li>The first form does not specify the column names where the data will be inserted, only their values:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table_name</div><div class="line">VALUES (value1,value2,value3,...);</div></pre></td></tr></table></figure>
<ul>
<li>The second form specifies both the column names and the values to be inserted:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO table_name (column1,column2,column3,...)</div><div class="line">VALUES (value1,value2,value3,...);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT INTO Customers (CustomerName, City, Country)</div><div class="line">VALUES (&apos;Cardinal&apos;, &apos;Stavanger&apos;, &apos;Norway&apos;);</div></pre></td></tr></table></figure>
<h3 id="UPDATE-Statement"><a href="#UPDATE-Statement" class="headerlink" title="UPDATE Statement"></a>UPDATE Statement</h3><p>The <strong>UPDATE</strong> statement is used to update existing records in a table.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UPDATE table_name</div><div class="line">SET column1=value1,column2=value2,...</div><div class="line">WHERE some_column=some_value;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The WHERE clause specifies which record or records that should be updated. If you omit the WHERE clause, all records will be updated!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UPDATE Customers</div><div class="line">SET ContactName=&apos;Alfred Schmidt&apos;, City=&apos;Hamburg&apos;</div><div class="line">WHERE CustomerName=&apos;Alfreds Futterkiste&apos;;</div></pre></td></tr></table></figure>
<h3 id="DELETE-Statement"><a href="#DELETE-Statement" class="headerlink" title="DELETE Statement"></a>DELETE Statement</h3><p>The <strong>DELETE</strong> statement is used to delete rows in a table.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DELETE FROM table_name</div><div class="line">WHERE some_column=some_value;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The WHERE clause specifies which record or records that should be deleted. If you omit the WHERE clause, all records will be deleted!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DELETE FROM Customers</div><div class="line">WHERE CustomerName=&apos;Alfreds Futterkiste&apos; AND ContactName=&apos;Maria Anders&apos;;</div></pre></td></tr></table></figure>
<p>It is possible to delete all rows in a table without deleting the table. This means that the table structure, attributes, and indexes will be intact:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DELETE FROM table_name;</div><div class="line"></div><div class="line">or</div><div class="line"></div><div class="line">DELETE * FROM table_name;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> Be very careful when deleting records. You cannot undo this statement!</p>
<h3 id="Injection"><a href="#Injection" class="headerlink" title="Injection"></a>Injection</h3><p>SQL injection is a technique where malicious users can inject SQL commands into an SQL statement, via web page input.</p>
<p>Injected SQL commands can alter SQL statement and compromise the security of a web application.</p>
<h4 id="Based-on-1-1-is-Always-True"><a href="#Based-on-1-1-is-Always-True" class="headerlink" title="Based on 1=1 is Always True"></a>Based on 1=1 is Always True</h4><p>A smart hacker might get access to all the user names and passwords in a database by simply inserting <code>105 or 1=1</code> into the input box.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT UserId, Name, Password FROM Users WHERE UserId = 105 or 1=1;</div></pre></td></tr></table></figure>
<h4 id="Based-on-“”-””-is-Always-True"><a href="#Based-on-“”-””-is-Always-True" class="headerlink" title="Based on “”=”” is Always True"></a>Based on “”=”” is Always True</h4><p>A smart hacker might get access to user names and passwords in a database by simply inserting <code>&quot; or &quot;&quot;=&quot;</code> into the user name or password text box.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Users WHERE Name =&quot;&quot; or &quot;&quot;=&quot;&quot; AND Pass =&quot;&quot; or &quot;&quot;=&quot;&quot;</div></pre></td></tr></table></figure>
<h4 id="Based-on-Batched-SQL-Statements"><a href="#Based-on-Batched-SQL-Statements" class="headerlink" title="Based on Batched SQL Statements"></a>Based on Batched SQL Statements</h4><p>Most databases support batched SQL statement, separated by semicolon.</p>
<p>User id: <code>105; DROP TABLE Suppliers</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Users WHERE UserId = 105; DROP TABLE Suppliers</div></pre></td></tr></table></figure>
<h4 id="Parameters-for-Protection"><a href="#Parameters-for-Protection" class="headerlink" title="Parameters for Protection"></a>Parameters for Protection</h4><p>Some web developers use a “blacklist” of words or characters to search for in SQL input, to prevent SQL injection attacks.</p>
<p>This is not a very good idea. Many of these words (like delete or drop) and characters (like semicolons and quotation marks), are used in common language, and should be allowed in many types of input.</p>
<p>(In fact it should be perfectly legal to input an SQL statement in a database field.)</p>
<p>The only proven way to protect a web site from SQL injection attacks, is to use <strong>SQL parameters</strong>.</p>
<p>SQL parameters are values that are added to an SQL query at execution time, in a controlled manner.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">txtUserId = getRequestString(&quot;UserId&quot;);</div><div class="line">txtSQL = &quot;SELECT * FROM Users WHERE UserId = @0&quot;;</div><div class="line">db.Execute(txtSQL,txtUserId);</div></pre></td></tr></table></figure>
<p>Note that parameters are represented in the SQL statement by a @ marker.</p>
<p>The SQL engine checks each parameter to ensure that it is correct for its column and are treated literally, and not as part of the SQL to be executed.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">txtNam = getRequestString(&quot;CustomerName&quot;);</div><div class="line">txtAdd = getRequestString(&quot;Address&quot;);</div><div class="line">txtCit = getRequestString(&quot;City&quot;);</div><div class="line">txtSQL = &quot;INSERT INTO Customers (CustomerName,Address,City) Values(@0,@1,@2)&quot;;</div><div class="line">db.Execute(txtSQL,txtNam,txtAdd,txtCit);</div></pre></td></tr></table></figure>
<h3 id="SELECT-TOP-Clause"><a href="#SELECT-TOP-Clause" class="headerlink" title="SELECT TOP Clause"></a>SELECT TOP Clause</h3><p>The <strong>SELECT TOP</strong> clause is used to specify the number of records to return.</p>
<p><strong>Note:</strong> Not all database systems support the SELECT TOP clause.</p>
<ul>
<li>SQL Server / MS Access Syntax</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT TOP number|percent column_name(s)</div><div class="line">FROM table_name;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT TOP 50 PERCENT * FROM Customers;</div></pre></td></tr></table></figure>
<ul>
<li>MySQL Syntax</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">LIMIT number;</div></pre></td></tr></table></figure>
<ul>
<li>Oracle Syntax</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE ROWNUM &lt;= number;</div></pre></td></tr></table></figure>
<h3 id="LIKE-Operator"><a href="#LIKE-Operator" class="headerlink" title="LIKE Operator"></a>LIKE Operator</h3><p>The <strong>LIKE</strong> operator is used in a WHERE clause to search for a specified pattern in a column.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE column_name LIKE pattern;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;s%&apos;;</div></pre></td></tr></table></figure>
<p>Using the <strong>NOT</strong> keyword allows you to select records that do NOT match the pattern.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE Country NOT LIKE &apos;%land%&apos;;</div></pre></td></tr></table></figure>
<h3 id="Wildcards"><a href="#Wildcards" class="headerlink" title="Wildcards"></a>Wildcards</h3><p>A wildcard character can be used to substitute for any other character(s) in a string.</p>
<p>In SQL, wildcard characters are used with the SQL LIKE operator. SQL wildcards are used to search for data within a table. </p>
<table>
<thead>
<tr>
<th>Wildcard</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>%</td>
<td>A substitute for zero or more characters</td>
</tr>
<tr>
<td>_</td>
<td>A substitute for a single character</td>
</tr>
<tr>
<td>[charlist]</td>
<td>Sets and ranges of characters to match</td>
</tr>
<tr>
<td>[^charlist] or [!charlist]</td>
<td>Matches only a character NOT specified within the brackets</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;L_n_on&apos;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;[a-c]%&apos;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City LIKE &apos;[!bsp]%&apos;;</div></pre></td></tr></table></figure>
<h3 id="IN-Operator"><a href="#IN-Operator" class="headerlink" title="IN Operator"></a>IN Operator</h3><p>The <strong>IN</strong> operator allows you to specify multiple values in a WHERE clause.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE column_name IN (value1,value2,...);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Customers</div><div class="line">WHERE City IN (&apos;Paris&apos;,&apos;London&apos;);</div></pre></td></tr></table></figure>
<h3 id="BETWEEN-Operator"><a href="#BETWEEN-Operator" class="headerlink" title="BETWEEN Operator"></a>BETWEEN Operator</h3><p>The <strong>BETWEEN</strong> operator is used to select values within a range. The values can be numbers, text, or dates.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT column_name(s)</div><div class="line">FROM table_name</div><div class="line">WHERE column_name BETWEEN value1 AND value2;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Products</div><div class="line">WHERE (Price BETWEEN 10 AND 20)</div><div class="line">AND NOT CategoryID IN (1,2,3);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Products</div><div class="line">WHERE ProductName BETWEEN &apos;C&apos; AND &apos;M&apos;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Orders</div><div class="line">WHERE OrderDate BETWEEN #07/04/1996# AND #07/09/1996#;</div></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ul>
<li>In some databases, BETWEEN selects fields that are between and excluding the test values.</li>
<li>In other databases, BETWEEN selects fields that are between and including the test values.</li>
<li>And in other databases, BETWEEN selects fields between the test values, including the first test value and excluding the last test value.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习SQL，教程来自&lt;a href=&quot;http://www.w3schools.com/sql/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161128-myblog122.png&quot; alt=&quot;SQL&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="SQL" scheme="http://rrkaige.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>总是糊涂</title>
    <link href="http://rrkaige.com/2016/11/27/%E6%80%BB%E6%98%AF%E7%B3%8A%E6%B6%82/"/>
    <id>http://rrkaige.com/2016/11/27/总是糊涂/</id>
    <published>2016-11-27T14:02:25.000Z</published>
    <updated>2016-11-27T15:04:23.293Z</updated>
    
    <content type="html"><![CDATA[<p> 感情的世界里，我总是糊涂。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161127-myblog121.jpg" alt="Pursuit Of Happiness"></p>
<a id="more"></a>
<p> 理想主义？应该是幼稚吧。自认为看得很清，其实是众人当中最傻一个。感情洁癖？或许是孤芳自赏。无限意淫，想的是遥远的乌托邦。无法抉择？大概是博爱作祟。眼前是五颜六色花儿，心中是色彩斑斓世界。</p>
<p> 想太多，往往自作多情；想太多，往往作茧自缚；想太多，往往擦肩而过；想太多，往往一无所得。</p>
<p> 我本将心向明月，奈何明月照沟渠。曾经沧海难为水，除却巫山不是云。</p>
<p> 从一见钟情，到心如止水。从满腔热血，到心如死灰。从至死不渝，到随心所欲。从洁身自爱，到自暴自弃。是世界太快？抑或我走太慢？</p>
<p> 我不懂，我糊涂，我抓狂，我止躁。我痛如刀割，我舔舐伤口，我冷眼旁观，我欲语还休。我默默嚼碎，生生咽下，我拍拍胸口，强作欢颜。抹一把泪花，摔落在尘烬，转身，不见。</p>
<p> 亲爱的，妳在哪？我只怕，我坚持不到。我只怕，我等待不来。</p>
<p> 或许，我该孤独一生。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感情的世界里，我总是糊涂。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161127-myblog121.jpg&quot; alt=&quot;Pursuit Of Happiness&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="心态" scheme="http://rrkaige.com/tags/%E5%BF%83%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>风之谷</title>
    <link href="http://rrkaige.com/2016/11/26/%E9%A3%8E%E4%B9%8B%E8%B0%B7/"/>
    <id>http://rrkaige.com/2016/11/26/风之谷/</id>
    <published>2016-11-26T12:36:56.000Z</published>
    <updated>2016-11-28T14:54:52.098Z</updated>
    
    <content type="html"><![CDATA[<p> 如果不是因为画质，很难相信这是一部八十年代的作品。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161126-myblog120.jpg" alt="Nausicaä of the Valley of the Wind"></p>
<a id="more"></a>
<p> 这个故事，有着独立的世界架构。1000 年后，孢子植物统治世界，空气中布满毒素，人类和腐海的斗争不息，国家间的冲突不断，看着恶心实质净化世界的王虫，毁灭世界只能苟延残喘的巨神兵。看完总觉得不完整，后来才知道是根据漫画改编，原始剧情则更加丰满宏大。</p>
<p> 娜乌西卡，风之谷的公主。她越过高山，跨过平原，她救了所有人，唯独她的父亲，和她自己。也许，她守住了自己的信念。大爱，不分敌我。</p>
<p> 我还能说什么呢，唯有欣赏。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果不是因为画质，很难相信这是一部八十年代的作品。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161126-myblog120.jpg&quot; alt=&quot;Nausicaä of the Valley of the Wind&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="观影" scheme="http://rrkaige.com/tags/%E8%A7%82%E5%BD%B1/"/>
    
      <category term="动画" scheme="http://rrkaige.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="宫崎骏" scheme="http://rrkaige.com/tags/%E5%AE%AB%E5%B4%8E%E9%AA%8F/"/>
    
  </entry>
  
  <entry>
    <title>不了之人，宫崎骏</title>
    <link href="http://rrkaige.com/2016/11/25/%E4%B8%8D%E4%BA%86%E4%B9%8B%E4%BA%BA%EF%BC%8C%E5%AE%AB%E5%B4%8E%E9%AA%8F/"/>
    <id>http://rrkaige.com/2016/11/25/不了之人，宫崎骏/</id>
    <published>2016-11-25T05:36:42.000Z</published>
    <updated>2016-11-26T12:37:35.316Z</updated>
    
    <content type="html"><![CDATA[<p> 看这部纪录片的时候，莫名感动。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161125-myblog119.jpg" alt="Hayao Miyazaki"></p>
<a id="more"></a>
<p>75 岁高龄的宫崎骏，退休三年的老爷子，准备再次出山，尝试之前一直抵触的 CG 技术，制作长篇动画。</p>
<blockquote>
<p> 和什么都不做就死了相比，在制作中死去要好得多。做点什么总比等死强。</p>
</blockquote>
<p>《风之谷》，《天空之城》，《龙猫》，《魔女宅急便》，《红猪》，《幽灵公主》，《千与千寻》，《哈尔的移动城堡》，《悬崖上的金鱼姬》，《虞美人盛开的山坡》，《起风了》……</p>
<p> 绝对高产，高质量，由此成就一个传奇。当年看《龙猫》《千与千寻》《悬崖上的金鱼姬》，里面天马行空的想象传递出的爱和美好，总能直击人心中最柔软的一处。</p>
<p> 荣光背后，是手绘的无比艰辛。据说，《起风了》中一段四秒钟镜头，足足花了一年多时间。如此专注，艺人和匠人的完美结合。</p>
<p> 试想，如果每年能完成一件让自己满意的事，大概也就五十件吧。</p>
<p> 时不我待。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看这部纪录片的时候，莫名感动。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161125-myblog119.jpg&quot; alt=&quot;Hayao Miyazaki&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="影里偷闲" scheme="http://rrkaige.com/categories/%E5%BD%B1%E9%87%8C%E5%81%B7%E9%97%B2/"/>
    
    
      <category term="纪录片" scheme="http://rrkaige.com/tags/%E7%BA%AA%E5%BD%95%E7%89%87/"/>
    
      <category term="宫崎骏" scheme="http://rrkaige.com/tags/%E5%AE%AB%E5%B4%8E%E9%AA%8F/"/>
    
  </entry>
  
  <entry>
    <title>原创何在</title>
    <link href="http://rrkaige.com/2016/11/24/%E5%8E%9F%E5%88%9B%E4%BD%95%E5%9C%A8/"/>
    <id>http://rrkaige.com/2016/11/24/原创何在/</id>
    <published>2016-11-24T14:00:31.000Z</published>
    <updated>2016-11-24T14:44:52.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p> 熙来攘往的中国电视，终于容不下这唯一一档以原创为核心的音乐真人秀，慨当以叹！——刘欢 </p>
</blockquote>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161124-myblog118.jpg" alt="Monkey King: Hero Is Back"></p>
<a id="more"></a>
<p> 食堂，电视正播放某个音乐选秀节目，女歌手翻唱一首英文歌，声嘶力竭，极其熟悉。突然发现很无聊，当年也追过这类节目，现在觉得就是浪费时间。一场场秀，除了翻唱还是翻唱，或许有不同的味道，大多依然平淡无奇。节目的噱头更多在于灯光乐器舞蹈外貌故事，谁还去关注音乐本身呢。回顾往年节目，又有几个选手真正闯出一片天。娱乐罢了。</p>
<p> 网易云音乐最近总推送日语歌，听到太多熟悉的旋律。原来，华语翻唱如此之多。底下评论中，如我一般惊讶者不少，看来大家都在井底呆太久。现在想来，杰伦作为中国风开创者确实功不可没。</p>
<p> 开头是最近刘欢老师的感慨，《中国好歌曲》据说要停摆。纷扰的世界，大环境和小环境都不适应吧。回想那时，听到《野子》，《悟空》，《卷珠帘》的惊喜，至今仍在。可惜可叹。</p>
<p> 看音乐界的原创如此艰难，纷纷扰扰净是唯利主义。其他行业何尝不是？软件，同样抄袭成风，开源也是步履维艰。两者的平衡，如此难以把控。生活的重担，如何能说放就放？短暂的一生，到底该怎样活？</p>
<p> 但愿，浮世之中，能保持一颗初心。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=33162226&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;熙来攘往的中国电视，终于容不下这唯一一档以原创为核心的音乐真人秀，慨当以叹！——刘欢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161124-myblog118.jpg&quot; alt=&quot;Monkey King: Hero Is Back&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="尘世行者" scheme="http://rrkaige.com/categories/%E5%B0%98%E4%B8%96%E8%A1%8C%E8%80%85/"/>
    
    
      <category term="随笔" scheme="http://rrkaige.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="音乐" scheme="http://rrkaige.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="原创" scheme="http://rrkaige.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>JQuery 学习笔记之三</title>
    <link href="http://rrkaige.com/2016/11/23/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89/"/>
    <id>http://rrkaige.com/2016/11/23/JQuery学习笔记之三/</id>
    <published>2016-11-23T15:12:30.000Z</published>
    <updated>2016-11-29T15:01:13.102Z</updated>
    
    <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161123-myblog117.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Traversing"><a href="#Traversing" class="headerlink" title="Traversing"></a>Traversing</h3><p>jQuery traversing, which means “move through”, are used to “find” (or select) HTML elements based on their relation to other elements. Start with one selection and move through that selection until you reach the elements you desire.</p>
<ul>
<li>An ancestor is a parent, grandparent, great-grandparent, and so on.</li>
<li>A descendant is a child, grandchild, great-grandchild, and so on.</li>
<li>Siblings share the same parent.</li>
</ul>
<h3 id="Ancestors"><a href="#Ancestors" class="headerlink" title="Ancestors"></a>Ancestors</h3><p>Three useful jQuery methods for traversing up the DOM tree are:</p>
<ul>
<li>The <code>parent()</code> method returns the direct parent element of the selected element. This method only traverse a single level up the DOM tree.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parent().css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>parents()</code> method returns all ancestor elements of the selected element, all the way up to the document’s root element (<code>&lt;html&gt;</code>). You can also use an optional parameter to filter the search for ancestors.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parents(&quot;ul&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>parentsUntil()</code> method returns all ancestor elements between two given arguments.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;span&quot;).parentsUntil(&quot;div&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Descendants"><a href="#Descendants" class="headerlink" title="Descendants"></a>Descendants</h3><p>Two useful jQuery methods for traversing down the DOM tree are:</p>
<ul>
<li>The <code>children()</code> method returns all direct children of the selected element. This method only traverse a single level down the DOM tree. You can also use an optional parameter to filter the search for children.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).children().css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).children(&quot;p.first&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>find()</code> method returns descendant elements of the selected element, all the way down to the last descendant.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div&quot;).find(&quot;*&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Siblings"><a href="#Siblings" class="headerlink" title="Siblings"></a>Siblings</h3><ul>
<li>The <code>siblings()</code> method returns all sibling elements of the selected element. You can also use an optional parameter to filter the search for siblings.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;h2&quot;).siblings(&quot;p&quot;).css(&#123;&quot;color&quot;: &quot;red&quot;, &quot;border&quot;: &quot;2px solid red&quot;&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>next()</code> method returns the next sibling element of the selected element.</li>
<li>The <code>nextAll()</code> method returns all next sibling elements of the selected element.</li>
<li>The <code>nextUntil()</code> method returns all next sibling elements between two given arguments.</li>
<li>The <code>prev()</code>, <code>prevAll()</code> and <code>prevUntil()</code> methods work just like the methods above but with reverse functionality: they return previous sibling elements (traverse backwards along sibling elements in the DOM tree, instead of forward).</li>
</ul>
<h3 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h3><ul>
<li>The <code>first()</code> method returns the first element of the selected elements.</li>
<li>The <code>last()</code> method returns the last element of the selected elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;div p&quot;).first().css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>eq()</code> method returns an element with a specific index number of the selected elements. The index numbers start at 0, so the first element will have the index number 0 and not 1.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;p&quot;).eq(1).css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>filter()</code> method lets you specify a criteria. Elements that do not match the criteria are removed from the selection, and those that match will be returned.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;p&quot;).filter(&quot;.intro&quot;).css(&quot;background-color&quot;, &quot;yellow&quot;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The <code>not()</code> method returns all elements that do not match the criteria.</li>
</ul>
<p><strong>Tip:</strong> The <code>not()</code> method is the opposite of <code>filter()</code>.</p>
<h3 id="AJAX-load-Method"><a href="#AJAX-load-Method" class="headerlink" title="AJAX load() Method"></a>AJAX load() Method</h3><p>The <code>load()</code> method loads data from a server and puts the returned data into the selected element.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).load(URL,data,callback);</div></pre></td></tr></table></figure>
<ul>
<li>The required URL parameter specifies the URL you wish to load.</li>
<li>The optional data parameter specifies a set of querystring key/value pairs to send along with the request.</li>
<li>The optional callback parameter is the name of a function to be executed after the <code>load()</code> method is completed.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).load(&quot;demo_test.txt #p1&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The optional callback parameter specifies a callback function to run when the <code>load()</code> method is completed. The callback function can have different parameters:</p>
<ul>
<li>responseTxt - contains the resulting content if the call succeeds</li>
<li>statusTxt - contains the status of the call</li>
<li>xhr - contains the XMLHttpRequest object</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).load(&quot;demo_test.txt&quot;, function(responseTxt, statusTxt, xhr)&#123;</div><div class="line">            if(statusTxt == &quot;success&quot;)</div><div class="line">                alert(&quot;External content loaded successfully!&quot;);</div><div class="line">            if(statusTxt == &quot;error&quot;)</div><div class="line">                alert(&quot;Error: &quot; + xhr.status + &quot;: &quot; + xhr.statusText);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="AJAX-get-and-post-Methods"><a href="#AJAX-get-and-post-Methods" class="headerlink" title="AJAX get() and post() Methods"></a>AJAX get() and post() Methods</h3><p>The <code>$.get()</code> method requests data from the server with an HTTP GET request.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.get(URL,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $.get(&quot;demo_test.asp&quot;, function(data, status)&#123;</div><div class="line">            alert(&quot;Data: &quot; + data + &quot;\nStatus: &quot; + status);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter of <code>$.get()</code> is the URL we wish to request (“demo_test.asp”).</li>
<li>The second parameter is a callback function. The first callback parameter holds the content of the page requested, and the second callback parameter holds the status of the request.</li>
</ul>
<p><strong>Tip:</strong> Here is how the ASP file looks like (“demo_test.asp”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">response.write(&quot;This is some text from an external ASP file.&quot;)</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<p>The <code>$.post()</code> method requests data from the server using an HTTP POST request.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.post(URL,data,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $.post(&quot;demo_test_post.asp&quot;,</div><div class="line">        &#123;</div><div class="line">          name: &quot;Donald Duck&quot;,</div><div class="line">          city: &quot;Duckburg&quot;</div><div class="line">        &#125;,</div><div class="line">        function(data,status)&#123;</div><div class="line">            alert(&quot;Data: &quot; + data + &quot;\nStatus: &quot; + status);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>The first parameter of <code>$.post()</code> is the URL we wish to request (“demo_test_post.asp”).</li>
<li>Then we pass in some data to send along with the request (name and city).</li>
<li>The ASP script in “demo_test_post.asp” reads the parameters, processes them, and returns a result.</li>
<li>The third parameter is a callback function. The first callback parameter holds the content of the page requested, and the second callback parameter holds the status of the request.</li>
</ul>
<p><strong>Tip:</strong> Here is how the ASP file looks like (“demo_test_post.asp”):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">dim fname,city</div><div class="line">fname=Request.Form(&quot;name&quot;)</div><div class="line">city=Request.Form(&quot;city&quot;)</div><div class="line">Response.Write(&quot;Dear &quot; &amp; fname &amp; &quot;. &quot;)</div><div class="line">Response.Write(&quot;Hope you live well in &quot; &amp; city &amp; &quot;.&quot;)</div><div class="line">%&gt;</div></pre></td></tr></table></figure>
<h3 id="The-noConflict-Method"><a href="#The-noConflict-Method" class="headerlink" title="The noConflict() Method"></a>The noConflict() Method</h3><p>The <code>noConflict()</code> method releases the hold on the $ shortcut identifier, so that other scripts can use it.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.noConflict();</div><div class="line">jQuery(document).ready(function()&#123;</div><div class="line">    jQuery(&quot;button&quot;).click(function()&#123;</div><div class="line">        jQuery(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>You can also create your own shortcut very easily. The <code>noConflict()</code> method returns a reference to jQuery, that you can save in a variable, for later use.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var jq = $.noConflict();</div><div class="line">jq(document).ready(function()&#123;</div><div class="line">    jq(&quot;button&quot;).click(function()&#123;</div><div class="line">        jq(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>If you have a block of jQuery code which uses the $ shortcut and you do not want to change it all, you can pass the $ sign in as a parameter to the ready method. This allows you to access jQuery using $, inside this function - outside of it, you will have to use “jQuery”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.noConflict();</div><div class="line">jQuery(document).ready(function($)&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续学习，教程来自&lt;a href=&quot;http://www.w3schools.com/jquery/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161123-myblog117.png&quot; alt=&quot;JQuery&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://rrkaige.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>域名</title>
    <link href="http://rrkaige.com/2016/11/22/%E5%9F%9F%E5%90%8D/"/>
    <id>http://rrkaige.com/2016/11/22/域名/</id>
    <published>2016-11-22T12:16:13.000Z</published>
    <updated>2016-11-22T14:01:05.095Z</updated>
    
    <content type="html"><![CDATA[<p>关于域名的一些事，整理下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161122-myblog116.gif" alt="Domain Name"></p>
<a id="more"></a>
<h3 id="域名注册"><a href="# 域名注册" class="headerlink" title="域名注册"></a>域名注册 </h3><p> 当初注册域名，本来想用 <code>kaneren.com</code> 或<code>rrk.com</code>，无奈均已被注册。所以退而求其次，在 GoDaddy 上注册了现在这个。</p>
<p>但总是不爽，本来看着快到期，想试试能否捡漏。但我还是太天真，原来还有续费保留赎回等说法。好吧，那就不等了，我再找找。</p>
<p>嘿，还真让我找着了。<code>kaneren.me</code>，<code>kaneren.xyz</code>，<code>kane.ren</code>，均未注册。</p>
<p>先科普下，域名包括顶级域名、二级域名，三级域名等。顶级域名又分为两类：</p>
<ul>
<li>国家和地区顶级域名（country code top-level domains，简称 ccTLDs），或者说国家顶级域名（national top-level domainnames，简称 nTLDs）；</li>
<li>通用顶级域名（generic top-level domains，简称 gTLDs），或者说国际顶级域名（international top-level domain names，简称 iTLDs）。</li>
</ul>
<p>现在，<code>.me</code>域名是前南斯拉夫地区西南部的国家黑山共和国（Montenegro，旧译“门的内哥罗”）的国家域名，<code>.xyz</code>和 <code>.ren</code> 域名是全球新通用顶级域名（后者竟然是人人网母公司千橡网景科技运营的）。</p>
<p>好吧，不管其他。考虑之后，决定在万网上注册 <code>kaneren.xyz</code> 和<code>kane.ren</code>，正搞促销，费用低廉，权且一试。申请付款，这两个后缀暂时不用实名认证，就此搞定。</p>
<p>从此，咱也是有三个域名的人了。手中有粮心中不慌，后面该折腾点事了。</p>
<h3 id="导航网页"><a href="# 导航网页" class="headerlink" title="导航网页"></a>导航网页 </h3><p> 于是，想着先更改个人导航网页的域名，就用<code>navi.kane.ren</code>，简单。操作如下：</p>
<ol>
<li>在万网中添加解析，给对应的二级域名添加 <code>CNAME</code> 解析到<code>kaneren.github.com</code>;</li>
<li>在 GoDaddy 中删除相应设置。</li>
<li>进入 <code>navi</code> 主页右面的 <code>Settings</code>，更改<code>Custom domain</code> 为<code>navi.kane.ren</code>；</li>
<li>更改 <code>navi</code> 项目的 <code>CNAME</code> 文件，将不带协议名的裸域名写进去(<code>navi.kane.ren</code>)。</li>
</ol>
<p>deploy 之后，等待 DNS 生效即可。</p>
<p>PS：一开始无法 deploy，和上次一样，更改 <code>.git/config</code> 文件中的 <code>rul</code> 即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于域名的一些事，整理下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161122-myblog116.gif&quot; alt=&quot;Domain Name&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="零壹之间" scheme="http://rrkaige.com/categories/%E9%9B%B6%E5%A3%B9%E4%B9%8B%E9%97%B4/"/>
    
    
      <category term="域名" scheme="http://rrkaige.com/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="导航网页" scheme="http://rrkaige.com/tags/%E5%AF%BC%E8%88%AA%E7%BD%91%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>JQuery 学习笔记之二</title>
    <link href="http://rrkaige.com/2016/11/21/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C/"/>
    <id>http://rrkaige.com/2016/11/21/JQuery学习笔记之二/</id>
    <published>2016-11-21T00:43:53.000Z</published>
    <updated>2016-11-29T15:01:00.117Z</updated>
    
    <content type="html"><![CDATA[<p> 继续学习，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-1.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Get-Content-and-Attributes"><a href="#Get-Content-and-Attributes" class="headerlink" title="Get Content and Attributes"></a>Get Content and Attributes</h3><p>Three simple, but useful, jQuery methods for DOM manipulation are:</p>
<ul>
<li><code>text()</code> - Sets or returns the text content of selected elements</li>
<li><code>html()</code> - Sets or returns the content of selected elements (including HTML markup)</li>
<li><code>val()</code> - Sets or returns the value of form fields</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        alert(&quot;Text: &quot; + $(&quot;#test&quot;).text());</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        alert(&quot;HTML: &quot; + $(&quot;#test&quot;).html());</div><div class="line">    &#125;);</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        alert(&quot;Value: &quot; + $(&quot;#test&quot;).val());</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>attr()</code> method is used to get attribute values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        alert($(&quot;#w3s&quot;).attr(&quot;href&quot;));</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Set-Content-and-Attributes"><a href="#Set-Content-and-Attributes" class="headerlink" title="Set Content and Attributes"></a>Set Content and Attributes</h3><p>We will use the same three methods from the previous page to set content:</p>
<ul>
<li><code>text()</code> - Sets or returns the text content of selected elements</li>
<li><code>html()</code> - Sets or returns the content of selected elements (including HTML markup)</li>
<li><code>val()</code> - Sets or returns the value of form fields</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test1&quot;).text(&quot;Hello world!&quot;);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test2&quot;).html(&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#btn3&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test3&quot;).val(&quot;Dolly Duck&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>All of the three jQuery methods above: <code>text()</code>, <code>html()</code>, and <code>val()</code>, also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) value. You then return the string you wish to use as the new value from the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test1&quot;).text(function(i, origText)&#123;</div><div class="line">            return &quot;Old text: &quot; + origText + &quot; New text: Hello world! (index: &quot; + i + &quot;)&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;#test2&quot;).html(function(i, origText)&#123;</div><div class="line">            return &quot;Old html: &quot; + origText + &quot; New html: Hello &lt;b&gt;world!&lt;/b&gt; (index: &quot; + i + &quot;)&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>attr()</code> method is also used to set/change attribute values. The <code>attr()</code> method also allows you to set multiple attributes at the same time.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#w3s&quot;).attr(&#123;</div><div class="line">            &quot;href&quot; : &quot;http://www.w3schools.com/jquery&quot;,</div><div class="line">            &quot;title&quot; : &quot;W3Schools jQuery Tutorial&quot;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery method <code>attr()</code>, also come with a callback function. The callback function has two parameters: the index of the current element in the list of elements selected and the original (old) attribute value. You then return the string you wish to use as the new attribute value from the function.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#w3s&quot;).attr(&quot;href&quot;, function(i, origValue)&#123;</div><div class="line">            return origValue + &quot;/jquery&quot;;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Add-Elements"><a href="#Add-Elements" class="headerlink" title="Add Elements"></a>Add Elements</h3><ul>
<li>The jQuery <code>append()</code> method inserts content AT THE END of the selected HTML elements.</li>
<li>The jQuery <code>prepend()</code> method inserts content AT THE BEGINNING of the selected HTML elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).append(&quot; &lt;b&gt;Appended text&lt;/b&gt;.&quot;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;ol&quot;).append(&quot;&lt;li&gt;Appended item&lt;/li&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Both the <code>append()</code> and <code>prepend()</code> methods can take an infinite number of new elements as parameters. The new elements can be generated with text/HTML, with jQuery, or with JavaScript code and DOM elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function appendText() &#123;</div><div class="line">    var txt1 = &quot;&lt;p&gt;Text.&lt;/p&gt;&quot;;               // Create element with HTML  </div><div class="line">    var txt2 = $(&quot;&lt;p&gt;&lt;/p&gt;&quot;).text(&quot;Text.&quot;);   // Create with jQuery</div><div class="line">    var txt3 = document.createElement(&quot;p&quot;);  // Create with DOM</div><div class="line">    txt3.innerHTML = &quot;Text.&quot;;</div><div class="line">    $(&quot;body&quot;).append(txt1, txt2, txt3);      // Append the new elements </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The jQuery <code>after()</code> method inserts content AFTER the selected HTML elements.</li>
<li>The jQuery <code>before()</code> method inserts content BEFORE the selected HTML elements.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#btn1&quot;).click(function()&#123;</div><div class="line">        $(&quot;img&quot;).before(&quot;&lt;b&gt;Before&lt;/b&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(&quot;#btn2&quot;).click(function()&#123;</div><div class="line">        $(&quot;img&quot;).after(&quot;&lt;i&gt;After&lt;/i&gt;&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function afterText() &#123;</div><div class="line">    var txt1 = &quot;&lt;b&gt;I &lt;/b&gt;&quot;;                   // Create element with HTML</div><div class="line">    var txt2 = $(&quot;&lt;i&gt;&lt;/i&gt;&quot;).text(&quot;love &quot;);    // Create with jQuery</div><div class="line">    var txt3 = document.createElement(&quot;b&quot;);   // Create with DOM</div><div class="line">    txt3.innerHTML = &quot;jQuery!&quot;;</div><div class="line">    $(&quot;img&quot;).after(txt1, txt2, txt3);      // Insert new elements after img</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Remove-Elements"><a href="#Remove-Elements" class="headerlink" title="Remove Elements"></a>Remove Elements</h3><ul>
<li>The jQuery <code>remove()</code> method removes the selected element(s) and its child elements.</li>
<li>The jQuery <code>empty()</code> method removes the child elements of the selected element(s).</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).remove();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>The jQuery <code>remove()</code> method also accepts one parameter, which allows you to filter the elements to be removed. The parameter can be any of the jQuery selector syntaxes.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).remove(&quot;.test, .demo&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Get-and-Set-CSS-Classes"><a href="#Get-and-Set-CSS-Classes" class="headerlink" title="Get and Set CSS Classes"></a>Get and Set CSS Classes</h3><ul>
<li><code>addClass()</code> - Adds one or more classes to the selected elements</li>
<li><code>removeClass()</code> - Removes one or more classes from the selected elements</li>
<li><code>toggleClass()</code> - Toggles between adding/removing classes from the selected elements</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.important &#123;</div><div class="line">    font-weight: bold;</div><div class="line">    font-size: xx-large;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.blue &#123;</div><div class="line">    color: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).addClass(&quot;important blue&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>css()</code> - Sets or returns the style attribute</li>
</ul>
<p>To return the value of a specified CSS property, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&quot;propertyname&quot;);</div></pre></td></tr></table></figure>
<p>To set a specified CSS property, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&quot;propertyname&quot;,&quot;value&quot;);</div></pre></td></tr></table></figure>
<p>To set multiple CSS properties, use the following syntax:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">css(&#123;&quot;propertyname&quot;:&quot;value&quot;,&quot;propertyname&quot;:&quot;value&quot;,...&#125;);</div></pre></td></tr></table></figure>
<h3 id="Dimensions"><a href="#Dimensions" class="headerlink" title="Dimensions"></a>Dimensions</h3><p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-2.gif" alt="JQuery"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        var txt = &quot;&quot;;</div><div class="line">        txt += &quot;Width of div: &quot; + $(&quot;#div1&quot;).width() + &quot;&lt;/br&gt;&quot;;</div><div class="line">        txt += &quot;Height of div: &quot; + $(&quot;#div1&quot;).height();</div><div class="line">        $(&quot;#div1&quot;).html(txt);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#div1&quot;).width(500).height(500);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续学习，教程来自&lt;a href=&quot;http://www.w3schools.com/jquery/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161121-myblog115-1.png&quot; alt=&quot;JQuery&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://rrkaige.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>JQuery 学习笔记之一</title>
    <link href="http://rrkaige.com/2016/11/20/JQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80/"/>
    <id>http://rrkaige.com/2016/11/20/JQuery学习笔记之一/</id>
    <published>2016-11-20T13:03:02.000Z</published>
    <updated>2016-11-21T13:51:21.550Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JQuery，教程来自 <a href="http://www.w3schools.com/jquery/default.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161120-myblog114.png" alt="JQuery"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>jQuery is a lightweight, “write less, do more”, <strong>JavaScript library</strong>.</p>
<p>The purpose of jQuery is to make it much easier to use JavaScript on your website.</p>
<p>jQuery takes a lot of common tasks that require many lines of JavaScript code to accomplish, and wraps them into methods that you can call with a single line of code.</p>
<p>jQuery also simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation.</p>
<p>The jQuery library contains the following features:</p>
<ul>
<li>HTML/DOM manipulation</li>
<li>CSS manipulation</li>
<li>HTML event methods</li>
<li>Effects and animations</li>
<li>AJAX</li>
<li>Utilities</li>
</ul>
<p><strong>Note:</strong> The jQuery team knows all about cross-browser issues, and they have written this knowledge into the jQuery library. jQuery will run exactly the same in all major browsers, including Internet Explorer 6!</p>
<h3 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h3><p>Downloading jQuery</p>
<p>There are two versions of jQuery available for downloading:</p>
<ul>
<li>Production version - this is for your live website because it has been minified and compressed</li>
<li>Development version - this is for testing and development (uncompressed and readable code)</li>
</ul>
<p>Both versions can be downloaded from jQuery.com.</p>
<p>The jQuery library is a single JavaScript file, and you reference it with the HTML <code>&lt;script&gt;</code> tag (notice that the <code>&lt;script&gt;</code> tag should be inside the <code>&lt;head&gt;</code> section):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> Place the downloaded file in the same directory as the pages where you wish to use it.</p>
<p>Do you wonder why we do not have type=”text/javascript” inside the <code>&lt;script&gt;</code> tag?</p>
<p>This is not required in HTML5. JavaScript is the default scripting language in HTML5 and in all modern browsers!</p>
<p>jQuery CDN</p>
<p>If you don’t want to download and host jQuery yourself, you can include it from a CDN (Content Delivery Network).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;script src=&quot;https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>The jQuery syntax is tailor-made for <strong>selecting</strong> HTML elements and performing some <strong>action</strong> on the element(s).</p>
<p>Basic syntax is: <code>$(selector).action()</code></p>
<ul>
<li>A $ sign to define/access jQuery</li>
<li>A (selector) to “query (or find)” HTML elements</li>
<li>A jQuery <code>action()</code> to be performed on the element(s)</li>
</ul>
<p>All jQuery methods in our examples, are inside a document ready event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">   // jQuery methods go here...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>This is to prevent any jQuery code from running before the document is finished loading (is ready).</p>
<p><strong>Tip:</strong> The jQuery team has also created an even shorter method for the document ready event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(function()&#123;</div><div class="line">   // jQuery methods go here...</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Selectors"><a href="#Selectors" class="headerlink" title="Selectors"></a>Selectors</h3><p>jQuery selectors allow you to select and manipulate HTML element(s).</p>
<p>jQuery selectors are used to “find” (or select) HTML elements based on their name, id, classes, types, attributes, values of attributes and much more. It’s based on the existing CSS Selectors, and in addition, it has some own custom selectors.</p>
<p>All selectors in jQuery start with the dollar sign and parentheses: <code>$()</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;)</div><div class="line">$(&quot;#test&quot;)</div><div class="line">$(&quot;.test&quot;)</div></pre></td></tr></table></figure>
<h3 id="Event-Methods"><a href="#Event-Methods" class="headerlink" title="Event Methods"></a>Event Methods</h3><p>All the different visitor’s actions that a web page can respond to are called events.</p>
<p>The term “<strong>fires/fired</strong>“ is often used with events. Example: “The keypress event is fired, the moment you press a key”.</p>
<p>Here are some common DOM events:</p>
<table>
<thead>
<tr>
<th>Mouse Events</th>
<th>Keyboard Events</th>
<th>Form Events</th>
<th>Document/Window Events</th>
</tr>
</thead>
<tbody>
<tr>
<td>click</td>
<td>keypress</td>
<td>submit</td>
<td>load</td>
</tr>
<tr>
<td>dblclick</td>
<td>keydown</td>
<td>change</td>
<td>resize</td>
</tr>
<tr>
<td>mouseenter</td>
<td>keyup</td>
<td>focus</td>
<td>scroll</td>
</tr>
<tr>
<td>mouseleave</td>
<td></td>
<td>blur</td>
<td>unload</td>
</tr>
</tbody>
</table>
<p>In jQuery, most DOM events have an equivalent jQuery method.</p>
<p>To assign a click event to all paragraphs on a page, you can do this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;).click();</div></pre></td></tr></table></figure>
<p>The next step is to define what should happen when the event fires. You must pass a function to the event:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&quot;p&quot;).click(function()&#123;</div><div class="line">  // action goes here!!</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Hide-and-Show"><a href="#Hide-and-Show" class="headerlink" title="Hide and Show"></a>Hide and Show</h3><p>With jQuery, you can hide and show HTML elements with the <code>hide()</code> and <code>show()</code> methods:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).hide(speed,callback);</div><div class="line">$(selector).show(speed,callback);</div></pre></td></tr></table></figure>
<ul>
<li>The optional speed parameter specifies the speed of the hiding/showing, and can take the following values: “slow”, “fast”, or milliseconds.</li>
<li>The optional callback parameter is a function to be executed after the hide() or show() method completes.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).hide(1000);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>With jQuery, you can toggle between the <code>hide()</code> and <code>show()</code> methods with the <code>toggle()</code> method.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).toggle(speed,callback);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).toggle();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Fading"><a href="#Fading" class="headerlink" title="Fading"></a>Fading</h3><p>With jQuery you can fade an element in and out of visibility.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeIn(speed,callback);</div><div class="line">$(selector).fadeOut(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>fadeToggle()</code> method toggles between the <code>fadeIn()</code> and <code>fadeOut()</code> methods.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeToggle(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>fadeTo()</code> method allows fading to a given opacity (value between 0 and 1).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).fadeTo(speed,opacity,callback);</div></pre></td></tr></table></figure>
<h3 id="Sliding"><a href="#Sliding" class="headerlink" title="Sliding"></a>Sliding</h3><p>With jQuery you can create a sliding effect on elements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(selector).slideDown(speed,callback);</div><div class="line">$(selector).slideUp(speed,callback);</div></pre></td></tr></table></figure>
<p>The jQuery <code>slideToggle()</code> method toggles between the <code>slideDown()</code> and <code>slideUp()</code> methods.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).slideToggle(speed,callback);</div></pre></td></tr></table></figure>
<h3 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h3><p>The jQuery <code>animate()</code> method is used to create custom animations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).animate(&#123;params&#125;,speed,callback);</div></pre></td></tr></table></figure>
<p>The required params parameter defines the CSS properties to be animated.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            left: &apos;250px&apos;,</div><div class="line">            opacity: &apos;0.5&apos;,</div><div class="line">            height: &apos;150px&apos;,</div><div class="line">            width: &apos;150px&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> By default, all HTML elements have a static position, and cannot be moved. To manipulate the position, remember to first set the CSS position property of the element to relative, fixed, or absolute!</p>
<p>It is also possible to define <strong>relative values</strong> (the value is then relative to the element’s current value). This is done by putting += or -= in front of the value:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            left: &apos;250px&apos;,</div><div class="line">            height: &apos;+=150px&apos;,</div><div class="line">            width: &apos;+=150px&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>You can even specify a property’s animation value as “show”, “hide”, or “toggle”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;div&quot;).animate(&#123;</div><div class="line">            height: &apos;toggle&apos;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>By default, jQuery comes with <strong>queue functionality</strong> for animations.</p>
<p>This means that if you write multiple <code>animate()</code> calls after each other, jQuery creates an “internal” queue with these method calls. Then it runs the animate calls ONE by ONE.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        var div = $(&quot;div&quot;);</div><div class="line">        div.animate(&#123;left: &apos;100px&apos;&#125;, &quot;slow&quot;);</div><div class="line">        div.animate(&#123;fontSize: &apos;3em&apos;&#125;, &quot;slow&quot;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Stop-Animations"><a href="#Stop-Animations" class="headerlink" title="Stop Animations"></a>Stop Animations</h3><p>The jQuery <code>stop()</code> method is used to stop an animation or effect before it is finished.</p>
<p>The <code>stop()</code> method works for <strong>all jQuery effect functions</strong>, including sliding, fading and custom animations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).stop(stopAll,goToEnd);</div></pre></td></tr></table></figure>
<ul>
<li>The optional stopAll parameter specifies whether also the animation queue should be cleared or not. Default is false, which means that only the active animation will be stopped, allowing any queued animations to be performed afterwards.</li>
<li>The optional goToEnd parameter specifies whether or not to complete the current animation immediately. Default is false.</li>
</ul>
<p>So, by default, the <code>stop()</code> method kills the current animation being performed on the selected element.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;#flip&quot;).click(function()&#123;</div><div class="line">        $(&quot;#panel&quot;).slideDown(5000);</div><div class="line">    &#125;);</div><div class="line">    $(&quot;#stop&quot;).click(function()&#123;</div><div class="line">        $(&quot;#panel&quot;).stop();</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Callback-Functions"><a href="#Callback-Functions" class="headerlink" title="Callback Functions"></a>Callback Functions</h3><p>JavaScript statements are executed line by line. However, with effects, the next line of code can be run even though the effect is not finished. This can create errors.</p>
<p>To prevent this, you can create a callback function.</p>
<p>A callback function is executed after the current effect is 100% finished.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;p&quot;).hide(&quot;slow&quot;, function()&#123;</div><div class="line">            alert(&quot;The paragraph is now hidden&quot;);</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Chaining"><a href="#Chaining" class="headerlink" title="Chaining"></a>Chaining</h3><p>Chaining allows us to run multiple jQuery methods (on the same element) within a single statement.</p>
<p><strong>Tip:</strong> This way, browsers do not have to find the same element(s) more than once.</p>
<p>To chain an action, you simply append the action to the previous action.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).ready(function()&#123;</div><div class="line">    $(&quot;button&quot;).click(function()&#123;</div><div class="line">        $(&quot;#p1&quot;).css(&quot;color&quot;, &quot;red&quot;)</div><div class="line">            .slideUp(2000)</div><div class="line">            .slideDown(2000);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>Tip:</strong> When chaining, the line of code could become quite long. However, jQuery is not very strict on the syntax; you can format it like you want, including line breaks and indentations.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JQuery，教程来自&lt;a href=&quot;http://www.w3schools.com/jquery/default.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161120-myblog114.png&quot; alt=&quot;JQuery&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://rrkaige.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>个人 Logo 设计</title>
    <link href="http://rrkaige.com/2016/11/19/%E4%B8%AA%E4%BA%BALogo%E8%AE%BE%E8%AE%A1/"/>
    <id>http://rrkaige.com/2016/11/19/个人Logo设计/</id>
    <published>2016-11-19T14:04:59.000Z</published>
    <updated>2016-11-19T15:12:22.993Z</updated>
    
    <content type="html"><![CDATA[<p>做一个自己独有的 Logo，想想就觉得兴奋。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-1.png" alt="RK Logo"></p>
<a id="more"></a>
<p>看到别人独具一格的个人 Logo，萌生自己设计的想法，说做就做。</p>
<p>先了解下位图和矢量图的 <a href="http://www.coreldrawchina.com/xinshourumen/weitu-shiliangtu.html" target="_blank" rel="external"> 区别</a>。</p>
<p>没有 Photoshop，那就用<a href="https://www.gimp.org/" target="_blank" rel="external">GIMP</a>。和 Photoshop 类似的操作，上手很快。</p>
<p>主要在于设计构思，利用“R”和“K”的变形，组成图案。第一版如下，略显方正。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-2.png" alt="RK Logo"></p>
<p>第二版更加抽象化，圆润些许，如下。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-3.png" alt="RK Logo"></p>
<p>就此，暂时用着，后续有好的想法再行制作。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做一个自己独有的Logo，想想就觉得兴奋。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161119-myblog113-1.png&quot; alt=&quot;RK Logo&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="零壹之间" scheme="http://rrkaige.com/categories/%E9%9B%B6%E5%A3%B9%E4%B9%8B%E9%97%B4/"/>
    
    
      <category term="Logo" scheme="http://rrkaige.com/tags/Logo/"/>
    
      <category term="GIMP" scheme="http://rrkaige.com/tags/GIMP/"/>
    
  </entry>
  
  <entry>
    <title>JSON 学习笔记</title>
    <link href="http://rrkaige.com/2016/11/18/JSON%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://rrkaige.com/2016/11/18/JSON学习笔记/</id>
    <published>2016-11-18T01:24:37.000Z</published>
    <updated>2016-11-18T13:46:09.798Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JSON，教程来自 <a href="http://www.w3schools.com/js/js_json_intro.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161118-myblog112.png" alt="JSON"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><ul>
<li>JSON stands for JavaScript Object Notation</li>
<li>JSON is a lightweight data-interchange format</li>
<li>JSON is language independent *</li>
<li>JSON is “self-describing” and easy to understand</li>
</ul>
<p><strong>Note:</strong> * JSON uses JavaScript syntax, but the JSON format is text only, just like XML. Text can be read and used as a data format by any programming language.</p>
<p>Much Like XML Because</p>
<ul>
<li>Both JSON and XML are “self describing” (human readable)</li>
<li>Both JSON and XML are hierarchical (values within values)</li>
<li>Both JSON and XML can be parsed and used by lots of programming languages</li>
<li>Both JSON and XML can be fetched with an XMLHttpRequest</li>
</ul>
<p>Much Unlike XML Because</p>
<ul>
<li>JSON doesn’t use end tag</li>
<li>JSON is shorter</li>
<li>JSON is quicker to read and write</li>
<li>JSON can use arrays</li>
</ul>
<p>The biggest difference is: XML has to be parsed with an XML parser. JSON can be parsed by a standard JavaScript function.</p>
<p>For AJAX applications, JSON is faster and easier than XML:</p>
<p>Using XML</p>
<ul>
<li>Fetch an XML document</li>
<li>Use the XML DOM to loop through the document</li>
<li>Extract values and store in variables</li>
</ul>
<p>Using JSON</p>
<ul>
<li>Fetch a JSON string</li>
<li><code>JSON.Parse</code> the JSON string</li>
</ul>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>JSON syntax is derived from JavaScript object notation syntax:</p>
<ul>
<li>Data is in name/value pairs</li>
<li>Data is separated by commas</li>
<li>Curly braces hold objects</li>
<li>Square brackets hold arrays</li>
</ul>
<p>JSON data is written as name/value pairs. A name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value.</p>
<p><strong>Note:</strong> JSON names require double quotes. JavaScript names don’t.</p>
<p>JSON values can be:</p>
<ul>
<li>A number (integer or floating point)</li>
<li>A string (in double quotes)</li>
<li>A Boolean (true or false)</li>
<li>An array (in square brackets)</li>
<li>An object (in curly braces)</li>
<li>null</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;employees&quot;:[</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;, </div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;:&quot;Jones&quot;&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>Because JSON syntax is derived from JavaScript object notation, very little extra software is needed to work with JSON within JavaScript.</p>
<p>With JavaScript you can create an array of objects and assign data to it, like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var employees = [</div><div class="line">    &#123;&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;&#125;,</div><div class="line">    &#123;&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;&#125;,</div><div class="line">    &#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;: &quot;Jones&quot;&#125;</div><div class="line">];</div></pre></td></tr></table></figure>
<p>The first entry in the JavaScript object array can be accessed like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// returns John Doe</div><div class="line">employees[0].firstName + &quot; &quot; + employees[0].lastName;</div><div class="line"></div><div class="line">employees[0][&quot;firstName&quot;] + &quot; &quot; + employees[0][&quot;lastName&quot;];</div></pre></td></tr></table></figure>
<ul>
<li>The file type for JSON files is “<code>.json</code>“</li>
<li>The MIME type for JSON text is “application/json”</li>
</ul>
<h3 id="How-To"><a href="#How-To" class="headerlink" title="How To"></a>How To</h3><p>A common use of JSON is to read data from a web server, and display the data in a web page.</p>
<p>The JavaScript function <code>JSON.parse(text)</code> can be used to convert a JSON text into a JavaScript object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var text = &apos;&#123;&quot;employees&quot;:[&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Doe&quot; &#125;,&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;Anna&quot;,&quot;lastName&quot;:&quot;Smith&quot; &#125;,&apos; +</div><div class="line">&apos;&#123;&quot;firstName&quot;:&quot;Peter&quot;,&quot;lastName&quot;:&quot;Jones&quot; &#125;]&#125;&apos;;</div><div class="line"></div><div class="line">obj = JSON.parse(text);</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">obj.employees[1].firstName + &quot; &quot; + obj.employees[1].lastName;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>Older browsers without the support for the JavaScript function <code>JSON.parse()</code> can use the <code>eval()</code> function to convert a JSON text into a JavaScript object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var obj = eval (&quot;(&quot; + text + &quot;)&quot;);</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> The <code>eval()</code> function can compile and execute any JavaScript. This represents a potential security problem. <strong>Try to avoid it</strong>.</p>
<p>It is safer to use a JSON parser to convert a JSON text to a JavaScript object.</p>
<ul>
<li>A JSON parser will recognize only JSON text and will not compile scripts.</li>
<li>In browsers that provide native JSON support, JSON parsers are also faster.</li>
</ul>
<h3 id="Http-Request"><a href="#Http-Request" class="headerlink" title="Http Request"></a>Http Request</h3><ol>
<li>Create an <strong>array of objects</strong>. Use an <strong>array literal</strong> to declare an array of objects. Give each object two properties: <strong>display</strong> and <strong>url</strong>.</li>
<li>Create a <strong>JavaScript function</strong> to display the array. Create a function <code>myFunction()</code> that loops the array objects, and display the content as HTML links.</li>
<li>Create a <strong>text file</strong>. Put the array literal in a file named <code>myTutorials.txt</code>.</li>
<li>Read the text file with an <strong>XMLHttpRequest</strong>. Write an XMLHttpRequest to read the text file, and use <code>myFunction()</code> to display the array.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;id01&quot;&gt;&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var xmlhttp = new XMLHttpRequest();</div><div class="line">var url = &quot;myTutorials.txt&quot;;</div><div class="line"></div><div class="line">xmlhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">        var myArr = JSON.parse(this.responseText);</div><div class="line">        myFunction(myArr);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">xmlhttp.open(&quot;GET&quot;, url, true);</div><div class="line">xmlhttp.send();</div><div class="line"></div><div class="line">function myFunction(arr) &#123;</div><div class="line">    var out = &quot;&quot;;</div><div class="line">    var i;</div><div class="line">    for(i = 0; i &lt; arr.length; i++) &#123;</div><div class="line">        out += &apos;&lt;a href=&quot;&apos; + arr[i].url + &apos;&quot;&gt;&apos; +</div><div class="line">        arr[i].display + &apos;&lt;/a&gt;&lt;br&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;id01&quot;).innerHTML = out;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>myTutorials.txt</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;JavaScript Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/js/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;HTML Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/html/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;CSS Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/css/default.asp&quot;</div><div class="line">&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="Function-Files"><a href="#Function-Files" class="headerlink" title="Function Files"></a>Function Files</h3><ol>
<li>Create an <strong>array of objects</strong>. Use an <strong>array literal</strong> to declare an array of objects. Give each object two properties: <strong>display</strong> and <strong>url</strong>.</li>
<li>Create a <strong>JavaScript function</strong> to display the array. Create a function <code>myFunction()</code> that loops the array objects, and display the content as HTML links.</li>
<li>Use an <strong>array literal</strong> as the argument (instead of the array variable).</li>
<li>Put the function in an external <strong>js file</strong>.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;id01&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function myFunction(arr) &#123;</div><div class="line">    var out = &quot;&quot;;</div><div class="line">    var i;</div><div class="line">    for(i = 0; i&lt;arr.length; i++) &#123;</div><div class="line">        out += &apos;&lt;a href=&quot;&apos; + arr[i].url + &apos;&quot;&gt;&apos; +</div><div class="line">        arr[i].display + &apos;&lt;/a&gt;&lt;br&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    document.getElementById(&quot;id01&quot;).innerHTML = out;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;script src=&quot;myTutorials.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>myTutorials.js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">myFunction([</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;JavaScript Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/js/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;HTML Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/html/default.asp&quot;</div><div class="line">&#125;,</div><div class="line">&#123;</div><div class="line">&quot;display&quot;: &quot;CSS Tutorial&quot;,</div><div class="line">&quot;url&quot;: &quot;http://www.w3schools.com/css/default.asp&quot;</div><div class="line">&#125;</div><div class="line">]);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JSON，教程来自&lt;a href=&quot;http://www.w3schools.com/js/js_json_intro.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161118-myblog112.png&quot; alt=&quot;JSON&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="JSON" scheme="http://rrkaige.com/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>AJAX 学习笔记</title>
    <link href="http://rrkaige.com/2016/11/17/AJAX%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://rrkaige.com/2016/11/17/AJAX学习笔记/</id>
    <published>2016-11-17T01:45:01.000Z</published>
    <updated>2016-11-24T12:44:20.211Z</updated>
    
    <content type="html"><![CDATA[<p> 学习 JavaScript AJAX，教程来自 <a href="http://www.w3schools.com/js/js_ajax_intro.asp" target="_blank" rel="external">w3schools</a>。</p>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-1.jpg" alt="AJAX"></p>
<a id="more"></a>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>AJAX = <strong>Asynchronous JavaScript And XML</strong>.</p>
<p>AJAX is not a programming language. AJAX just uses a combination of:</p>
<ul>
<li>A browser built-in XMLHttpRequest object (to request data from a web server)</li>
<li>JavaScript and HTML DOM (to display or use the data)</li>
</ul>
<p><strong>Note:</strong> AJAX is a misleading name. AJAX applications might use <strong>XML</strong> to transport data, but it is equally common to transport data as <strong>plain text</strong> or <strong>JSON text</strong>.</p>
<p>AJAX allows web pages to be updated asynchronously by exchanging data with a web server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;demo&quot;&gt;</div><div class="line">&lt;h1&gt;The XMLHttpRequest Object&lt;/h1&gt;</div><div class="line">&lt;button type=&quot;button&quot; onclick=&quot;loadDoc()&quot;&gt;Change Content&lt;/button&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function loadDoc() &#123;</div><div class="line">  var xhttp = new XMLHttpRequest();</div><div class="line">  xhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">      document.getElementById(&quot;demo&quot;).innerHTML =</div><div class="line">      this.responseText;</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line">  xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, true);</div><div class="line">  xhttp.send();</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><img src="http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-2.gif" alt="How AJAX Works"></p>
<ol>
<li>An event occurs in a web page (the page is loaded, a button is clicked)</li>
<li>An XMLHttpRequest object is created by JavaScript</li>
<li>The XMLHttpRequest object sends a request to a web server</li>
<li>The server processes the request</li>
<li>The server sends a response back to the web page</li>
<li>The response is read by JavaScript</li>
<li>Proper action (like page update) is performed by JavaScript</li>
</ol>
<h3 id="The-XMLHttpRequest-Object"><a href="#The-XMLHttpRequest-Object" class="headerlink" title="The XMLHttpRequest Object"></a>The XMLHttpRequest Object</h3><p>All modern browsers (Chrome, IE7+, Firefox, Safari, and Opera) have a built-in <strong>XMLHttpRequest</strong> object.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable = new XMLHttpRequest();</div></pre></td></tr></table></figure>
<p>Old versions of Internet Explorer (IE5 and IE6) use an ActiveX Object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">variable = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var xhttp;</div><div class="line">if (window.XMLHttpRequest) &#123;</div><div class="line">    // code for modern browsers</div><div class="line">    xhttp = new XMLHttpRequest();</div><div class="line">    &#125; else &#123;</div><div class="line">    // code for IE6, IE5</div><div class="line">    xhttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>For security reasons, modern browsers do not allow access across domains. This means that both the web page and the XML file it tries to load, must be located <strong>on the same server</strong>.</p>
<h3 id="Send-a-Request-To-a-Server"><a href="#Send-a-Request-To-a-Server" class="headerlink" title="Send a Request To a Server"></a>Send a Request To a Server</h3><p>To send a request to a server, we use the open() and send() methods of the XMLHttpRequest object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>open(method,url,async,user,psw)</td>
<td>Specifies the type of request</td>
</tr>
<tr>
<td>send()</td>
<td>Sends the request to the server (used for GET)</td>
</tr>
<tr>
<td>send(string)</td>
<td>Sends the request to the server (used for POST)</td>
</tr>
</tbody>
</table>
<ul>
<li>method: the type of request: GET or POST</li>
<li>url: the server (file) location</li>
</ul>
<p>The file can be any kind of file, like <code>.txt</code> and <code>.xml</code>, or server scripting files like <code>.asp</code> and <code>.php</code> (which can perform actions on the server before sending the response back).</p>
<ul>
<li>async: true (asynchronous) or false (synchronous)</li>
<li>user: optional user name</li>
<li>psw: optional password</li>
</ul>
<p><strong>GET</strong> is simpler and faster than <strong>POST</strong>, and can be used in most cases. However, always use POST requests when:</p>
<ul>
<li>A cached file is not an option (update a file or database on the server).</li>
<li>Sending a large amount of data to the server (POST has no size limitations).</li>
<li>Sending user input (which can contain unknown characters), POST is more robust and secure than GET.</li>
</ul>
<p>A simple GET request:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get.asp&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>In the example above, you may get a cached result. To avoid this, add a unique ID to the URL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get.asp?t=&quot; + Math.random(), true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>If you want to send information with the GET method, add the information to the URL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;demo_get2.asp?fname=Henry&amp;lname=Ford&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>A simple POST request:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;POST&quot;, &quot;demo_post.asp&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<p>To POST data like an HTML form, add an HTTP header with setRequestHeader(). Specify the data you want to send in the send() method:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;POST&quot;, &quot;ajax_test.asp&quot;, true);</div><div class="line">xhttp.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</div><div class="line">xhttp.send(&quot;fname=Henry&amp;lname=Ford&quot;);</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>setRequestHeader(header, value)</td>
<td>Adds HTTP headers to the request</td>
</tr>
</tbody>
</table>
<ul>
<li>header: specifies the header name</li>
<li>value: specifies the header value</li>
</ul>
<p>Using async=false is not recommended, but for a few small requests this can be ok. Remember that the JavaScript will NOT continue to execute, until the server response is ready. If the server is busy or slow, the application will hang or stop.</p>
<p><strong>Note:</strong> When you use async=false, do NOT write an onreadystatechange function - just put the code after the send() statement:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhttp.open(&quot;GET&quot;, &quot;ajax_info.txt&quot;, false);</div><div class="line">xhttp.send();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = xhttp.responseText;</div></pre></td></tr></table></figure>
<h3 id="Server-Response"><a href="#Server-Response" class="headerlink" title="Server Response"></a>Server Response</h3><table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>onreadystatechange</td>
<td>Defines a function to be called when the readyState property changes</td>
</tr>
<tr>
<td>readyState</td>
<td>Holds the status of the XMLHttpRequest. (0: request not initialized; 1: server connection established; 2: request received; 3: processing request; 4: request finished and response is ready)</td>
</tr>
<tr>
<td>status</td>
<td>200: “OK”; 403: “Forbidden”; 404: “Page not found”</td>
</tr>
<tr>
<td>statusText</td>
<td>Returns the status-text (e.g. “OK” or “Not Found”)</td>
</tr>
</tbody>
</table>
<p><strong>Note:</strong> The onreadystatechange event is triggered five times (0-4), one time for each change in readyState.</p>
<p>A <strong>callback function</strong> is a function passed as a parameter to another function.</p>
<p>If you have more than one AJAX task a website, you should create one function for executing the XMLHttpRequest object, and one callback function for each AJAX task.</p>
<p>The function call should contain the URL and what function to call when the response is ready.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">loadDoc(&quot;url-1&quot;, myFunction1);</div><div class="line"></div><div class="line">loadDoc(&quot;url-2&quot;, myFunction2);</div><div class="line"></div><div class="line">function loadDoc(url, cFunction) &#123;</div><div class="line">  var xhttp;</div><div class="line">  xhttp=new XMLHttpRequest();</div><div class="line">  xhttp.onreadystatechange = function() &#123;</div><div class="line">    if (this.readyState == 4 &amp;&amp; this.status == 200) &#123;</div><div class="line">      cFunction(this);</div><div class="line">    &#125;</div><div class="line"> 	&#125;;</div><div class="line">  xhttp.open(&quot;GET&quot;, url, true);</div><div class="line">  xhttp.send();</div><div class="line">&#125;</div><div class="line"></div><div class="line">function myFunction1(xhttp) &#123;</div><div class="line">  // action goes here</div><div class="line">&#125; </div><div class="line">function myFunction2(xhttp) &#123;</div><div class="line">  // action goes here</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>responseText</td>
<td>get the response data as a string</td>
</tr>
<tr>
<td>responseXML</td>
<td>get the response data as XML data</td>
</tr>
<tr>
<td>getResponseHeader()</td>
<td>Returns specific header information from the server resource</td>
</tr>
<tr>
<td>getAllResponseHeaders()</td>
<td>Returns all the header information from the server resource</td>
</tr>
</tbody>
</table>
<p>The <strong>responseText</strong> property returns the server response as a JavaScript string, and you can use it accordingly:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = xhttp.responseText;</div></pre></td></tr></table></figure>
<p>The <strong>responseXML</strong> property returns the server response as an XML DOM object. Using this property you can parse the response as an XML DOM object:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">xmlDoc = xhttp.responseXML;</div><div class="line">txt = &quot;&quot;;</div><div class="line">x = xmlDoc.getElementsByTagName(&quot;ARTIST&quot;);</div><div class="line">for (i = 0; i &lt; x.length; i++) &#123;</div><div class="line">  txt += x[i].childNodes[0].nodeValue + &quot;&lt;br&gt;&quot;;</div><div class="line">  &#125;</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = txt;</div><div class="line">xhttp.open(&quot;GET&quot;, &quot;cd_catalog.xml&quot;, true);</div><div class="line">xhttp.send();</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = this.getAllResponseHeaders();</div><div class="line">document.getElementById(&quot;demo&quot;).innerHTML = this.getResponseHeader(&quot;Last-Modified&quot;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习JavaScript AJAX，教程来自&lt;a href=&quot;http://www.w3schools.com/js/js_ajax_intro.asp&quot;&gt;w3schools&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ob0mgqhy4.bkt.clouddn.com/20161117-myblog111-1.jpg&quot; alt=&quot;AJAX&quot; /&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web征途" scheme="http://rrkaige.com/categories/Web%E5%BE%81%E9%80%94/"/>
    
    
      <category term="学习" scheme="http://rrkaige.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="笔记" scheme="http://rrkaige.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://rrkaige.com/tags/JavaScript/"/>
    
      <category term="AJAX" scheme="http://rrkaige.com/tags/AJAX/"/>
    
  </entry>
  
</feed>
